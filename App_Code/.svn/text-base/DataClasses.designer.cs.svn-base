#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="monks_stg")]
public partial class MonkData : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
    partial void Insertjkp_Visa(Monks.jkp_Visa instance);
    partial void Updatejkp_Visa(Monks.jkp_Visa instance);
    partial void Deletejkp_Visa(Monks.jkp_Visa instance);
    partial void Insertaspnet_Application(Monks.aspnet_Application instance);
    partial void Updateaspnet_Application(Monks.aspnet_Application instance);
    partial void Deleteaspnet_Application(Monks.aspnet_Application instance);
    partial void Insertaspnet_Membership(Monks.aspnet_Membership instance);
    partial void Updateaspnet_Membership(Monks.aspnet_Membership instance);
    partial void Deleteaspnet_Membership(Monks.aspnet_Membership instance);
    partial void Insertaspnet_MenuItem(Monks.aspnet_MenuItem instance);
    partial void Updateaspnet_MenuItem(Monks.aspnet_MenuItem instance);
    partial void Deleteaspnet_MenuItem(Monks.aspnet_MenuItem instance);
    partial void Insertaspnet_PageUnderRole(Monks.aspnet_PageUnderRole instance);
    partial void Updateaspnet_PageUnderRole(Monks.aspnet_PageUnderRole instance);
    partial void Deleteaspnet_PageUnderRole(Monks.aspnet_PageUnderRole instance);
    partial void Insertaspnet_Path(Monks.aspnet_Path instance);
    partial void Updateaspnet_Path(Monks.aspnet_Path instance);
    partial void Deleteaspnet_Path(Monks.aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(Monks.aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(Monks.aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(Monks.aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(Monks.aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(Monks.aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(Monks.aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(Monks.aspnet_Profile instance);
    partial void Updateaspnet_Profile(Monks.aspnet_Profile instance);
    partial void Deleteaspnet_Profile(Monks.aspnet_Profile instance);
    partial void Insertaspnet_Role(Monks.aspnet_Role instance);
    partial void Updateaspnet_Role(Monks.aspnet_Role instance);
    partial void Deleteaspnet_Role(Monks.aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(Monks.aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(Monks.aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(Monks.aspnet_SchemaVersion instance);
    partial void Insertaspnet_TableUnderRole(Monks.aspnet_TableUnderRole instance);
    partial void Updateaspnet_TableUnderRole(Monks.aspnet_TableUnderRole instance);
    partial void Deleteaspnet_TableUnderRole(Monks.aspnet_TableUnderRole instance);
    partial void Insertaspnet_User(Monks.aspnet_User instance);
    partial void Updateaspnet_User(Monks.aspnet_User instance);
    partial void Deleteaspnet_User(Monks.aspnet_User instance);
    partial void Insertaspnet_UsersInRole(Monks.aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(Monks.aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(Monks.aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(Monks.aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(Monks.aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(Monks.aspnet_WebEvent_Event instance);
    partial void Insertjkp_Account(Monks.jkp_Account instance);
    partial void Updatejkp_Account(Monks.jkp_Account instance);
    partial void Deletejkp_Account(Monks.jkp_Account instance);
    partial void Insertjkp_Action(Monks.jkp_Action instance);
    partial void Updatejkp_Action(Monks.jkp_Action instance);
    partial void Deletejkp_Action(Monks.jkp_Action instance);
    partial void Insertjkp_Activity(Monks.jkp_Activity instance);
    partial void Updatejkp_Activity(Monks.jkp_Activity instance);
    partial void Deletejkp_Activity(Monks.jkp_Activity instance);
    partial void Insertjkp_Address(Monks.jkp_Address instance);
    partial void Updatejkp_Address(Monks.jkp_Address instance);
    partial void Deletejkp_Address(Monks.jkp_Address instance);
    partial void Insertjkp_Adjustment(Monks.jkp_Adjustment instance);
    partial void Updatejkp_Adjustment(Monks.jkp_Adjustment instance);
    partial void Deletejkp_Adjustment(Monks.jkp_Adjustment instance);
    partial void Insertjkp_Article(Monks.jkp_Article instance);
    partial void Updatejkp_Article(Monks.jkp_Article instance);
    partial void Deletejkp_Article(Monks.jkp_Article instance);
    partial void Insertjkp_ArticleCategory(Monks.jkp_ArticleCategory instance);
    partial void Updatejkp_ArticleCategory(Monks.jkp_ArticleCategory instance);
    partial void Deletejkp_ArticleCategory(Monks.jkp_ArticleCategory instance);
    partial void Insertjkp_ArticlePage(Monks.jkp_ArticlePage instance);
    partial void Updatejkp_ArticlePage(Monks.jkp_ArticlePage instance);
    partial void Deletejkp_ArticlePage(Monks.jkp_ArticlePage instance);
    partial void Insertjkp_Assignment(Monks.jkp_Assignment instance);
    partial void Updatejkp_Assignment(Monks.jkp_Assignment instance);
    partial void Deletejkp_Assignment(Monks.jkp_Assignment instance);
    partial void Insertjkp_Audio(Monks.jkp_Audio instance);
    partial void Updatejkp_Audio(Monks.jkp_Audio instance);
    partial void Deletejkp_Audio(Monks.jkp_Audio instance);
    partial void Insertjkp_AudioActivity(Monks.jkp_AudioActivity instance);
    partial void Updatejkp_AudioActivity(Monks.jkp_AudioActivity instance);
    partial void Deletejkp_AudioActivity(Monks.jkp_AudioActivity instance);
    partial void Insertjkp_Authority(Monks.jkp_Authority instance);
    partial void Updatejkp_Authority(Monks.jkp_Authority instance);
    partial void Deletejkp_Authority(Monks.jkp_Authority instance);
    partial void Insertjkp_AuthorityMediaAction(Monks.jkp_AuthorityMediaAction instance);
    partial void Updatejkp_AuthorityMediaAction(Monks.jkp_AuthorityMediaAction instance);
    partial void Deletejkp_AuthorityMediaAction(Monks.jkp_AuthorityMediaAction instance);
    partial void Insertjkp_AuthorityTablesAction(Monks.jkp_AuthorityTablesAction instance);
    partial void Updatejkp_AuthorityTablesAction(Monks.jkp_AuthorityTablesAction instance);
    partial void Deletejkp_AuthorityTablesAction(Monks.jkp_AuthorityTablesAction instance);
    partial void Insertjkp_Book(Monks.jkp_Book instance);
    partial void Updatejkp_Book(Monks.jkp_Book instance);
    partial void Deletejkp_Book(Monks.jkp_Book instance);
    partial void Insertjkp_BookActivity(Monks.jkp_BookActivity instance);
    partial void Updatejkp_BookActivity(Monks.jkp_BookActivity instance);
    partial void Deletejkp_BookActivity(Monks.jkp_BookActivity instance);
    partial void Insertjkp_Building(Monks.jkp_Building instance);
    partial void Updatejkp_Building(Monks.jkp_Building instance);
    partial void Deletejkp_Building(Monks.jkp_Building instance);
    partial void Insertjkp_Collection(Monks.jkp_Collection instance);
    partial void Updatejkp_Collection(Monks.jkp_Collection instance);
    partial void Deletejkp_Collection(Monks.jkp_Collection instance);
    partial void Insertjkp_Contact(Monks.jkp_Contact instance);
    partial void Updatejkp_Contact(Monks.jkp_Contact instance);
    partial void Deletejkp_Contact(Monks.jkp_Contact instance);
    partial void Insertjkp_Contribution(Monks.jkp_Contribution instance);
    partial void Updatejkp_Contribution(Monks.jkp_Contribution instance);
    partial void Deletejkp_Contribution(Monks.jkp_Contribution instance);
    partial void Insertjkp_ContributionAccount(Monks.jkp_ContributionAccount instance);
    partial void Updatejkp_ContributionAccount(Monks.jkp_ContributionAccount instance);
    partial void Deletejkp_ContributionAccount(Monks.jkp_ContributionAccount instance);
    partial void Insertjkp_DiscussionGroup(Monks.jkp_DiscussionGroup instance);
    partial void Updatejkp_DiscussionGroup(Monks.jkp_DiscussionGroup instance);
    partial void Deletejkp_DiscussionGroup(Monks.jkp_DiscussionGroup instance);
    partial void Insertjkp_Document(Monks.jkp_Document instance);
    partial void Updatejkp_Document(Monks.jkp_Document instance);
    partial void Deletejkp_Document(Monks.jkp_Document instance);
    partial void Insertjkp_DocumentActivity(Monks.jkp_DocumentActivity instance);
    partial void Updatejkp_DocumentActivity(Monks.jkp_DocumentActivity instance);
    partial void Deletejkp_DocumentActivity(Monks.jkp_DocumentActivity instance);
    partial void Insertjkp_DriversLicense(Monks.jkp_DriversLicense instance);
    partial void Updatejkp_DriversLicense(Monks.jkp_DriversLicense instance);
    partial void Deletejkp_DriversLicense(Monks.jkp_DriversLicense instance);
    partial void Insertjkp_FamilyGroup(Monks.jkp_FamilyGroup instance);
    partial void Updatejkp_FamilyGroup(Monks.jkp_FamilyGroup instance);
    partial void Deletejkp_FamilyGroup(Monks.jkp_FamilyGroup instance);
    partial void Insertjkp_FileType(Monks.jkp_FileType instance);
    partial void Updatejkp_FileType(Monks.jkp_FileType instance);
    partial void Deletejkp_FileType(Monks.jkp_FileType instance);
    partial void Insertjkp_GeneralQuestion(Monks.jkp_GeneralQuestion instance);
    partial void Updatejkp_GeneralQuestion(Monks.jkp_GeneralQuestion instance);
    partial void Deletejkp_GeneralQuestion(Monks.jkp_GeneralQuestion instance);
    partial void Insertjkp_Hamlet(Monks.jkp_Hamlet instance);
    partial void Updatejkp_Hamlet(Monks.jkp_Hamlet instance);
    partial void Deletejkp_Hamlet(Monks.jkp_Hamlet instance);
    partial void Insertjkp_Image(Monks.jkp_Image instance);
    partial void Updatejkp_Image(Monks.jkp_Image instance);
    partial void Deletejkp_Image(Monks.jkp_Image instance);
    partial void Insertjkp_ImageActivity(Monks.jkp_ImageActivity instance);
    partial void Updatejkp_ImageActivity(Monks.jkp_ImageActivity instance);
    partial void Deletejkp_ImageActivity(Monks.jkp_ImageActivity instance);
    partial void Insertjkp_Language(Monks.jkp_Language instance);
    partial void Updatejkp_Language(Monks.jkp_Language instance);
    partial void Deletejkp_Language(Monks.jkp_Language instance);
    partial void Insertjkp_Media(Monks.jkp_Media instance);
    partial void Updatejkp_Media(Monks.jkp_Media instance);
    partial void Deletejkp_Media(Monks.jkp_Media instance);
    partial void Insertjkp_MediaRole(Monks.jkp_MediaRole instance);
    partial void Updatejkp_MediaRole(Monks.jkp_MediaRole instance);
    partial void Deletejkp_MediaRole(Monks.jkp_MediaRole instance);
    partial void Insertjkp_MedicalQuestion(Monks.jkp_MedicalQuestion instance);
    partial void Updatejkp_MedicalQuestion(Monks.jkp_MedicalQuestion instance);
    partial void Deletejkp_MedicalQuestion(Monks.jkp_MedicalQuestion instance);
    partial void Insertjkp_OrdinationFamily(Monks.jkp_OrdinationFamily instance);
    partial void Updatejkp_OrdinationFamily(Monks.jkp_OrdinationFamily instance);
    partial void Deletejkp_OrdinationFamily(Monks.jkp_OrdinationFamily instance);
    partial void Insertjkp_Passport(Monks.jkp_Passport instance);
    partial void Updatejkp_Passport(Monks.jkp_Passport instance);
    partial void Deletejkp_Passport(Monks.jkp_Passport instance);
    partial void Insertjkp_Person(Monks.jkp_Person instance);
    partial void Updatejkp_Person(Monks.jkp_Person instance);
    partial void Deletejkp_Person(Monks.jkp_Person instance);
    partial void Insertjkp_PersonActivity(Monks.jkp_PersonActivity instance);
    partial void Updatejkp_PersonActivity(Monks.jkp_PersonActivity instance);
    partial void Deletejkp_PersonActivity(Monks.jkp_PersonActivity instance);
    partial void Insertjkp_PersonAssignmentActivity(Monks.jkp_PersonAssignmentActivity instance);
    partial void Updatejkp_PersonAssignmentActivity(Monks.jkp_PersonAssignmentActivity instance);
    partial void Deletejkp_PersonAssignmentActivity(Monks.jkp_PersonAssignmentActivity instance);
    partial void Insertjkp_PersonAssignmentRetreat(Monks.jkp_PersonAssignmentRetreat instance);
    partial void Updatejkp_PersonAssignmentRetreat(Monks.jkp_PersonAssignmentRetreat instance);
    partial void Deletejkp_PersonAssignmentRetreat(Monks.jkp_PersonAssignmentRetreat instance);
    partial void Insertjkp_PersonAttendingRetreat(Monks.jkp_PersonAttendingRetreat instance);
    partial void Updatejkp_PersonAttendingRetreat(Monks.jkp_PersonAttendingRetreat instance);
    partial void Deletejkp_PersonAttendingRetreat(Monks.jkp_PersonAttendingRetreat instance);
    partial void Insertjkp_PersonAudio(Monks.jkp_PersonAudio instance);
    partial void Updatejkp_PersonAudio(Monks.jkp_PersonAudio instance);
    partial void Deletejkp_PersonAudio(Monks.jkp_PersonAudio instance);
    partial void Insertjkp_PersonBook(Monks.jkp_PersonBook instance);
    partial void Updatejkp_PersonBook(Monks.jkp_PersonBook instance);
    partial void Deletejkp_PersonBook(Monks.jkp_PersonBook instance);
    partial void Insertjkp_PersonContributionRetreat(Monks.jkp_PersonContributionRetreat instance);
    partial void Updatejkp_PersonContributionRetreat(Monks.jkp_PersonContributionRetreat instance);
    partial void Deletejkp_PersonContributionRetreat(Monks.jkp_PersonContributionRetreat instance);
    partial void Insertjkp_PersonDiscussionGroup(Monks.jkp_PersonDiscussionGroup instance);
    partial void Updatejkp_PersonDiscussionGroup(Monks.jkp_PersonDiscussionGroup instance);
    partial void Deletejkp_PersonDiscussionGroup(Monks.jkp_PersonDiscussionGroup instance);
    partial void Insertjkp_PersonDocument(Monks.jkp_PersonDocument instance);
    partial void Updatejkp_PersonDocument(Monks.jkp_PersonDocument instance);
    partial void Deletejkp_PersonDocument(Monks.jkp_PersonDocument instance);
    partial void Insertjkp_PersonGeneralQuestion(Monks.jkp_PersonGeneralQuestion instance);
    partial void Updatejkp_PersonGeneralQuestion(Monks.jkp_PersonGeneralQuestion instance);
    partial void Deletejkp_PersonGeneralQuestion(Monks.jkp_PersonGeneralQuestion instance);
    partial void Insertjkp_PersonImage(Monks.jkp_PersonImage instance);
    partial void Updatejkp_PersonImage(Monks.jkp_PersonImage instance);
    partial void Deletejkp_PersonImage(Monks.jkp_PersonImage instance);
    partial void Insertjkp_PersonMedicalQuestion(Monks.jkp_PersonMedicalQuestion instance);
    partial void Updatejkp_PersonMedicalQuestion(Monks.jkp_PersonMedicalQuestion instance);
    partial void Deletejkp_PersonMedicalQuestion(Monks.jkp_PersonMedicalQuestion instance);
    partial void Insertjkp_PersonReceivesTraining(Monks.jkp_PersonReceivesTraining instance);
    partial void Updatejkp_PersonReceivesTraining(Monks.jkp_PersonReceivesTraining instance);
    partial void Deletejkp_PersonReceivesTraining(Monks.jkp_PersonReceivesTraining instance);
    partial void Insertjkp_PersonSangha(Monks.jkp_PersonSangha instance);
    partial void Updatejkp_PersonSangha(Monks.jkp_PersonSangha instance);
    partial void Deletejkp_PersonSangha(Monks.jkp_PersonSangha instance);
    partial void Insertjkp_PersonTransmitsTraining(Monks.jkp_PersonTransmitsTraining instance);
    partial void Updatejkp_PersonTransmitsTraining(Monks.jkp_PersonTransmitsTraining instance);
    partial void Deletejkp_PersonTransmitsTraining(Monks.jkp_PersonTransmitsTraining instance);
    partial void Insertjkp_PersonVideo(Monks.jkp_PersonVideo instance);
    partial void Updatejkp_PersonVideo(Monks.jkp_PersonVideo instance);
    partial void Deletejkp_PersonVideo(Monks.jkp_PersonVideo instance);
    partial void Insertjkp_Rate(Monks.jkp_Rate instance);
    partial void Updatejkp_Rate(Monks.jkp_Rate instance);
    partial void Deletejkp_Rate(Monks.jkp_Rate instance);
    partial void Insertjkp_Retreat(Monks.jkp_Retreat instance);
    partial void Updatejkp_Retreat(Monks.jkp_Retreat instance);
    partial void Deletejkp_Retreat(Monks.jkp_Retreat instance);
    partial void Insertjkp_Room(Monks.jkp_Room instance);
    partial void Updatejkp_Room(Monks.jkp_Room instance);
    partial void Deletejkp_Room(Monks.jkp_Room instance);
    partial void Insertjkp_RoomRate(Monks.jkp_RoomRate instance);
    partial void Updatejkp_RoomRate(Monks.jkp_RoomRate instance);
    partial void Deletejkp_RoomRate(Monks.jkp_RoomRate instance);
    partial void Insertjkp_RoomType(Monks.jkp_RoomType instance);
    partial void Updatejkp_RoomType(Monks.jkp_RoomType instance);
    partial void Deletejkp_RoomType(Monks.jkp_RoomType instance);
    partial void Insertjkp_RoomTypeAdjustment(Monks.jkp_RoomTypeAdjustment instance);
    partial void Updatejkp_RoomTypeAdjustment(Monks.jkp_RoomTypeAdjustment instance);
    partial void Deletejkp_RoomTypeAdjustment(Monks.jkp_RoomTypeAdjustment instance);
    partial void Insertjkp_RoomTypeRate(Monks.jkp_RoomTypeRate instance);
    partial void Updatejkp_RoomTypeRate(Monks.jkp_RoomTypeRate instance);
    partial void Deletejkp_RoomTypeRate(Monks.jkp_RoomTypeRate instance);
    partial void Insertjkp_Sangha(Monks.jkp_Sangha instance);
    partial void Updatejkp_Sangha(Monks.jkp_Sangha instance);
    partial void Deletejkp_Sangha(Monks.jkp_Sangha instance);
    partial void Insertjkp_Site(Monks.jkp_Site instance);
    partial void Updatejkp_Site(Monks.jkp_Site instance);
    partial void Deletejkp_Site(Monks.jkp_Site instance);
    partial void Insertjkp_Table(Monks.jkp_Table instance);
    partial void Updatejkp_Table(Monks.jkp_Table instance);
    partial void Deletejkp_Table(Monks.jkp_Table instance);
    partial void Insertjkp_Training(Monks.jkp_Training instance);
    partial void Updatejkp_Training(Monks.jkp_Training instance);
    partial void Deletejkp_Training(Monks.jkp_Training instance);
    partial void Insertjkp_Video(Monks.jkp_Video instance);
    partial void Updatejkp_Video(Monks.jkp_Video instance);
    partial void Deletejkp_Video(Monks.jkp_Video instance);
    partial void Insertjkp_VideoActivity(Monks.jkp_VideoActivity instance);
    partial void Updatejkp_VideoActivity(Monks.jkp_VideoActivity instance);
    partial void Deletejkp_VideoActivity(Monks.jkp_VideoActivity instance);
  #endregion
	
	public MonkData() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["monks_stgConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MonkData(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MonkData(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MonkData(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MonkData(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Monks.jkp_Visa> jkp_Visas
	{
		get
		{
			return this.GetTable<Monks.jkp_Visa>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_Application> aspnet_Applications
	{
		get
		{
			return this.GetTable<Monks.aspnet_Application>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this.GetTable<Monks.aspnet_Membership>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_MenuItem> aspnet_MenuItems
	{
		get
		{
			return this.GetTable<Monks.aspnet_MenuItem>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_PageUnderRole> aspnet_PageUnderRoles
	{
		get
		{
			return this.GetTable<Monks.aspnet_PageUnderRole>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_Path> aspnet_Paths
	{
		get
		{
			return this.GetTable<Monks.aspnet_Path>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
	{
		get
		{
			return this.GetTable<Monks.aspnet_PersonalizationAllUser>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this.GetTable<Monks.aspnet_PersonalizationPerUser>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_Profile> aspnet_Profiles
	{
		get
		{
			return this.GetTable<Monks.aspnet_Profile>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_Role> aspnet_Roles
	{
		get
		{
			return this.GetTable<Monks.aspnet_Role>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_SchemaVersion> aspnet_SchemaVersions
	{
		get
		{
			return this.GetTable<Monks.aspnet_SchemaVersion>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_TableUnderRole> aspnet_TableUnderRoles
	{
		get
		{
			return this.GetTable<Monks.aspnet_TableUnderRole>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<Monks.aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this.GetTable<Monks.aspnet_UsersInRole>();
		}
	}
	
	public System.Data.Linq.Table<Monks.aspnet_WebEvent_Event> aspnet_WebEvent_Events
	{
		get
		{
			return this.GetTable<Monks.aspnet_WebEvent_Event>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Account> jkp_Accounts
	{
		get
		{
			return this.GetTable<Monks.jkp_Account>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Action> jkp_Actions
	{
		get
		{
			return this.GetTable<Monks.jkp_Action>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Activity> jkp_Activities
	{
		get
		{
			return this.GetTable<Monks.jkp_Activity>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Address> jkp_Addresses
	{
		get
		{
			return this.GetTable<Monks.jkp_Address>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Adjustment> jkp_Adjustments
	{
		get
		{
			return this.GetTable<Monks.jkp_Adjustment>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Article> jkp_Articles
	{
		get
		{
			return this.GetTable<Monks.jkp_Article>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_ArticleCategory> jkp_ArticleCategories
	{
		get
		{
			return this.GetTable<Monks.jkp_ArticleCategory>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_ArticlePage> jkp_ArticlePages
	{
		get
		{
			return this.GetTable<Monks.jkp_ArticlePage>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Assignment> jkp_Assignments
	{
		get
		{
			return this.GetTable<Monks.jkp_Assignment>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Audio> jkp_Audios
	{
		get
		{
			return this.GetTable<Monks.jkp_Audio>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_AudioActivity> jkp_AudioActivities
	{
		get
		{
			return this.GetTable<Monks.jkp_AudioActivity>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Authority> jkp_Authorities
	{
		get
		{
			return this.GetTable<Monks.jkp_Authority>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_AuthorityMediaAction> jkp_AuthorityMediaActions
	{
		get
		{
			return this.GetTable<Monks.jkp_AuthorityMediaAction>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_AuthorityTablesAction> jkp_AuthorityTablesActions
	{
		get
		{
			return this.GetTable<Monks.jkp_AuthorityTablesAction>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Book> jkp_Books
	{
		get
		{
			return this.GetTable<Monks.jkp_Book>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_BookActivity> jkp_BookActivities
	{
		get
		{
			return this.GetTable<Monks.jkp_BookActivity>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Building> jkp_Buildings
	{
		get
		{
			return this.GetTable<Monks.jkp_Building>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Collection> jkp_Collections
	{
		get
		{
			return this.GetTable<Monks.jkp_Collection>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Contact> jkp_Contacts
	{
		get
		{
			return this.GetTable<Monks.jkp_Contact>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Contribution> jkp_Contributions
	{
		get
		{
			return this.GetTable<Monks.jkp_Contribution>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_ContributionAccount> jkp_ContributionAccounts
	{
		get
		{
			return this.GetTable<Monks.jkp_ContributionAccount>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_DiscussionGroup> jkp_DiscussionGroups
	{
		get
		{
			return this.GetTable<Monks.jkp_DiscussionGroup>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Document> jkp_Documents
	{
		get
		{
			return this.GetTable<Monks.jkp_Document>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_DocumentActivity> jkp_DocumentActivities
	{
		get
		{
			return this.GetTable<Monks.jkp_DocumentActivity>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_DriversLicense> jkp_DriversLicenses
	{
		get
		{
			return this.GetTable<Monks.jkp_DriversLicense>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_FamilyGroup> jkp_FamilyGroups
	{
		get
		{
			return this.GetTable<Monks.jkp_FamilyGroup>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_FileType> jkp_FileTypes
	{
		get
		{
			return this.GetTable<Monks.jkp_FileType>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_GeneralQuestion> jkp_GeneralQuestions
	{
		get
		{
			return this.GetTable<Monks.jkp_GeneralQuestion>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Hamlet> jkp_Hamlets
	{
		get
		{
			return this.GetTable<Monks.jkp_Hamlet>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Image> jkp_Images
	{
		get
		{
			return this.GetTable<Monks.jkp_Image>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_ImageActivity> jkp_ImageActivities
	{
		get
		{
			return this.GetTable<Monks.jkp_ImageActivity>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Language> jkp_Languages
	{
		get
		{
			return this.GetTable<Monks.jkp_Language>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Media> jkp_Medias
	{
		get
		{
			return this.GetTable<Monks.jkp_Media>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_MediaRole> jkp_MediaRoles
	{
		get
		{
			return this.GetTable<Monks.jkp_MediaRole>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_MedicalQuestion> jkp_MedicalQuestions
	{
		get
		{
			return this.GetTable<Monks.jkp_MedicalQuestion>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_OrdinationFamily> jkp_OrdinationFamilies
	{
		get
		{
			return this.GetTable<Monks.jkp_OrdinationFamily>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Passport> jkp_Passports
	{
		get
		{
			return this.GetTable<Monks.jkp_Passport>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Person> jkp_Persons
	{
		get
		{
			return this.GetTable<Monks.jkp_Person>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonActivity> jkp_PersonActivities
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonActivity>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonAssignmentActivity> jkp_PersonAssignmentActivities
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonAssignmentActivity>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonAssignmentRetreat> jkp_PersonAssignmentRetreats
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonAssignmentRetreat>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonAttendingRetreat> jkp_PersonAttendingRetreats
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonAttendingRetreat>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonAudio> jkp_PersonAudios
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonAudio>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonBook> jkp_PersonBooks
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonBook>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonContributionRetreat> jkp_PersonContributionRetreats
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonContributionRetreat>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonDiscussionGroup> jkp_PersonDiscussionGroups
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonDiscussionGroup>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonDocument> jkp_PersonDocuments
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonDocument>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonGeneralQuestion> jkp_PersonGeneralQuestions
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonGeneralQuestion>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonImage> jkp_PersonImages
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonImage>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonMedicalQuestion> jkp_PersonMedicalQuestions
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonMedicalQuestion>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonReceivesTraining> jkp_PersonReceivesTrainings
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonReceivesTraining>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonSangha> jkp_PersonSanghas
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonSangha>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonTransmitsTraining> jkp_PersonTransmitsTrainings
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonTransmitsTraining>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_PersonVideo> jkp_PersonVideos
	{
		get
		{
			return this.GetTable<Monks.jkp_PersonVideo>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Rate> jkp_Rates
	{
		get
		{
			return this.GetTable<Monks.jkp_Rate>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Retreat> jkp_Retreats
	{
		get
		{
			return this.GetTable<Monks.jkp_Retreat>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Room> jkp_Rooms
	{
		get
		{
			return this.GetTable<Monks.jkp_Room>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_RoomRate> jkp_RoomRates
	{
		get
		{
			return this.GetTable<Monks.jkp_RoomRate>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_RoomType> jkp_RoomTypes
	{
		get
		{
			return this.GetTable<Monks.jkp_RoomType>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_RoomTypeAdjustment> jkp_RoomTypeAdjustments
	{
		get
		{
			return this.GetTable<Monks.jkp_RoomTypeAdjustment>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_RoomTypeRate> jkp_RoomTypeRates
	{
		get
		{
			return this.GetTable<Monks.jkp_RoomTypeRate>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Sangha> jkp_Sanghas
	{
		get
		{
			return this.GetTable<Monks.jkp_Sangha>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Site> jkp_Sites
	{
		get
		{
			return this.GetTable<Monks.jkp_Site>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Table> jkp_Tables
	{
		get
		{
			return this.GetTable<Monks.jkp_Table>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Training> jkp_Trainings
	{
		get
		{
			return this.GetTable<Monks.jkp_Training>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_Video> jkp_Videos
	{
		get
		{
			return this.GetTable<Monks.jkp_Video>();
		}
	}
	
	public System.Data.Linq.Table<Monks.jkp_VideoActivity> jkp_VideoActivities
	{
		get
		{
			return this.GetTable<Monks.jkp_VideoActivity>();
		}
	}
}
namespace Monks
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[Table(Name="dbo.jkp_Visa")]
	public partial class jkp_Visa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Visa_ID;
		
		private System.Nullable<System.Guid> _Visa_Per_ID;
		
		private string _Visa_Number;
		
		private string _Visa_Status;
		
		private System.Nullable<System.DateTime> _Visa_DateIssued;
		
		private System.Nullable<System.DateTime> _Visa_DateExpires;
		
		private string _Visa_Comment;
		
		private string _Visa_Image;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisa_IDChanging(System.Guid value);
    partial void OnVisa_IDChanged();
    partial void OnVisa_Per_IDChanging(System.Nullable<System.Guid> value);
    partial void OnVisa_Per_IDChanged();
    partial void OnVisa_NumberChanging(string value);
    partial void OnVisa_NumberChanged();
    partial void OnVisa_StatusChanging(string value);
    partial void OnVisa_StatusChanged();
    partial void OnVisa_DateIssuedChanging(System.Nullable<System.DateTime> value);
    partial void OnVisa_DateIssuedChanged();
    partial void OnVisa_DateExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnVisa_DateExpiresChanged();
    partial void OnVisa_CommentChanging(string value);
    partial void OnVisa_CommentChanged();
    partial void OnVisa_ImageChanging(string value);
    partial void OnVisa_ImageChanged();
    #endregion
		
		public jkp_Visa()
		{
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_Visa_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Visa_ID
		{
			get
			{
				return this._Visa_ID;
			}
			set
			{
				if ((this._Visa_ID != value))
				{
					this.OnVisa_IDChanging(value);
					this.SendPropertyChanging();
					this._Visa_ID = value;
					this.SendPropertyChanged("Visa_ID");
					this.OnVisa_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Visa_Per_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Visa_Per_ID
		{
			get
			{
				return this._Visa_Per_ID;
			}
			set
			{
				if ((this._Visa_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisa_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._Visa_Per_ID = value;
					this.SendPropertyChanged("Visa_Per_ID");
					this.OnVisa_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Visa_Number", DbType="VarChar(30)")]
		public string Visa_Number
		{
			get
			{
				return this._Visa_Number;
			}
			set
			{
				if ((this._Visa_Number != value))
				{
					this.OnVisa_NumberChanging(value);
					this.SendPropertyChanging();
					this._Visa_Number = value;
					this.SendPropertyChanged("Visa_Number");
					this.OnVisa_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_Visa_Status", DbType="VarChar(20)")]
		public string Visa_Status
		{
			get
			{
				return this._Visa_Status;
			}
			set
			{
				if ((this._Visa_Status != value))
				{
					this.OnVisa_StatusChanging(value);
					this.SendPropertyChanging();
					this._Visa_Status = value;
					this.SendPropertyChanged("Visa_Status");
					this.OnVisa_StatusChanged();
				}
			}
		}
		
		[Column(Storage="_Visa_DateIssued", DbType="DateTime")]
		public System.Nullable<System.DateTime> Visa_DateIssued
		{
			get
			{
				return this._Visa_DateIssued;
			}
			set
			{
				if ((this._Visa_DateIssued != value))
				{
					this.OnVisa_DateIssuedChanging(value);
					this.SendPropertyChanging();
					this._Visa_DateIssued = value;
					this.SendPropertyChanged("Visa_DateIssued");
					this.OnVisa_DateIssuedChanged();
				}
			}
		}
		
		[Column(Storage="_Visa_DateExpires", DbType="DateTime")]
		public System.Nullable<System.DateTime> Visa_DateExpires
		{
			get
			{
				return this._Visa_DateExpires;
			}
			set
			{
				if ((this._Visa_DateExpires != value))
				{
					this.OnVisa_DateExpiresChanging(value);
					this.SendPropertyChanging();
					this._Visa_DateExpires = value;
					this.SendPropertyChanged("Visa_DateExpires");
					this.OnVisa_DateExpiresChanged();
				}
			}
		}
		
		[Column(Storage="_Visa_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Visa_Comment
		{
			get
			{
				return this._Visa_Comment;
			}
			set
			{
				if ((this._Visa_Comment != value))
				{
					this.OnVisa_CommentChanging(value);
					this.SendPropertyChanging();
					this._Visa_Comment = value;
					this.SendPropertyChanged("Visa_Comment");
					this.OnVisa_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Visa_Image", DbType="VarChar(100)")]
		public string Visa_Image
		{
			get
			{
				return this._Visa_Image;
			}
			set
			{
				if ((this._Visa_Image != value))
				{
					this.OnVisa_ImageChanging(value);
					this.SendPropertyChanging();
					this._Visa_Image = value;
					this.SendPropertyChanged("Visa_Image");
					this.OnVisa_ImageChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Visa", Storage="_jkp_Person", ThisKey="Visa_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Visas.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Visas.Add(this);
						this._Visa_Per_ID = value.Per_ID;
					}
					else
					{
						this._Visa_Per_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[Column(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[Table(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private System.Guid _PersonId;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPersonIdChanging(System.Guid value);
    partial void OnPersonIdChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[Association(Name="jkp_Person_aspnet_Membership", Storage="_jkp_Person", ThisKey="PersonId", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._PersonId = value.Per_ID;
					}
					else
					{
						this._PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_MenuItem")]
	public partial class aspnet_MenuItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MenuItemId;
		
		private string _Summary;
		
		private string _LinkText;
		
		private string _LinkLocation;
		
		private System.Nullable<System.Guid> _ParentMenuItem;
		
		private EntitySet<aspnet_MenuItem> _aspnet_MenuItems;
		
		private EntityRef<aspnet_MenuItem> _aspnet_MenuItem1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuItemIdChanging(System.Guid value);
    partial void OnMenuItemIdChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnLinkTextChanging(string value);
    partial void OnLinkTextChanged();
    partial void OnLinkLocationChanging(string value);
    partial void OnLinkLocationChanged();
    partial void OnParentMenuItemChanging(System.Nullable<System.Guid> value);
    partial void OnParentMenuItemChanged();
    #endregion
		
		public aspnet_MenuItem()
		{
			this._aspnet_MenuItems = new EntitySet<aspnet_MenuItem>(new Action<aspnet_MenuItem>(this.attach_aspnet_MenuItems), new Action<aspnet_MenuItem>(this.detach_aspnet_MenuItems));
			this._aspnet_MenuItem1 = default(EntityRef<aspnet_MenuItem>);
			OnCreated();
		}
		
		[Column(Storage="_MenuItemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MenuItemId
		{
			get
			{
				return this._MenuItemId;
			}
			set
			{
				if ((this._MenuItemId != value))
				{
					this.OnMenuItemIdChanging(value);
					this.SendPropertyChanging();
					this._MenuItemId = value;
					this.SendPropertyChanged("MenuItemId");
					this.OnMenuItemIdChanged();
				}
			}
		}
		
		[Column(Storage="_Summary", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_LinkText", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LinkText
		{
			get
			{
				return this._LinkText;
			}
			set
			{
				if ((this._LinkText != value))
				{
					this.OnLinkTextChanging(value);
					this.SendPropertyChanging();
					this._LinkText = value;
					this.SendPropertyChanged("LinkText");
					this.OnLinkTextChanged();
				}
			}
		}
		
		[Column(Storage="_LinkLocation", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LinkLocation
		{
			get
			{
				return this._LinkLocation;
			}
			set
			{
				if ((this._LinkLocation != value))
				{
					this.OnLinkLocationChanging(value);
					this.SendPropertyChanging();
					this._LinkLocation = value;
					this.SendPropertyChanged("LinkLocation");
					this.OnLinkLocationChanged();
				}
			}
		}
		
		[Column(Storage="_ParentMenuItem", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentMenuItem
		{
			get
			{
				return this._ParentMenuItem;
			}
			set
			{
				if ((this._ParentMenuItem != value))
				{
					if (this._aspnet_MenuItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMenuItemChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuItem = value;
					this.SendPropertyChanged("ParentMenuItem");
					this.OnParentMenuItemChanged();
				}
			}
		}
		
		[Association(Name="aspnet_MenuItem_aspnet_MenuItem", Storage="_aspnet_MenuItems", ThisKey="MenuItemId", OtherKey="ParentMenuItem")]
		public EntitySet<aspnet_MenuItem> aspnet_MenuItems
		{
			get
			{
				return this._aspnet_MenuItems;
			}
			set
			{
				this._aspnet_MenuItems.Assign(value);
			}
		}
		
		[Association(Name="aspnet_MenuItem_aspnet_MenuItem", Storage="_aspnet_MenuItem1", ThisKey="ParentMenuItem", OtherKey="MenuItemId", IsForeignKey=true)]
		public aspnet_MenuItem aspnet_MenuItem1
		{
			get
			{
				return this._aspnet_MenuItem1.Entity;
			}
			set
			{
				aspnet_MenuItem previousValue = this._aspnet_MenuItem1.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_MenuItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_MenuItem1.Entity = null;
						previousValue.aspnet_MenuItems.Remove(this);
					}
					this._aspnet_MenuItem1.Entity = value;
					if ((value != null))
					{
						value.aspnet_MenuItems.Add(this);
						this._ParentMenuItem = value.MenuItemId;
					}
					else
					{
						this._ParentMenuItem = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_MenuItem1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_MenuItems(aspnet_MenuItem entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_MenuItem1 = this;
		}
		
		private void detach_aspnet_MenuItems(aspnet_MenuItem entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_MenuItem1 = null;
		}
	}
	
	[Table(Name="dbo.aspnet_PageUnderRole")]
	public partial class aspnet_PageUnderRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PageId;
		
		private System.Guid _RoleId;
		
		private string _FilePath;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(System.Guid value);
    partial void OnPageIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public aspnet_PageUnderRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[Column(Storage="_PageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_FilePath", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_PageUnderRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_PageUnderRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_PageUnderRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[Column(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[Association(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[Table(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[Column(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[Column(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[Column(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[Column(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_PageUnderRole> _aspnet_PageUnderRoles;
		
		private EntitySet<aspnet_TableUnderRole> _aspnet_TableUnderRoles;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<jkp_MediaRole> _jkp_MediaRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_PageUnderRoles = new EntitySet<aspnet_PageUnderRole>(new Action<aspnet_PageUnderRole>(this.attach_aspnet_PageUnderRoles), new Action<aspnet_PageUnderRole>(this.detach_aspnet_PageUnderRoles));
			this._aspnet_TableUnderRoles = new EntitySet<aspnet_TableUnderRole>(new Action<aspnet_TableUnderRole>(this.attach_aspnet_TableUnderRoles), new Action<aspnet_TableUnderRole>(this.detach_aspnet_TableUnderRoles));
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._jkp_MediaRoles = new EntitySet<jkp_MediaRole>(new Action<jkp_MediaRole>(this.attach_jkp_MediaRoles), new Action<jkp_MediaRole>(this.detach_jkp_MediaRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_PageUnderRole", Storage="_aspnet_PageUnderRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_PageUnderRole> aspnet_PageUnderRoles
		{
			get
			{
				return this._aspnet_PageUnderRoles;
			}
			set
			{
				this._aspnet_PageUnderRoles.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_TableUnderRole", Storage="_aspnet_TableUnderRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_TableUnderRole> aspnet_TableUnderRoles
		{
			get
			{
				return this._aspnet_TableUnderRoles;
			}
			set
			{
				this._aspnet_TableUnderRoles.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Role_jkp_MediaRole", Storage="_jkp_MediaRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<jkp_MediaRole> jkp_MediaRoles
		{
			get
			{
				return this._jkp_MediaRoles;
			}
			set
			{
				this._jkp_MediaRoles.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PageUnderRoles(aspnet_PageUnderRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_PageUnderRoles(aspnet_PageUnderRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_aspnet_TableUnderRoles(aspnet_TableUnderRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_TableUnderRoles(aspnet_TableUnderRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[Table(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[Column(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[Column(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[Column(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_TableUnderRole")]
	public partial class aspnet_TableUnderRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TableUnderRoleId;
		
		private System.Nullable<System.Guid> _RoleId;
		
		private string _TableName;
		
		private bool _ViewData;
		
		private bool _EditData;
		
		private bool _DeleteData;
		
		private bool _InsertData;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTableUnderRoleIdChanging(System.Guid value);
    partial void OnTableUnderRoleIdChanged();
    partial void OnRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnRoleIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnViewDataChanging(bool value);
    partial void OnViewDataChanged();
    partial void OnEditDataChanging(bool value);
    partial void OnEditDataChanged();
    partial void OnDeleteDataChanging(bool value);
    partial void OnDeleteDataChanged();
    partial void OnInsertDataChanging(bool value);
    partial void OnInsertDataChanged();
    #endregion
		
		public aspnet_TableUnderRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[Column(Storage="_TableUnderRoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TableUnderRoleId
		{
			get
			{
				return this._TableUnderRoleId;
			}
			set
			{
				if ((this._TableUnderRoleId != value))
				{
					this.OnTableUnderRoleIdChanging(value);
					this.SendPropertyChanging();
					this._TableUnderRoleId = value;
					this.SendPropertyChanged("TableUnderRoleId");
					this.OnTableUnderRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_TableName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[Column(Storage="_ViewData", DbType="Bit NOT NULL")]
		public bool ViewData
		{
			get
			{
				return this._ViewData;
			}
			set
			{
				if ((this._ViewData != value))
				{
					this.OnViewDataChanging(value);
					this.SendPropertyChanging();
					this._ViewData = value;
					this.SendPropertyChanged("ViewData");
					this.OnViewDataChanged();
				}
			}
		}
		
		[Column(Storage="_EditData", DbType="Bit NOT NULL")]
		public bool EditData
		{
			get
			{
				return this._EditData;
			}
			set
			{
				if ((this._EditData != value))
				{
					this.OnEditDataChanging(value);
					this.SendPropertyChanging();
					this._EditData = value;
					this.SendPropertyChanged("EditData");
					this.OnEditDataChanged();
				}
			}
		}
		
		[Column(Storage="_DeleteData", DbType="Bit NOT NULL")]
		public bool DeleteData
		{
			get
			{
				return this._DeleteData;
			}
			set
			{
				if ((this._DeleteData != value))
				{
					this.OnDeleteDataChanging(value);
					this.SendPropertyChanging();
					this._DeleteData = value;
					this.SendPropertyChanged("DeleteData");
					this.OnDeleteDataChanged();
				}
			}
		}
		
		[Column(Storage="_InsertData", DbType="Bit NOT NULL")]
		public bool InsertData
		{
			get
			{
				return this._InsertData;
			}
			set
			{
				if ((this._InsertData != value))
				{
					this.OnInsertDataChanging(value);
					this.SendPropertyChanging();
					this._InsertData = value;
					this.SendPropertyChanged("InsertData");
					this.OnInsertDataChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_TableUnderRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true, DeleteRule="CASCADE")]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_TableUnderRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_TableUnderRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[Association(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[Table(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[Column(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[Column(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[Column(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[Column(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[Column(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[Column(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[Column(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[Column(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[Column(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[Column(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Account")]
	public partial class jkp_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Acc_ID;
		
		private string _Acc_Name;
		
		private string _Acc_Description;
		
		private EntitySet<jkp_ContributionAccount> _jkp_ContributionAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcc_IDChanging(System.Guid value);
    partial void OnAcc_IDChanged();
    partial void OnAcc_NameChanging(string value);
    partial void OnAcc_NameChanged();
    partial void OnAcc_DescriptionChanging(string value);
    partial void OnAcc_DescriptionChanged();
    #endregion
		
		public jkp_Account()
		{
			this._jkp_ContributionAccounts = new EntitySet<jkp_ContributionAccount>(new Action<jkp_ContributionAccount>(this.attach_jkp_ContributionAccounts), new Action<jkp_ContributionAccount>(this.detach_jkp_ContributionAccounts));
			OnCreated();
		}
		
		[Column(Storage="_Acc_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Acc_ID
		{
			get
			{
				return this._Acc_ID;
			}
			set
			{
				if ((this._Acc_ID != value))
				{
					this.OnAcc_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_ID = value;
					this.SendPropertyChanged("Acc_ID");
					this.OnAcc_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Acc_Name", DbType="VarChar(50)")]
		public string Acc_Name
		{
			get
			{
				return this._Acc_Name;
			}
			set
			{
				if ((this._Acc_Name != value))
				{
					this.OnAcc_NameChanging(value);
					this.SendPropertyChanging();
					this._Acc_Name = value;
					this.SendPropertyChanged("Acc_Name");
					this.OnAcc_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Acc_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Acc_Description
		{
			get
			{
				return this._Acc_Description;
			}
			set
			{
				if ((this._Acc_Description != value))
				{
					this.OnAcc_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Acc_Description = value;
					this.SendPropertyChanged("Acc_Description");
					this.OnAcc_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="jkp_Account_jkp_ContributionAccount", Storage="_jkp_ContributionAccounts", ThisKey="Acc_ID", OtherKey="CA_Acc_ID")]
		public EntitySet<jkp_ContributionAccount> jkp_ContributionAccounts
		{
			get
			{
				return this._jkp_ContributionAccounts;
			}
			set
			{
				this._jkp_ContributionAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_ContributionAccounts(jkp_ContributionAccount entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Account = this;
		}
		
		private void detach_jkp_ContributionAccounts(jkp_ContributionAccount entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Account = null;
		}
	}
	
	[Table(Name="dbo.jkp_Actions")]
	public partial class jkp_Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _A_ID;
		
		private string _A_Name;
		
		private EntitySet<jkp_AuthorityMediaAction> _jkp_AuthorityMediaActions;
		
		private EntitySet<jkp_AuthorityTablesAction> _jkp_AuthorityTablesActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA_IDChanging(System.Guid value);
    partial void OnA_IDChanged();
    partial void OnA_NameChanging(string value);
    partial void OnA_NameChanged();
    #endregion
		
		public jkp_Action()
		{
			this._jkp_AuthorityMediaActions = new EntitySet<jkp_AuthorityMediaAction>(new Action<jkp_AuthorityMediaAction>(this.attach_jkp_AuthorityMediaActions), new Action<jkp_AuthorityMediaAction>(this.detach_jkp_AuthorityMediaActions));
			this._jkp_AuthorityTablesActions = new EntitySet<jkp_AuthorityTablesAction>(new Action<jkp_AuthorityTablesAction>(this.attach_jkp_AuthorityTablesActions), new Action<jkp_AuthorityTablesAction>(this.detach_jkp_AuthorityTablesActions));
			OnCreated();
		}
		
		[Column(Storage="_A_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid A_ID
		{
			get
			{
				return this._A_ID;
			}
			set
			{
				if ((this._A_ID != value))
				{
					this.OnA_IDChanging(value);
					this.SendPropertyChanging();
					this._A_ID = value;
					this.SendPropertyChanged("A_ID");
					this.OnA_IDChanged();
				}
			}
		}
		
		[Column(Storage="_A_Name", DbType="VarChar(30)")]
		public string A_Name
		{
			get
			{
				return this._A_Name;
			}
			set
			{
				if ((this._A_Name != value))
				{
					this.OnA_NameChanging(value);
					this.SendPropertyChanging();
					this._A_Name = value;
					this.SendPropertyChanged("A_Name");
					this.OnA_NameChanged();
				}
			}
		}
		
		[Association(Name="jkp_Action_jkp_AuthorityMediaAction", Storage="_jkp_AuthorityMediaActions", ThisKey="A_ID", OtherKey="AMA_A_ID")]
		public EntitySet<jkp_AuthorityMediaAction> jkp_AuthorityMediaActions
		{
			get
			{
				return this._jkp_AuthorityMediaActions;
			}
			set
			{
				this._jkp_AuthorityMediaActions.Assign(value);
			}
		}
		
		[Association(Name="jkp_Action_jkp_AuthorityTablesAction", Storage="_jkp_AuthorityTablesActions", ThisKey="A_ID", OtherKey="ATA_A_ID")]
		public EntitySet<jkp_AuthorityTablesAction> jkp_AuthorityTablesActions
		{
			get
			{
				return this._jkp_AuthorityTablesActions;
			}
			set
			{
				this._jkp_AuthorityTablesActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_AuthorityMediaActions(jkp_AuthorityMediaAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Action = this;
		}
		
		private void detach_jkp_AuthorityMediaActions(jkp_AuthorityMediaAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Action = null;
		}
		
		private void attach_jkp_AuthorityTablesActions(jkp_AuthorityTablesAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Action = this;
		}
		
		private void detach_jkp_AuthorityTablesActions(jkp_AuthorityTablesAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Action = null;
		}
	}
	
	[Table(Name="dbo.jkp_Activity")]
	public partial class jkp_Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Act_ID;
		
		private string _Act_Name;
		
		private string _Act_Language;
		
		private System.Nullable<System.DateTime> _Act_Date;
		
		private System.Nullable<System.DateTime> _Act_StartTime;
		
		private System.Nullable<System.DateTime> _Act_EndTime;
		
		private string _Act_Description;
		
		private System.Nullable<System.Guid> _Act_Ret_ID;
		
		private EntitySet<jkp_AudioActivity> _jkp_AudioActivities;
		
		private EntitySet<jkp_BookActivity> _jkp_BookActivities;
		
		private EntitySet<jkp_DocumentActivity> _jkp_DocumentActivities;
		
		private EntitySet<jkp_ImageActivity> _jkp_ImageActivities;
		
		private EntitySet<jkp_PersonActivity> _jkp_PersonActivities;
		
		private EntitySet<jkp_PersonAssignmentActivity> _jkp_PersonAssignmentActivities;
		
		private EntitySet<jkp_Training> _jkp_Trainings;
		
		private EntitySet<jkp_VideoActivity> _jkp_VideoActivities;
		
		private EntityRef<jkp_Retreat> _jkp_Retreat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAct_IDChanging(System.Guid value);
    partial void OnAct_IDChanged();
    partial void OnAct_NameChanging(string value);
    partial void OnAct_NameChanged();
    partial void OnAct_LanguageChanging(string value);
    partial void OnAct_LanguageChanged();
    partial void OnAct_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAct_DateChanged();
    partial void OnAct_StartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAct_StartTimeChanged();
    partial void OnAct_EndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAct_EndTimeChanged();
    partial void OnAct_DescriptionChanging(string value);
    partial void OnAct_DescriptionChanged();
    partial void OnAct_Ret_IDChanging(System.Nullable<System.Guid> value);
    partial void OnAct_Ret_IDChanged();
    #endregion
		
		public jkp_Activity()
		{
			this._jkp_AudioActivities = new EntitySet<jkp_AudioActivity>(new Action<jkp_AudioActivity>(this.attach_jkp_AudioActivities), new Action<jkp_AudioActivity>(this.detach_jkp_AudioActivities));
			this._jkp_BookActivities = new EntitySet<jkp_BookActivity>(new Action<jkp_BookActivity>(this.attach_jkp_BookActivities), new Action<jkp_BookActivity>(this.detach_jkp_BookActivities));
			this._jkp_DocumentActivities = new EntitySet<jkp_DocumentActivity>(new Action<jkp_DocumentActivity>(this.attach_jkp_DocumentActivities), new Action<jkp_DocumentActivity>(this.detach_jkp_DocumentActivities));
			this._jkp_ImageActivities = new EntitySet<jkp_ImageActivity>(new Action<jkp_ImageActivity>(this.attach_jkp_ImageActivities), new Action<jkp_ImageActivity>(this.detach_jkp_ImageActivities));
			this._jkp_PersonActivities = new EntitySet<jkp_PersonActivity>(new Action<jkp_PersonActivity>(this.attach_jkp_PersonActivities), new Action<jkp_PersonActivity>(this.detach_jkp_PersonActivities));
			this._jkp_PersonAssignmentActivities = new EntitySet<jkp_PersonAssignmentActivity>(new Action<jkp_PersonAssignmentActivity>(this.attach_jkp_PersonAssignmentActivities), new Action<jkp_PersonAssignmentActivity>(this.detach_jkp_PersonAssignmentActivities));
			this._jkp_Trainings = new EntitySet<jkp_Training>(new Action<jkp_Training>(this.attach_jkp_Trainings), new Action<jkp_Training>(this.detach_jkp_Trainings));
			this._jkp_VideoActivities = new EntitySet<jkp_VideoActivity>(new Action<jkp_VideoActivity>(this.attach_jkp_VideoActivities), new Action<jkp_VideoActivity>(this.detach_jkp_VideoActivities));
			this._jkp_Retreat = default(EntityRef<jkp_Retreat>);
			OnCreated();
		}
		
		[Column(Storage="_Act_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Act_ID
		{
			get
			{
				return this._Act_ID;
			}
			set
			{
				if ((this._Act_ID != value))
				{
					this.OnAct_IDChanging(value);
					this.SendPropertyChanging();
					this._Act_ID = value;
					this.SendPropertyChanged("Act_ID");
					this.OnAct_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Act_Name", DbType="VarChar(255)")]
		public string Act_Name
		{
			get
			{
				return this._Act_Name;
			}
			set
			{
				if ((this._Act_Name != value))
				{
					this.OnAct_NameChanging(value);
					this.SendPropertyChanging();
					this._Act_Name = value;
					this.SendPropertyChanged("Act_Name");
					this.OnAct_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Act_Language", DbType="VarChar(30)")]
		public string Act_Language
		{
			get
			{
				return this._Act_Language;
			}
			set
			{
				if ((this._Act_Language != value))
				{
					this.OnAct_LanguageChanging(value);
					this.SendPropertyChanging();
					this._Act_Language = value;
					this.SendPropertyChanged("Act_Language");
					this.OnAct_LanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Act_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Act_Date
		{
			get
			{
				return this._Act_Date;
			}
			set
			{
				if ((this._Act_Date != value))
				{
					this.OnAct_DateChanging(value);
					this.SendPropertyChanging();
					this._Act_Date = value;
					this.SendPropertyChanged("Act_Date");
					this.OnAct_DateChanged();
				}
			}
		}
		
		[Column(Storage="_Act_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Act_StartTime
		{
			get
			{
				return this._Act_StartTime;
			}
			set
			{
				if ((this._Act_StartTime != value))
				{
					this.OnAct_StartTimeChanging(value);
					this.SendPropertyChanging();
					this._Act_StartTime = value;
					this.SendPropertyChanged("Act_StartTime");
					this.OnAct_StartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Act_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Act_EndTime
		{
			get
			{
				return this._Act_EndTime;
			}
			set
			{
				if ((this._Act_EndTime != value))
				{
					this.OnAct_EndTimeChanging(value);
					this.SendPropertyChanging();
					this._Act_EndTime = value;
					this.SendPropertyChanged("Act_EndTime");
					this.OnAct_EndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Act_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Act_Description
		{
			get
			{
				return this._Act_Description;
			}
			set
			{
				if ((this._Act_Description != value))
				{
					this.OnAct_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Act_Description = value;
					this.SendPropertyChanged("Act_Description");
					this.OnAct_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Act_Ret_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Act_Ret_ID
		{
			get
			{
				return this._Act_Ret_ID;
			}
			set
			{
				if ((this._Act_Ret_ID != value))
				{
					if (this._jkp_Retreat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAct_Ret_IDChanging(value);
					this.SendPropertyChanging();
					this._Act_Ret_ID = value;
					this.SendPropertyChanged("Act_Ret_ID");
					this.OnAct_Ret_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_AudioActivity", Storage="_jkp_AudioActivities", ThisKey="Act_ID", OtherKey="AA_Act_ID")]
		public EntitySet<jkp_AudioActivity> jkp_AudioActivities
		{
			get
			{
				return this._jkp_AudioActivities;
			}
			set
			{
				this._jkp_AudioActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_BookActivity", Storage="_jkp_BookActivities", ThisKey="Act_ID", OtherKey="BA_Act_ID")]
		public EntitySet<jkp_BookActivity> jkp_BookActivities
		{
			get
			{
				return this._jkp_BookActivities;
			}
			set
			{
				this._jkp_BookActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_DocumentActivity", Storage="_jkp_DocumentActivities", ThisKey="Act_ID", OtherKey="DA_Act_ID")]
		public EntitySet<jkp_DocumentActivity> jkp_DocumentActivities
		{
			get
			{
				return this._jkp_DocumentActivities;
			}
			set
			{
				this._jkp_DocumentActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_ImageActivity", Storage="_jkp_ImageActivities", ThisKey="Act_ID", OtherKey="IA_Act_ID")]
		public EntitySet<jkp_ImageActivity> jkp_ImageActivities
		{
			get
			{
				return this._jkp_ImageActivities;
			}
			set
			{
				this._jkp_ImageActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_PersonActivity", Storage="_jkp_PersonActivities", ThisKey="Act_ID", OtherKey="PAct_Act_ID")]
		public EntitySet<jkp_PersonActivity> jkp_PersonActivities
		{
			get
			{
				return this._jkp_PersonActivities;
			}
			set
			{
				this._jkp_PersonActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_PersonAssignmentActivity", Storage="_jkp_PersonAssignmentActivities", ThisKey="Act_ID", OtherKey="PAA_Act_ID")]
		public EntitySet<jkp_PersonAssignmentActivity> jkp_PersonAssignmentActivities
		{
			get
			{
				return this._jkp_PersonAssignmentActivities;
			}
			set
			{
				this._jkp_PersonAssignmentActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_Training", Storage="_jkp_Trainings", ThisKey="Act_ID", OtherKey="Train_Act_ID")]
		public EntitySet<jkp_Training> jkp_Trainings
		{
			get
			{
				return this._jkp_Trainings;
			}
			set
			{
				this._jkp_Trainings.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_VideoActivity", Storage="_jkp_VideoActivities", ThisKey="Act_ID", OtherKey="VA_Act_ID")]
		public EntitySet<jkp_VideoActivity> jkp_VideoActivities
		{
			get
			{
				return this._jkp_VideoActivities;
			}
			set
			{
				this._jkp_VideoActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_Activity", Storage="_jkp_Retreat", ThisKey="Act_Ret_ID", OtherKey="Ret_ID", IsForeignKey=true)]
		public jkp_Retreat jkp_Retreat
		{
			get
			{
				return this._jkp_Retreat.Entity;
			}
			set
			{
				jkp_Retreat previousValue = this._jkp_Retreat.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Retreat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Retreat.Entity = null;
						previousValue.jkp_Activities.Remove(this);
					}
					this._jkp_Retreat.Entity = value;
					if ((value != null))
					{
						value.jkp_Activities.Add(this);
						this._Act_Ret_ID = value.Ret_ID;
					}
					else
					{
						this._Act_Ret_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Retreat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_AudioActivities(jkp_AudioActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_AudioActivities(jkp_AudioActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
		
		private void attach_jkp_BookActivities(jkp_BookActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_BookActivities(jkp_BookActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
		
		private void attach_jkp_DocumentActivities(jkp_DocumentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_DocumentActivities(jkp_DocumentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
		
		private void attach_jkp_ImageActivities(jkp_ImageActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_ImageActivities(jkp_ImageActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
		
		private void attach_jkp_PersonActivities(jkp_PersonActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_PersonActivities(jkp_PersonActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
		
		private void attach_jkp_PersonAssignmentActivities(jkp_PersonAssignmentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_PersonAssignmentActivities(jkp_PersonAssignmentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
		
		private void attach_jkp_Trainings(jkp_Training entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_Trainings(jkp_Training entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
		
		private void attach_jkp_VideoActivities(jkp_VideoActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = this;
		}
		
		private void detach_jkp_VideoActivities(jkp_VideoActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Activity = null;
		}
	}
	
	[Table(Name="dbo.jkp_Address")]
	public partial class jkp_Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Add_ID;
		
		private string _Add_Street;
		
		private string _Add_City;
		
		private string _Add_State;
		
		private string _Add_Country;
		
		private string _Add_PostalCode;
		
		private System.Nullable<System.Guid> _Add_San_ID;
		
		private EntitySet<jkp_Hamlet> _jkp_Hamlets;
		
		private EntitySet<jkp_Person> _jkp_Persons;
		
		private EntitySet<jkp_Site> _jkp_Sites;
		
		private EntityRef<jkp_Sangha> _jkp_Sangha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdd_IDChanging(System.Guid value);
    partial void OnAdd_IDChanged();
    partial void OnAdd_StreetChanging(string value);
    partial void OnAdd_StreetChanged();
    partial void OnAdd_CityChanging(string value);
    partial void OnAdd_CityChanged();
    partial void OnAdd_StateChanging(string value);
    partial void OnAdd_StateChanged();
    partial void OnAdd_CountryChanging(string value);
    partial void OnAdd_CountryChanged();
    partial void OnAdd_PostalCodeChanging(string value);
    partial void OnAdd_PostalCodeChanged();
    partial void OnAdd_San_IDChanging(System.Nullable<System.Guid> value);
    partial void OnAdd_San_IDChanged();
    #endregion
		
		public jkp_Address()
		{
			this._jkp_Hamlets = new EntitySet<jkp_Hamlet>(new Action<jkp_Hamlet>(this.attach_jkp_Hamlets), new Action<jkp_Hamlet>(this.detach_jkp_Hamlets));
			this._jkp_Persons = new EntitySet<jkp_Person>(new Action<jkp_Person>(this.attach_jkp_Persons), new Action<jkp_Person>(this.detach_jkp_Persons));
			this._jkp_Sites = new EntitySet<jkp_Site>(new Action<jkp_Site>(this.attach_jkp_Sites), new Action<jkp_Site>(this.detach_jkp_Sites));
			this._jkp_Sangha = default(EntityRef<jkp_Sangha>);
			OnCreated();
		}
		
		[Column(Storage="_Add_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Add_ID
		{
			get
			{
				return this._Add_ID;
			}
			set
			{
				if ((this._Add_ID != value))
				{
					this.OnAdd_IDChanging(value);
					this.SendPropertyChanging();
					this._Add_ID = value;
					this.SendPropertyChanged("Add_ID");
					this.OnAdd_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Add_Street", DbType="VarChar(255)")]
		public string Add_Street
		{
			get
			{
				return this._Add_Street;
			}
			set
			{
				if ((this._Add_Street != value))
				{
					this.OnAdd_StreetChanging(value);
					this.SendPropertyChanging();
					this._Add_Street = value;
					this.SendPropertyChanged("Add_Street");
					this.OnAdd_StreetChanged();
				}
			}
		}
		
		[Column(Storage="_Add_City", DbType="VarChar(50)")]
		public string Add_City
		{
			get
			{
				return this._Add_City;
			}
			set
			{
				if ((this._Add_City != value))
				{
					this.OnAdd_CityChanging(value);
					this.SendPropertyChanging();
					this._Add_City = value;
					this.SendPropertyChanged("Add_City");
					this.OnAdd_CityChanged();
				}
			}
		}
		
		[Column(Storage="_Add_State", DbType="VarChar(50)")]
		public string Add_State
		{
			get
			{
				return this._Add_State;
			}
			set
			{
				if ((this._Add_State != value))
				{
					this.OnAdd_StateChanging(value);
					this.SendPropertyChanging();
					this._Add_State = value;
					this.SendPropertyChanged("Add_State");
					this.OnAdd_StateChanged();
				}
			}
		}
		
		[Column(Storage="_Add_Country", DbType="VarChar(50)")]
		public string Add_Country
		{
			get
			{
				return this._Add_Country;
			}
			set
			{
				if ((this._Add_Country != value))
				{
					this.OnAdd_CountryChanging(value);
					this.SendPropertyChanging();
					this._Add_Country = value;
					this.SendPropertyChanged("Add_Country");
					this.OnAdd_CountryChanged();
				}
			}
		}
		
		[Column(Storage="_Add_PostalCode", DbType="VarChar(50)")]
		public string Add_PostalCode
		{
			get
			{
				return this._Add_PostalCode;
			}
			set
			{
				if ((this._Add_PostalCode != value))
				{
					this.OnAdd_PostalCodeChanging(value);
					this.SendPropertyChanging();
					this._Add_PostalCode = value;
					this.SendPropertyChanged("Add_PostalCode");
					this.OnAdd_PostalCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Add_San_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Add_San_ID
		{
			get
			{
				return this._Add_San_ID;
			}
			set
			{
				if ((this._Add_San_ID != value))
				{
					if (this._jkp_Sangha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdd_San_IDChanging(value);
					this.SendPropertyChanging();
					this._Add_San_ID = value;
					this.SendPropertyChanged("Add_San_ID");
					this.OnAdd_San_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Address_jkp_Hamlet", Storage="_jkp_Hamlets", ThisKey="Add_ID", OtherKey="Ham_Add_ID")]
		public EntitySet<jkp_Hamlet> jkp_Hamlets
		{
			get
			{
				return this._jkp_Hamlets;
			}
			set
			{
				this._jkp_Hamlets.Assign(value);
			}
		}
		
		[Association(Name="jkp_Address_jkp_Person", Storage="_jkp_Persons", ThisKey="Add_ID", OtherKey="Per_Add_ID")]
		public EntitySet<jkp_Person> jkp_Persons
		{
			get
			{
				return this._jkp_Persons;
			}
			set
			{
				this._jkp_Persons.Assign(value);
			}
		}
		
		[Association(Name="jkp_Address_jkp_Site", Storage="_jkp_Sites", ThisKey="Add_ID", OtherKey="Site_Add_ID")]
		public EntitySet<jkp_Site> jkp_Sites
		{
			get
			{
				return this._jkp_Sites;
			}
			set
			{
				this._jkp_Sites.Assign(value);
			}
		}
		
		[Association(Name="jkp_Sangha_jkp_Address", Storage="_jkp_Sangha", ThisKey="Add_San_ID", OtherKey="San_ID", IsForeignKey=true)]
		public jkp_Sangha jkp_Sangha
		{
			get
			{
				return this._jkp_Sangha.Entity;
			}
			set
			{
				jkp_Sangha previousValue = this._jkp_Sangha.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Sangha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Sangha.Entity = null;
						previousValue.jkp_Addresses.Remove(this);
					}
					this._jkp_Sangha.Entity = value;
					if ((value != null))
					{
						value.jkp_Addresses.Add(this);
						this._Add_San_ID = value.San_ID;
					}
					else
					{
						this._Add_San_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Sangha");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Hamlets(jkp_Hamlet entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Address = this;
		}
		
		private void detach_jkp_Hamlets(jkp_Hamlet entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Address = null;
		}
		
		private void attach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Address = this;
		}
		
		private void detach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Address = null;
		}
		
		private void attach_jkp_Sites(jkp_Site entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Address = this;
		}
		
		private void detach_jkp_Sites(jkp_Site entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Address = null;
		}
	}
	
	[Table(Name="dbo.jkp_Adjustment")]
	public partial class jkp_Adjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Adjust_ID;
		
		private string _Adjust_Name;
		
		private System.Nullable<decimal> _Adjust_Discount;
		
		private EntitySet<jkp_RoomTypeAdjustment> _jkp_RoomTypeAdjustments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdjust_IDChanging(System.Guid value);
    partial void OnAdjust_IDChanged();
    partial void OnAdjust_NameChanging(string value);
    partial void OnAdjust_NameChanged();
    partial void OnAdjust_DiscountChanging(System.Nullable<decimal> value);
    partial void OnAdjust_DiscountChanged();
    #endregion
		
		public jkp_Adjustment()
		{
			this._jkp_RoomTypeAdjustments = new EntitySet<jkp_RoomTypeAdjustment>(new Action<jkp_RoomTypeAdjustment>(this.attach_jkp_RoomTypeAdjustments), new Action<jkp_RoomTypeAdjustment>(this.detach_jkp_RoomTypeAdjustments));
			OnCreated();
		}
		
		[Column(Storage="_Adjust_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Adjust_ID
		{
			get
			{
				return this._Adjust_ID;
			}
			set
			{
				if ((this._Adjust_ID != value))
				{
					this.OnAdjust_IDChanging(value);
					this.SendPropertyChanging();
					this._Adjust_ID = value;
					this.SendPropertyChanged("Adjust_ID");
					this.OnAdjust_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Adjust_Name", DbType="VarChar(50)")]
		public string Adjust_Name
		{
			get
			{
				return this._Adjust_Name;
			}
			set
			{
				if ((this._Adjust_Name != value))
				{
					this.OnAdjust_NameChanging(value);
					this.SendPropertyChanging();
					this._Adjust_Name = value;
					this.SendPropertyChanged("Adjust_Name");
					this.OnAdjust_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Adjust_Discount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Adjust_Discount
		{
			get
			{
				return this._Adjust_Discount;
			}
			set
			{
				if ((this._Adjust_Discount != value))
				{
					this.OnAdjust_DiscountChanging(value);
					this.SendPropertyChanging();
					this._Adjust_Discount = value;
					this.SendPropertyChanged("Adjust_Discount");
					this.OnAdjust_DiscountChanged();
				}
			}
		}
		
		[Association(Name="jkp_Adjustment_jkp_RoomTypeAdjustment", Storage="_jkp_RoomTypeAdjustments", ThisKey="Adjust_ID", OtherKey="RTA_Adjust_ID")]
		public EntitySet<jkp_RoomTypeAdjustment> jkp_RoomTypeAdjustments
		{
			get
			{
				return this._jkp_RoomTypeAdjustments;
			}
			set
			{
				this._jkp_RoomTypeAdjustments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_RoomTypeAdjustments(jkp_RoomTypeAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Adjustment = this;
		}
		
		private void detach_jkp_RoomTypeAdjustments(jkp_RoomTypeAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Adjustment = null;
		}
	}
	
	[Table(Name="dbo.jkp_Article")]
	public partial class jkp_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Art_ID;
		
		private System.Guid _Art_LanguageId;
		
		private System.Guid _Art_AuthorPersonId;
		
		private System.DateTime _Art_Created;
		
		private string _Art_Title;
		
		private string _Art_Content;
		
		private string _Art_LinkTitle;
		
		private System.Nullable<System.Guid> _Art_CategoryId;
		
		private EntityRef<jkp_ArticleCategory> _jkp_ArticleCategory;
		
		private EntityRef<jkp_Language> _jkp_Language;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArt_IDChanging(System.Guid value);
    partial void OnArt_IDChanged();
    partial void OnArt_LanguageIdChanging(System.Guid value);
    partial void OnArt_LanguageIdChanged();
    partial void OnArt_AuthorPersonIdChanging(System.Guid value);
    partial void OnArt_AuthorPersonIdChanged();
    partial void OnArt_CreatedChanging(System.DateTime value);
    partial void OnArt_CreatedChanged();
    partial void OnArt_TitleChanging(string value);
    partial void OnArt_TitleChanged();
    partial void OnArt_ContentChanging(string value);
    partial void OnArt_ContentChanged();
    partial void OnArt_LinkTitleChanging(string value);
    partial void OnArt_LinkTitleChanged();
    partial void OnArt_CategoryIdChanging(System.Nullable<System.Guid> value);
    partial void OnArt_CategoryIdChanged();
    #endregion
		
		public jkp_Article()
		{
			this._jkp_ArticleCategory = default(EntityRef<jkp_ArticleCategory>);
			this._jkp_Language = default(EntityRef<jkp_Language>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_Art_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Art_ID
		{
			get
			{
				return this._Art_ID;
			}
			set
			{
				if ((this._Art_ID != value))
				{
					this.OnArt_IDChanging(value);
					this.SendPropertyChanging();
					this._Art_ID = value;
					this.SendPropertyChanged("Art_ID");
					this.OnArt_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Art_LanguageId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Art_LanguageId
		{
			get
			{
				return this._Art_LanguageId;
			}
			set
			{
				if ((this._Art_LanguageId != value))
				{
					if (this._jkp_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_LanguageIdChanging(value);
					this.SendPropertyChanging();
					this._Art_LanguageId = value;
					this.SendPropertyChanged("Art_LanguageId");
					this.OnArt_LanguageIdChanged();
				}
			}
		}
		
		[Column(Storage="_Art_AuthorPersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Art_AuthorPersonId
		{
			get
			{
				return this._Art_AuthorPersonId;
			}
			set
			{
				if ((this._Art_AuthorPersonId != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_AuthorPersonIdChanging(value);
					this.SendPropertyChanging();
					this._Art_AuthorPersonId = value;
					this.SendPropertyChanged("Art_AuthorPersonId");
					this.OnArt_AuthorPersonIdChanged();
				}
			}
		}
		
		[Column(Storage="_Art_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Art_Created
		{
			get
			{
				return this._Art_Created;
			}
			set
			{
				if ((this._Art_Created != value))
				{
					this.OnArt_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Art_Created = value;
					this.SendPropertyChanged("Art_Created");
					this.OnArt_CreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Art_Title", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Art_Title
		{
			get
			{
				return this._Art_Title;
			}
			set
			{
				if ((this._Art_Title != value))
				{
					this.OnArt_TitleChanging(value);
					this.SendPropertyChanging();
					this._Art_Title = value;
					this.SendPropertyChanged("Art_Title");
					this.OnArt_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_Art_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Art_Content
		{
			get
			{
				return this._Art_Content;
			}
			set
			{
				if ((this._Art_Content != value))
				{
					this.OnArt_ContentChanging(value);
					this.SendPropertyChanging();
					this._Art_Content = value;
					this.SendPropertyChanged("Art_Content");
					this.OnArt_ContentChanged();
				}
			}
		}
		
		[Column(Storage="_Art_LinkTitle", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Art_LinkTitle
		{
			get
			{
				return this._Art_LinkTitle;
			}
			set
			{
				if ((this._Art_LinkTitle != value))
				{
					this.OnArt_LinkTitleChanging(value);
					this.SendPropertyChanging();
					this._Art_LinkTitle = value;
					this.SendPropertyChanged("Art_LinkTitle");
					this.OnArt_LinkTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Art_CategoryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Art_CategoryId
		{
			get
			{
				return this._Art_CategoryId;
			}
			set
			{
				if ((this._Art_CategoryId != value))
				{
					if (this._jkp_ArticleCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_CategoryIdChanging(value);
					this.SendPropertyChanging();
					this._Art_CategoryId = value;
					this.SendPropertyChanged("Art_CategoryId");
					this.OnArt_CategoryIdChanged();
				}
			}
		}
		
		[Association(Name="jkp_ArticleCategory_jkp_Article", Storage="_jkp_ArticleCategory", ThisKey="Art_CategoryId", OtherKey="ArtCat_ID", IsForeignKey=true)]
		public jkp_ArticleCategory jkp_ArticleCategory
		{
			get
			{
				return this._jkp_ArticleCategory.Entity;
			}
			set
			{
				jkp_ArticleCategory previousValue = this._jkp_ArticleCategory.Entity;
				if (((previousValue != value) 
							|| (this._jkp_ArticleCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_ArticleCategory.Entity = null;
						previousValue.jkp_Articles.Remove(this);
					}
					this._jkp_ArticleCategory.Entity = value;
					if ((value != null))
					{
						value.jkp_Articles.Add(this);
						this._Art_CategoryId = value.ArtCat_ID;
					}
					else
					{
						this._Art_CategoryId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_ArticleCategory");
				}
			}
		}
		
		[Association(Name="jkp_Language_jkp_Article", Storage="_jkp_Language", ThisKey="Art_LanguageId", OtherKey="Lang_ID", IsForeignKey=true)]
		public jkp_Language jkp_Language
		{
			get
			{
				return this._jkp_Language.Entity;
			}
			set
			{
				jkp_Language previousValue = this._jkp_Language.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Language.Entity = null;
						previousValue.jkp_Articles.Remove(this);
					}
					this._jkp_Language.Entity = value;
					if ((value != null))
					{
						value.jkp_Articles.Add(this);
						this._Art_LanguageId = value.Lang_ID;
					}
					else
					{
						this._Art_LanguageId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Language");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Article", Storage="_jkp_Person", ThisKey="Art_AuthorPersonId", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Articles.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Articles.Add(this);
						this._Art_AuthorPersonId = value.Per_ID;
					}
					else
					{
						this._Art_AuthorPersonId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_ArticleCategory")]
	public partial class jkp_ArticleCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ArtCat_ID;
		
		private string _ArtCat_Name;
		
		private System.DateTime _ArtCat_Created;
		
		private EntitySet<jkp_Article> _jkp_Articles;
		
		private EntitySet<jkp_ArticlePage> _jkp_ArticlePages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtCat_IDChanging(System.Guid value);
    partial void OnArtCat_IDChanged();
    partial void OnArtCat_NameChanging(string value);
    partial void OnArtCat_NameChanged();
    partial void OnArtCat_CreatedChanging(System.DateTime value);
    partial void OnArtCat_CreatedChanged();
    #endregion
		
		public jkp_ArticleCategory()
		{
			this._jkp_Articles = new EntitySet<jkp_Article>(new Action<jkp_Article>(this.attach_jkp_Articles), new Action<jkp_Article>(this.detach_jkp_Articles));
			this._jkp_ArticlePages = new EntitySet<jkp_ArticlePage>(new Action<jkp_ArticlePage>(this.attach_jkp_ArticlePages), new Action<jkp_ArticlePage>(this.detach_jkp_ArticlePages));
			OnCreated();
		}
		
		[Column(Storage="_ArtCat_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArtCat_ID
		{
			get
			{
				return this._ArtCat_ID;
			}
			set
			{
				if ((this._ArtCat_ID != value))
				{
					this.OnArtCat_IDChanging(value);
					this.SendPropertyChanging();
					this._ArtCat_ID = value;
					this.SendPropertyChanged("ArtCat_ID");
					this.OnArtCat_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ArtCat_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ArtCat_Name
		{
			get
			{
				return this._ArtCat_Name;
			}
			set
			{
				if ((this._ArtCat_Name != value))
				{
					this.OnArtCat_NameChanging(value);
					this.SendPropertyChanging();
					this._ArtCat_Name = value;
					this.SendPropertyChanged("ArtCat_Name");
					this.OnArtCat_NameChanged();
				}
			}
		}
		
		[Column(Storage="_ArtCat_Created", DbType="DateTime NOT NULL")]
		public System.DateTime ArtCat_Created
		{
			get
			{
				return this._ArtCat_Created;
			}
			set
			{
				if ((this._ArtCat_Created != value))
				{
					this.OnArtCat_CreatedChanging(value);
					this.SendPropertyChanging();
					this._ArtCat_Created = value;
					this.SendPropertyChanged("ArtCat_Created");
					this.OnArtCat_CreatedChanged();
				}
			}
		}
		
		[Association(Name="jkp_ArticleCategory_jkp_Article", Storage="_jkp_Articles", ThisKey="ArtCat_ID", OtherKey="Art_CategoryId")]
		public EntitySet<jkp_Article> jkp_Articles
		{
			get
			{
				return this._jkp_Articles;
			}
			set
			{
				this._jkp_Articles.Assign(value);
			}
		}
		
		[Association(Name="jkp_ArticleCategory_jkp_ArticlePage", Storage="_jkp_ArticlePages", ThisKey="ArtCat_ID", OtherKey="ArtP_CategoryId")]
		public EntitySet<jkp_ArticlePage> jkp_ArticlePages
		{
			get
			{
				return this._jkp_ArticlePages;
			}
			set
			{
				this._jkp_ArticlePages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Articles(jkp_Article entity)
		{
			this.SendPropertyChanging();
			entity.jkp_ArticleCategory = this;
		}
		
		private void detach_jkp_Articles(jkp_Article entity)
		{
			this.SendPropertyChanging();
			entity.jkp_ArticleCategory = null;
		}
		
		private void attach_jkp_ArticlePages(jkp_ArticlePage entity)
		{
			this.SendPropertyChanging();
			entity.jkp_ArticleCategory = this;
		}
		
		private void detach_jkp_ArticlePages(jkp_ArticlePage entity)
		{
			this.SendPropertyChanging();
			entity.jkp_ArticleCategory = null;
		}
	}
	
	[Table(Name="dbo.jkp_ArticlePage")]
	public partial class jkp_ArticlePage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ArtP_ID;
		
		private string _ArtP_ResxTitle;
		
		private string _ArtP_ResxHeaderName;
		
		private System.DateTime _ArtP_Created;
		
		private System.Guid _ArtP_CategoryId;
		
		private string _ArtP_DefaultBodyText;
		
		private EntityRef<jkp_ArticleCategory> _jkp_ArticleCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtP_IDChanging(System.Guid value);
    partial void OnArtP_IDChanged();
    partial void OnArtP_ResxTitleChanging(string value);
    partial void OnArtP_ResxTitleChanged();
    partial void OnArtP_ResxHeaderNameChanging(string value);
    partial void OnArtP_ResxHeaderNameChanged();
    partial void OnArtP_CreatedChanging(System.DateTime value);
    partial void OnArtP_CreatedChanged();
    partial void OnArtP_CategoryIdChanging(System.Guid value);
    partial void OnArtP_CategoryIdChanged();
    partial void OnArtP_DefaultBodyTextChanging(string value);
    partial void OnArtP_DefaultBodyTextChanged();
    #endregion
		
		public jkp_ArticlePage()
		{
			this._jkp_ArticleCategory = default(EntityRef<jkp_ArticleCategory>);
			OnCreated();
		}
		
		[Column(Storage="_ArtP_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArtP_ID
		{
			get
			{
				return this._ArtP_ID;
			}
			set
			{
				if ((this._ArtP_ID != value))
				{
					this.OnArtP_IDChanging(value);
					this.SendPropertyChanging();
					this._ArtP_ID = value;
					this.SendPropertyChanged("ArtP_ID");
					this.OnArtP_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ArtP_ResxTitle", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ArtP_ResxTitle
		{
			get
			{
				return this._ArtP_ResxTitle;
			}
			set
			{
				if ((this._ArtP_ResxTitle != value))
				{
					this.OnArtP_ResxTitleChanging(value);
					this.SendPropertyChanging();
					this._ArtP_ResxTitle = value;
					this.SendPropertyChanged("ArtP_ResxTitle");
					this.OnArtP_ResxTitleChanged();
				}
			}
		}
		
		[Column(Storage="_ArtP_ResxHeaderName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ArtP_ResxHeaderName
		{
			get
			{
				return this._ArtP_ResxHeaderName;
			}
			set
			{
				if ((this._ArtP_ResxHeaderName != value))
				{
					this.OnArtP_ResxHeaderNameChanging(value);
					this.SendPropertyChanging();
					this._ArtP_ResxHeaderName = value;
					this.SendPropertyChanged("ArtP_ResxHeaderName");
					this.OnArtP_ResxHeaderNameChanged();
				}
			}
		}
		
		[Column(Storage="_ArtP_Created", DbType="DateTime NOT NULL")]
		public System.DateTime ArtP_Created
		{
			get
			{
				return this._ArtP_Created;
			}
			set
			{
				if ((this._ArtP_Created != value))
				{
					this.OnArtP_CreatedChanging(value);
					this.SendPropertyChanging();
					this._ArtP_Created = value;
					this.SendPropertyChanged("ArtP_Created");
					this.OnArtP_CreatedChanged();
				}
			}
		}
		
		[Column(Storage="_ArtP_CategoryId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ArtP_CategoryId
		{
			get
			{
				return this._ArtP_CategoryId;
			}
			set
			{
				if ((this._ArtP_CategoryId != value))
				{
					if (this._jkp_ArticleCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtP_CategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ArtP_CategoryId = value;
					this.SendPropertyChanged("ArtP_CategoryId");
					this.OnArtP_CategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_ArtP_DefaultBodyText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ArtP_DefaultBodyText
		{
			get
			{
				return this._ArtP_DefaultBodyText;
			}
			set
			{
				if ((this._ArtP_DefaultBodyText != value))
				{
					this.OnArtP_DefaultBodyTextChanging(value);
					this.SendPropertyChanging();
					this._ArtP_DefaultBodyText = value;
					this.SendPropertyChanged("ArtP_DefaultBodyText");
					this.OnArtP_DefaultBodyTextChanged();
				}
			}
		}
		
		[Association(Name="jkp_ArticleCategory_jkp_ArticlePage", Storage="_jkp_ArticleCategory", ThisKey="ArtP_CategoryId", OtherKey="ArtCat_ID", IsForeignKey=true)]
		public jkp_ArticleCategory jkp_ArticleCategory
		{
			get
			{
				return this._jkp_ArticleCategory.Entity;
			}
			set
			{
				jkp_ArticleCategory previousValue = this._jkp_ArticleCategory.Entity;
				if (((previousValue != value) 
							|| (this._jkp_ArticleCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_ArticleCategory.Entity = null;
						previousValue.jkp_ArticlePages.Remove(this);
					}
					this._jkp_ArticleCategory.Entity = value;
					if ((value != null))
					{
						value.jkp_ArticlePages.Add(this);
						this._ArtP_CategoryId = value.ArtCat_ID;
					}
					else
					{
						this._ArtP_CategoryId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_ArticleCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Assignment")]
	public partial class jkp_Assignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Assn_ID;
		
		private string _Assn_Name;
		
		private string _Assn_Description;
		
		private string _Assn_Comment;
		
		private System.Guid _Assn_RetreatId;
		
		private EntitySet<jkp_PersonAssignmentActivity> _jkp_PersonAssignmentActivities;
		
		private EntitySet<jkp_PersonAssignmentRetreat> _jkp_PersonAssignmentRetreats;
		
		private EntityRef<jkp_Retreat> _jkp_Retreat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssn_IDChanging(System.Guid value);
    partial void OnAssn_IDChanged();
    partial void OnAssn_NameChanging(string value);
    partial void OnAssn_NameChanged();
    partial void OnAssn_DescriptionChanging(string value);
    partial void OnAssn_DescriptionChanged();
    partial void OnAssn_CommentChanging(string value);
    partial void OnAssn_CommentChanged();
    partial void OnAssn_RetreatIdChanging(System.Guid value);
    partial void OnAssn_RetreatIdChanged();
    #endregion
		
		public jkp_Assignment()
		{
			this._jkp_PersonAssignmentActivities = new EntitySet<jkp_PersonAssignmentActivity>(new Action<jkp_PersonAssignmentActivity>(this.attach_jkp_PersonAssignmentActivities), new Action<jkp_PersonAssignmentActivity>(this.detach_jkp_PersonAssignmentActivities));
			this._jkp_PersonAssignmentRetreats = new EntitySet<jkp_PersonAssignmentRetreat>(new Action<jkp_PersonAssignmentRetreat>(this.attach_jkp_PersonAssignmentRetreats), new Action<jkp_PersonAssignmentRetreat>(this.detach_jkp_PersonAssignmentRetreats));
			this._jkp_Retreat = default(EntityRef<jkp_Retreat>);
			OnCreated();
		}
		
		[Column(Storage="_Assn_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Assn_ID
		{
			get
			{
				return this._Assn_ID;
			}
			set
			{
				if ((this._Assn_ID != value))
				{
					this.OnAssn_IDChanging(value);
					this.SendPropertyChanging();
					this._Assn_ID = value;
					this.SendPropertyChanged("Assn_ID");
					this.OnAssn_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Assn_Name", DbType="VarChar(30)")]
		public string Assn_Name
		{
			get
			{
				return this._Assn_Name;
			}
			set
			{
				if ((this._Assn_Name != value))
				{
					this.OnAssn_NameChanging(value);
					this.SendPropertyChanging();
					this._Assn_Name = value;
					this.SendPropertyChanged("Assn_Name");
					this.OnAssn_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Assn_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Assn_Description
		{
			get
			{
				return this._Assn_Description;
			}
			set
			{
				if ((this._Assn_Description != value))
				{
					this.OnAssn_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Assn_Description = value;
					this.SendPropertyChanged("Assn_Description");
					this.OnAssn_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Assn_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Assn_Comment
		{
			get
			{
				return this._Assn_Comment;
			}
			set
			{
				if ((this._Assn_Comment != value))
				{
					this.OnAssn_CommentChanging(value);
					this.SendPropertyChanging();
					this._Assn_Comment = value;
					this.SendPropertyChanged("Assn_Comment");
					this.OnAssn_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Assn_RetreatId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Assn_RetreatId
		{
			get
			{
				return this._Assn_RetreatId;
			}
			set
			{
				if ((this._Assn_RetreatId != value))
				{
					if (this._jkp_Retreat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssn_RetreatIdChanging(value);
					this.SendPropertyChanging();
					this._Assn_RetreatId = value;
					this.SendPropertyChanged("Assn_RetreatId");
					this.OnAssn_RetreatIdChanged();
				}
			}
		}
		
		[Association(Name="jkp_Assignment_jkp_PersonAssignmentActivity", Storage="_jkp_PersonAssignmentActivities", ThisKey="Assn_ID", OtherKey="PAA_Assn_ID")]
		public EntitySet<jkp_PersonAssignmentActivity> jkp_PersonAssignmentActivities
		{
			get
			{
				return this._jkp_PersonAssignmentActivities;
			}
			set
			{
				this._jkp_PersonAssignmentActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Assignment_jkp_PersonAssignmentRetreat", Storage="_jkp_PersonAssignmentRetreats", ThisKey="Assn_ID", OtherKey="PAR_Assn_ID")]
		public EntitySet<jkp_PersonAssignmentRetreat> jkp_PersonAssignmentRetreats
		{
			get
			{
				return this._jkp_PersonAssignmentRetreats;
			}
			set
			{
				this._jkp_PersonAssignmentRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_Assignment", Storage="_jkp_Retreat", ThisKey="Assn_RetreatId", OtherKey="Ret_ID", IsForeignKey=true)]
		public jkp_Retreat jkp_Retreat
		{
			get
			{
				return this._jkp_Retreat.Entity;
			}
			set
			{
				jkp_Retreat previousValue = this._jkp_Retreat.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Retreat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Retreat.Entity = null;
						previousValue.jkp_Assignments.Remove(this);
					}
					this._jkp_Retreat.Entity = value;
					if ((value != null))
					{
						value.jkp_Assignments.Add(this);
						this._Assn_RetreatId = value.Ret_ID;
					}
					else
					{
						this._Assn_RetreatId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Retreat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_PersonAssignmentActivities(jkp_PersonAssignmentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Assignment = this;
		}
		
		private void detach_jkp_PersonAssignmentActivities(jkp_PersonAssignmentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Assignment = null;
		}
		
		private void attach_jkp_PersonAssignmentRetreats(jkp_PersonAssignmentRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Assignment = this;
		}
		
		private void detach_jkp_PersonAssignmentRetreats(jkp_PersonAssignmentRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Assignment = null;
		}
	}
	
	[Table(Name="dbo.jkp_Audio")]
	public partial class jkp_Audio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Aud_ID;
		
		private string _Aud_Pathname;
		
		private System.Nullable<int> _Aud_Size;
		
		private System.Nullable<decimal> _Aud_Duration;
		
		private System.Nullable<System.DateTime> _Aud_DateAdded;
		
		private System.Nullable<System.DateTime> _Aud_DateModified;
		
		private string _Aud_Title;
		
		private string _Aud_Genre;
		
		private string _Aud_Language;
		
		private string _Aud_Subject;
		
		private string _Aud_Contents;
		
		private string _Aud_Description;
		
		private string _Aud_Summary;
		
		private System.Nullable<int> _Aud_Year;
		
		private System.Nullable<int> _Aud_Disc_Number;
		
		private System.Nullable<int> _Aud_Track_Number;
		
		private System.Nullable<System.Guid> _Aud_Coll_ID;
		
		private string _Aud_Comment;
		
		private System.Nullable<System.Guid> _Aud_FileTypeId;
		
		private System.Nullable<System.Guid> _Aud_Presenter;
		
		private string _Aud_PreviewSmallUrl;
		
		private string _Aud_PreviewLargeUrl;
		
		private bool _Aud_Featured;
		
		private EntitySet<jkp_AudioActivity> _jkp_AudioActivities;
		
		private EntitySet<jkp_MediaRole> _jkp_MediaRoles;
		
		private EntitySet<jkp_PersonAudio> _jkp_PersonAudios;
		
		private EntityRef<jkp_Collection> _jkp_Collection;
		
		private EntityRef<jkp_FileType> _jkp_FileType;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAud_IDChanging(System.Guid value);
    partial void OnAud_IDChanged();
    partial void OnAud_PathnameChanging(string value);
    partial void OnAud_PathnameChanged();
    partial void OnAud_SizeChanging(System.Nullable<int> value);
    partial void OnAud_SizeChanged();
    partial void OnAud_DurationChanging(System.Nullable<decimal> value);
    partial void OnAud_DurationChanged();
    partial void OnAud_DateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnAud_DateAddedChanged();
    partial void OnAud_DateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnAud_DateModifiedChanged();
    partial void OnAud_TitleChanging(string value);
    partial void OnAud_TitleChanged();
    partial void OnAud_GenreChanging(string value);
    partial void OnAud_GenreChanged();
    partial void OnAud_LanguageChanging(string value);
    partial void OnAud_LanguageChanged();
    partial void OnAud_SubjectChanging(string value);
    partial void OnAud_SubjectChanged();
    partial void OnAud_ContentsChanging(string value);
    partial void OnAud_ContentsChanged();
    partial void OnAud_DescriptionChanging(string value);
    partial void OnAud_DescriptionChanged();
    partial void OnAud_SummaryChanging(string value);
    partial void OnAud_SummaryChanged();
    partial void OnAud_YearChanging(System.Nullable<int> value);
    partial void OnAud_YearChanged();
    partial void OnAud_Disc_NumberChanging(System.Nullable<int> value);
    partial void OnAud_Disc_NumberChanged();
    partial void OnAud_Track_NumberChanging(System.Nullable<int> value);
    partial void OnAud_Track_NumberChanged();
    partial void OnAud_Coll_IDChanging(System.Nullable<System.Guid> value);
    partial void OnAud_Coll_IDChanged();
    partial void OnAud_CommentChanging(string value);
    partial void OnAud_CommentChanged();
    partial void OnAud_FileTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnAud_FileTypeIdChanged();
    partial void OnAud_PresenterChanging(System.Nullable<System.Guid> value);
    partial void OnAud_PresenterChanged();
    partial void OnAud_PreviewSmallUrlChanging(string value);
    partial void OnAud_PreviewSmallUrlChanged();
    partial void OnAud_PreviewLargeUrlChanging(string value);
    partial void OnAud_PreviewLargeUrlChanged();
    partial void OnAud_FeaturedChanging(bool value);
    partial void OnAud_FeaturedChanged();
    #endregion
		
		public jkp_Audio()
		{
			this._jkp_AudioActivities = new EntitySet<jkp_AudioActivity>(new Action<jkp_AudioActivity>(this.attach_jkp_AudioActivities), new Action<jkp_AudioActivity>(this.detach_jkp_AudioActivities));
			this._jkp_MediaRoles = new EntitySet<jkp_MediaRole>(new Action<jkp_MediaRole>(this.attach_jkp_MediaRoles), new Action<jkp_MediaRole>(this.detach_jkp_MediaRoles));
			this._jkp_PersonAudios = new EntitySet<jkp_PersonAudio>(new Action<jkp_PersonAudio>(this.attach_jkp_PersonAudios), new Action<jkp_PersonAudio>(this.detach_jkp_PersonAudios));
			this._jkp_Collection = default(EntityRef<jkp_Collection>);
			this._jkp_FileType = default(EntityRef<jkp_FileType>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_Aud_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Aud_ID
		{
			get
			{
				return this._Aud_ID;
			}
			set
			{
				if ((this._Aud_ID != value))
				{
					this.OnAud_IDChanging(value);
					this.SendPropertyChanging();
					this._Aud_ID = value;
					this.SendPropertyChanged("Aud_ID");
					this.OnAud_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Pathname", DbType="VarChar(255)")]
		public string Aud_Pathname
		{
			get
			{
				return this._Aud_Pathname;
			}
			set
			{
				if ((this._Aud_Pathname != value))
				{
					this.OnAud_PathnameChanging(value);
					this.SendPropertyChanging();
					this._Aud_Pathname = value;
					this.SendPropertyChanged("Aud_Pathname");
					this.OnAud_PathnameChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Size", DbType="Int")]
		public System.Nullable<int> Aud_Size
		{
			get
			{
				return this._Aud_Size;
			}
			set
			{
				if ((this._Aud_Size != value))
				{
					this.OnAud_SizeChanging(value);
					this.SendPropertyChanging();
					this._Aud_Size = value;
					this.SendPropertyChanged("Aud_Size");
					this.OnAud_SizeChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Duration", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Aud_Duration
		{
			get
			{
				return this._Aud_Duration;
			}
			set
			{
				if ((this._Aud_Duration != value))
				{
					this.OnAud_DurationChanging(value);
					this.SendPropertyChanging();
					this._Aud_Duration = value;
					this.SendPropertyChanged("Aud_Duration");
					this.OnAud_DurationChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> Aud_DateAdded
		{
			get
			{
				return this._Aud_DateAdded;
			}
			set
			{
				if ((this._Aud_DateAdded != value))
				{
					this.OnAud_DateAddedChanging(value);
					this.SendPropertyChanging();
					this._Aud_DateAdded = value;
					this.SendPropertyChanged("Aud_DateAdded");
					this.OnAud_DateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Aud_DateModified
		{
			get
			{
				return this._Aud_DateModified;
			}
			set
			{
				if ((this._Aud_DateModified != value))
				{
					this.OnAud_DateModifiedChanging(value);
					this.SendPropertyChanging();
					this._Aud_DateModified = value;
					this.SendPropertyChanged("Aud_DateModified");
					this.OnAud_DateModifiedChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Title", DbType="VarChar(100)")]
		public string Aud_Title
		{
			get
			{
				return this._Aud_Title;
			}
			set
			{
				if ((this._Aud_Title != value))
				{
					this.OnAud_TitleChanging(value);
					this.SendPropertyChanging();
					this._Aud_Title = value;
					this.SendPropertyChanged("Aud_Title");
					this.OnAud_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Genre", DbType="VarChar(50)")]
		public string Aud_Genre
		{
			get
			{
				return this._Aud_Genre;
			}
			set
			{
				if ((this._Aud_Genre != value))
				{
					this.OnAud_GenreChanging(value);
					this.SendPropertyChanging();
					this._Aud_Genre = value;
					this.SendPropertyChanged("Aud_Genre");
					this.OnAud_GenreChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Language", DbType="VarChar(20)")]
		public string Aud_Language
		{
			get
			{
				return this._Aud_Language;
			}
			set
			{
				if ((this._Aud_Language != value))
				{
					this.OnAud_LanguageChanging(value);
					this.SendPropertyChanging();
					this._Aud_Language = value;
					this.SendPropertyChanged("Aud_Language");
					this.OnAud_LanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Subject", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Aud_Subject
		{
			get
			{
				return this._Aud_Subject;
			}
			set
			{
				if ((this._Aud_Subject != value))
				{
					this.OnAud_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Aud_Subject = value;
					this.SendPropertyChanged("Aud_Subject");
					this.OnAud_SubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Contents", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Aud_Contents
		{
			get
			{
				return this._Aud_Contents;
			}
			set
			{
				if ((this._Aud_Contents != value))
				{
					this.OnAud_ContentsChanging(value);
					this.SendPropertyChanging();
					this._Aud_Contents = value;
					this.SendPropertyChanged("Aud_Contents");
					this.OnAud_ContentsChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Aud_Description
		{
			get
			{
				return this._Aud_Description;
			}
			set
			{
				if ((this._Aud_Description != value))
				{
					this.OnAud_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Aud_Description = value;
					this.SendPropertyChanged("Aud_Description");
					this.OnAud_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Aud_Summary
		{
			get
			{
				return this._Aud_Summary;
			}
			set
			{
				if ((this._Aud_Summary != value))
				{
					this.OnAud_SummaryChanging(value);
					this.SendPropertyChanging();
					this._Aud_Summary = value;
					this.SendPropertyChanged("Aud_Summary");
					this.OnAud_SummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Year", DbType="Int")]
		public System.Nullable<int> Aud_Year
		{
			get
			{
				return this._Aud_Year;
			}
			set
			{
				if ((this._Aud_Year != value))
				{
					this.OnAud_YearChanging(value);
					this.SendPropertyChanging();
					this._Aud_Year = value;
					this.SendPropertyChanged("Aud_Year");
					this.OnAud_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Disc_Number", DbType="Int")]
		public System.Nullable<int> Aud_Disc_Number
		{
			get
			{
				return this._Aud_Disc_Number;
			}
			set
			{
				if ((this._Aud_Disc_Number != value))
				{
					this.OnAud_Disc_NumberChanging(value);
					this.SendPropertyChanging();
					this._Aud_Disc_Number = value;
					this.SendPropertyChanged("Aud_Disc_Number");
					this.OnAud_Disc_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Track_Number", DbType="Int")]
		public System.Nullable<int> Aud_Track_Number
		{
			get
			{
				return this._Aud_Track_Number;
			}
			set
			{
				if ((this._Aud_Track_Number != value))
				{
					this.OnAud_Track_NumberChanging(value);
					this.SendPropertyChanging();
					this._Aud_Track_Number = value;
					this.SendPropertyChanged("Aud_Track_Number");
					this.OnAud_Track_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Coll_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Aud_Coll_ID
		{
			get
			{
				return this._Aud_Coll_ID;
			}
			set
			{
				if ((this._Aud_Coll_ID != value))
				{
					if (this._jkp_Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAud_Coll_IDChanging(value);
					this.SendPropertyChanging();
					this._Aud_Coll_ID = value;
					this.SendPropertyChanged("Aud_Coll_ID");
					this.OnAud_Coll_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Aud_Comment
		{
			get
			{
				return this._Aud_Comment;
			}
			set
			{
				if ((this._Aud_Comment != value))
				{
					this.OnAud_CommentChanging(value);
					this.SendPropertyChanging();
					this._Aud_Comment = value;
					this.SendPropertyChanged("Aud_Comment");
					this.OnAud_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_FileTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Aud_FileTypeId
		{
			get
			{
				return this._Aud_FileTypeId;
			}
			set
			{
				if ((this._Aud_FileTypeId != value))
				{
					if (this._jkp_FileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAud_FileTypeIdChanging(value);
					this.SendPropertyChanging();
					this._Aud_FileTypeId = value;
					this.SendPropertyChanged("Aud_FileTypeId");
					this.OnAud_FileTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Presenter", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Aud_Presenter
		{
			get
			{
				return this._Aud_Presenter;
			}
			set
			{
				if ((this._Aud_Presenter != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAud_PresenterChanging(value);
					this.SendPropertyChanging();
					this._Aud_Presenter = value;
					this.SendPropertyChanged("Aud_Presenter");
					this.OnAud_PresenterChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_PreviewSmallUrl", DbType="VarChar(200)")]
		public string Aud_PreviewSmallUrl
		{
			get
			{
				return this._Aud_PreviewSmallUrl;
			}
			set
			{
				if ((this._Aud_PreviewSmallUrl != value))
				{
					this.OnAud_PreviewSmallUrlChanging(value);
					this.SendPropertyChanging();
					this._Aud_PreviewSmallUrl = value;
					this.SendPropertyChanged("Aud_PreviewSmallUrl");
					this.OnAud_PreviewSmallUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_PreviewLargeUrl", DbType="VarChar(200)")]
		public string Aud_PreviewLargeUrl
		{
			get
			{
				return this._Aud_PreviewLargeUrl;
			}
			set
			{
				if ((this._Aud_PreviewLargeUrl != value))
				{
					this.OnAud_PreviewLargeUrlChanging(value);
					this.SendPropertyChanging();
					this._Aud_PreviewLargeUrl = value;
					this.SendPropertyChanged("Aud_PreviewLargeUrl");
					this.OnAud_PreviewLargeUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Aud_Featured", DbType="Bit NOT NULL")]
		public bool Aud_Featured
		{
			get
			{
				return this._Aud_Featured;
			}
			set
			{
				if ((this._Aud_Featured != value))
				{
					this.OnAud_FeaturedChanging(value);
					this.SendPropertyChanging();
					this._Aud_Featured = value;
					this.SendPropertyChanged("Aud_Featured");
					this.OnAud_FeaturedChanged();
				}
			}
		}
		
		[Association(Name="jkp_Audio_jkp_AudioActivity", Storage="_jkp_AudioActivities", ThisKey="Aud_ID", OtherKey="AA_Aud_ID")]
		public EntitySet<jkp_AudioActivity> jkp_AudioActivities
		{
			get
			{
				return this._jkp_AudioActivities;
			}
			set
			{
				this._jkp_AudioActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Audio_jkp_MediaRole", Storage="_jkp_MediaRoles", ThisKey="Aud_ID", OtherKey="AudioId")]
		public EntitySet<jkp_MediaRole> jkp_MediaRoles
		{
			get
			{
				return this._jkp_MediaRoles;
			}
			set
			{
				this._jkp_MediaRoles.Assign(value);
			}
		}
		
		[Association(Name="jkp_Audio_jkp_PersonAudio", Storage="_jkp_PersonAudios", ThisKey="Aud_ID", OtherKey="PA_Aud_ID")]
		public EntitySet<jkp_PersonAudio> jkp_PersonAudios
		{
			get
			{
				return this._jkp_PersonAudios;
			}
			set
			{
				this._jkp_PersonAudios.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Audio", Storage="_jkp_Collection", ThisKey="Aud_Coll_ID", OtherKey="Coll_ID", IsForeignKey=true)]
		public jkp_Collection jkp_Collection
		{
			get
			{
				return this._jkp_Collection.Entity;
			}
			set
			{
				jkp_Collection previousValue = this._jkp_Collection.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Collection.Entity = null;
						previousValue.jkp_Audios.Remove(this);
					}
					this._jkp_Collection.Entity = value;
					if ((value != null))
					{
						value.jkp_Audios.Add(this);
						this._Aud_Coll_ID = value.Coll_ID;
					}
					else
					{
						this._Aud_Coll_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Collection");
				}
			}
		}
		
		[Association(Name="jkp_FileType_jkp_Audio", Storage="_jkp_FileType", ThisKey="Aud_FileTypeId", OtherKey="For_ID", IsForeignKey=true)]
		public jkp_FileType jkp_FileType
		{
			get
			{
				return this._jkp_FileType.Entity;
			}
			set
			{
				jkp_FileType previousValue = this._jkp_FileType.Entity;
				if (((previousValue != value) 
							|| (this._jkp_FileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_FileType.Entity = null;
						previousValue.jkp_Audios.Remove(this);
					}
					this._jkp_FileType.Entity = value;
					if ((value != null))
					{
						value.jkp_Audios.Add(this);
						this._Aud_FileTypeId = value.For_ID;
					}
					else
					{
						this._Aud_FileTypeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_FileType");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Audio", Storage="_jkp_Person", ThisKey="Aud_Presenter", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Audios.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Audios.Add(this);
						this._Aud_Presenter = value.Per_ID;
					}
					else
					{
						this._Aud_Presenter = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_AudioActivities(jkp_AudioActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Audio = this;
		}
		
		private void detach_jkp_AudioActivities(jkp_AudioActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Audio = null;
		}
		
		private void attach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Audio = this;
		}
		
		private void detach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Audio = null;
		}
		
		private void attach_jkp_PersonAudios(jkp_PersonAudio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Audio = this;
		}
		
		private void detach_jkp_PersonAudios(jkp_PersonAudio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Audio = null;
		}
	}
	
	[Table(Name="dbo.jkp_AudioActivity")]
	public partial class jkp_AudioActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AA_Aud_ID;
		
		private System.Guid _AA_Act_ID;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
		private EntityRef<jkp_Audio> _jkp_Audio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAA_Aud_IDChanging(System.Guid value);
    partial void OnAA_Aud_IDChanged();
    partial void OnAA_Act_IDChanging(System.Guid value);
    partial void OnAA_Act_IDChanged();
    #endregion
		
		public jkp_AudioActivity()
		{
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			this._jkp_Audio = default(EntityRef<jkp_Audio>);
			OnCreated();
		}
		
		[Column(Storage="_AA_Aud_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AA_Aud_ID
		{
			get
			{
				return this._AA_Aud_ID;
			}
			set
			{
				if ((this._AA_Aud_ID != value))
				{
					if (this._jkp_Audio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAA_Aud_IDChanging(value);
					this.SendPropertyChanging();
					this._AA_Aud_ID = value;
					this.SendPropertyChanged("AA_Aud_ID");
					this.OnAA_Aud_IDChanged();
				}
			}
		}
		
		[Column(Storage="_AA_Act_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AA_Act_ID
		{
			get
			{
				return this._AA_Act_ID;
			}
			set
			{
				if ((this._AA_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAA_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._AA_Act_ID = value;
					this.SendPropertyChanged("AA_Act_ID");
					this.OnAA_Act_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_AudioActivity", Storage="_jkp_Activity", ThisKey="AA_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_AudioActivities.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_AudioActivities.Add(this);
						this._AA_Act_ID = value.Act_ID;
					}
					else
					{
						this._AA_Act_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		[Association(Name="jkp_Audio_jkp_AudioActivity", Storage="_jkp_Audio", ThisKey="AA_Aud_ID", OtherKey="Aud_ID", IsForeignKey=true)]
		public jkp_Audio jkp_Audio
		{
			get
			{
				return this._jkp_Audio.Entity;
			}
			set
			{
				jkp_Audio previousValue = this._jkp_Audio.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Audio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Audio.Entity = null;
						previousValue.jkp_AudioActivities.Remove(this);
					}
					this._jkp_Audio.Entity = value;
					if ((value != null))
					{
						value.jkp_AudioActivities.Add(this);
						this._AA_Aud_ID = value.Aud_ID;
					}
					else
					{
						this._AA_Aud_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Audio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Authority")]
	public partial class jkp_Authority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Auth_ID;
		
		private string _Auth_Role;
		
		private string _Auth_Description;
		
		private EntitySet<jkp_AuthorityMediaAction> _jkp_AuthorityMediaActions;
		
		private EntitySet<jkp_AuthorityTablesAction> _jkp_AuthorityTablesActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuth_IDChanging(System.Guid value);
    partial void OnAuth_IDChanged();
    partial void OnAuth_RoleChanging(string value);
    partial void OnAuth_RoleChanged();
    partial void OnAuth_DescriptionChanging(string value);
    partial void OnAuth_DescriptionChanged();
    #endregion
		
		public jkp_Authority()
		{
			this._jkp_AuthorityMediaActions = new EntitySet<jkp_AuthorityMediaAction>(new Action<jkp_AuthorityMediaAction>(this.attach_jkp_AuthorityMediaActions), new Action<jkp_AuthorityMediaAction>(this.detach_jkp_AuthorityMediaActions));
			this._jkp_AuthorityTablesActions = new EntitySet<jkp_AuthorityTablesAction>(new Action<jkp_AuthorityTablesAction>(this.attach_jkp_AuthorityTablesActions), new Action<jkp_AuthorityTablesAction>(this.detach_jkp_AuthorityTablesActions));
			OnCreated();
		}
		
		[Column(Storage="_Auth_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Auth_ID
		{
			get
			{
				return this._Auth_ID;
			}
			set
			{
				if ((this._Auth_ID != value))
				{
					this.OnAuth_IDChanging(value);
					this.SendPropertyChanging();
					this._Auth_ID = value;
					this.SendPropertyChanged("Auth_ID");
					this.OnAuth_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Auth_Role", DbType="VarChar(30)")]
		public string Auth_Role
		{
			get
			{
				return this._Auth_Role;
			}
			set
			{
				if ((this._Auth_Role != value))
				{
					this.OnAuth_RoleChanging(value);
					this.SendPropertyChanging();
					this._Auth_Role = value;
					this.SendPropertyChanged("Auth_Role");
					this.OnAuth_RoleChanged();
				}
			}
		}
		
		[Column(Storage="_Auth_Description", DbType="VarChar(30)")]
		public string Auth_Description
		{
			get
			{
				return this._Auth_Description;
			}
			set
			{
				if ((this._Auth_Description != value))
				{
					this.OnAuth_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Auth_Description = value;
					this.SendPropertyChanged("Auth_Description");
					this.OnAuth_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="jkp_Authority_jkp_AuthorityMediaAction", Storage="_jkp_AuthorityMediaActions", ThisKey="Auth_ID", OtherKey="AMA_Auth_ID")]
		public EntitySet<jkp_AuthorityMediaAction> jkp_AuthorityMediaActions
		{
			get
			{
				return this._jkp_AuthorityMediaActions;
			}
			set
			{
				this._jkp_AuthorityMediaActions.Assign(value);
			}
		}
		
		[Association(Name="jkp_Authority_jkp_AuthorityTablesAction", Storage="_jkp_AuthorityTablesActions", ThisKey="Auth_ID", OtherKey="ATA_Auth_ID")]
		public EntitySet<jkp_AuthorityTablesAction> jkp_AuthorityTablesActions
		{
			get
			{
				return this._jkp_AuthorityTablesActions;
			}
			set
			{
				this._jkp_AuthorityTablesActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_AuthorityMediaActions(jkp_AuthorityMediaAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Authority = this;
		}
		
		private void detach_jkp_AuthorityMediaActions(jkp_AuthorityMediaAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Authority = null;
		}
		
		private void attach_jkp_AuthorityTablesActions(jkp_AuthorityTablesAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Authority = this;
		}
		
		private void detach_jkp_AuthorityTablesActions(jkp_AuthorityTablesAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Authority = null;
		}
	}
	
	[Table(Name="dbo.jkp_AuthorityMediaActions")]
	public partial class jkp_AuthorityMediaAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AMA_Auth_ID;
		
		private System.Guid _AMA_M_ID;
		
		private System.Guid _AMA_A_ID;
		
		private System.Nullable<char> _AMA_Default;
		
		private EntityRef<jkp_Action> _jkp_Action;
		
		private EntityRef<jkp_Authority> _jkp_Authority;
		
		private EntityRef<jkp_Media> _jkp_Media;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAMA_Auth_IDChanging(System.Guid value);
    partial void OnAMA_Auth_IDChanged();
    partial void OnAMA_M_IDChanging(System.Guid value);
    partial void OnAMA_M_IDChanged();
    partial void OnAMA_A_IDChanging(System.Guid value);
    partial void OnAMA_A_IDChanged();
    partial void OnAMA_DefaultChanging(System.Nullable<char> value);
    partial void OnAMA_DefaultChanged();
    #endregion
		
		public jkp_AuthorityMediaAction()
		{
			this._jkp_Action = default(EntityRef<jkp_Action>);
			this._jkp_Authority = default(EntityRef<jkp_Authority>);
			this._jkp_Media = default(EntityRef<jkp_Media>);
			OnCreated();
		}
		
		[Column(Storage="_AMA_Auth_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AMA_Auth_ID
		{
			get
			{
				return this._AMA_Auth_ID;
			}
			set
			{
				if ((this._AMA_Auth_ID != value))
				{
					if (this._jkp_Authority.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAMA_Auth_IDChanging(value);
					this.SendPropertyChanging();
					this._AMA_Auth_ID = value;
					this.SendPropertyChanged("AMA_Auth_ID");
					this.OnAMA_Auth_IDChanged();
				}
			}
		}
		
		[Column(Storage="_AMA_M_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AMA_M_ID
		{
			get
			{
				return this._AMA_M_ID;
			}
			set
			{
				if ((this._AMA_M_ID != value))
				{
					if (this._jkp_Media.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAMA_M_IDChanging(value);
					this.SendPropertyChanging();
					this._AMA_M_ID = value;
					this.SendPropertyChanged("AMA_M_ID");
					this.OnAMA_M_IDChanged();
				}
			}
		}
		
		[Column(Storage="_AMA_A_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AMA_A_ID
		{
			get
			{
				return this._AMA_A_ID;
			}
			set
			{
				if ((this._AMA_A_ID != value))
				{
					if (this._jkp_Action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAMA_A_IDChanging(value);
					this.SendPropertyChanging();
					this._AMA_A_ID = value;
					this.SendPropertyChanged("AMA_A_ID");
					this.OnAMA_A_IDChanged();
				}
			}
		}
		
		[Column(Storage="_AMA_Default", DbType="VarChar(1)")]
		public System.Nullable<char> AMA_Default
		{
			get
			{
				return this._AMA_Default;
			}
			set
			{
				if ((this._AMA_Default != value))
				{
					this.OnAMA_DefaultChanging(value);
					this.SendPropertyChanging();
					this._AMA_Default = value;
					this.SendPropertyChanged("AMA_Default");
					this.OnAMA_DefaultChanged();
				}
			}
		}
		
		[Association(Name="jkp_Action_jkp_AuthorityMediaAction", Storage="_jkp_Action", ThisKey="AMA_A_ID", OtherKey="A_ID", IsForeignKey=true)]
		public jkp_Action jkp_Action
		{
			get
			{
				return this._jkp_Action.Entity;
			}
			set
			{
				jkp_Action previousValue = this._jkp_Action.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Action.Entity = null;
						previousValue.jkp_AuthorityMediaActions.Remove(this);
					}
					this._jkp_Action.Entity = value;
					if ((value != null))
					{
						value.jkp_AuthorityMediaActions.Add(this);
						this._AMA_A_ID = value.A_ID;
					}
					else
					{
						this._AMA_A_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Action");
				}
			}
		}
		
		[Association(Name="jkp_Authority_jkp_AuthorityMediaAction", Storage="_jkp_Authority", ThisKey="AMA_Auth_ID", OtherKey="Auth_ID", IsForeignKey=true)]
		public jkp_Authority jkp_Authority
		{
			get
			{
				return this._jkp_Authority.Entity;
			}
			set
			{
				jkp_Authority previousValue = this._jkp_Authority.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Authority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Authority.Entity = null;
						previousValue.jkp_AuthorityMediaActions.Remove(this);
					}
					this._jkp_Authority.Entity = value;
					if ((value != null))
					{
						value.jkp_AuthorityMediaActions.Add(this);
						this._AMA_Auth_ID = value.Auth_ID;
					}
					else
					{
						this._AMA_Auth_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Authority");
				}
			}
		}
		
		[Association(Name="jkp_Media_jkp_AuthorityMediaAction", Storage="_jkp_Media", ThisKey="AMA_M_ID", OtherKey="M_ID", IsForeignKey=true)]
		public jkp_Media jkp_Media
		{
			get
			{
				return this._jkp_Media.Entity;
			}
			set
			{
				jkp_Media previousValue = this._jkp_Media.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Media.Entity = null;
						previousValue.jkp_AuthorityMediaActions.Remove(this);
					}
					this._jkp_Media.Entity = value;
					if ((value != null))
					{
						value.jkp_AuthorityMediaActions.Add(this);
						this._AMA_M_ID = value.M_ID;
					}
					else
					{
						this._AMA_M_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Media");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_AuthorityTablesActions")]
	public partial class jkp_AuthorityTablesAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ATA_Auth_ID;
		
		private System.Guid _ATA_T_ID;
		
		private System.Guid _ATA_A_ID;
		
		private System.Nullable<char> _ATA_Default;
		
		private EntityRef<jkp_Action> _jkp_Action;
		
		private EntityRef<jkp_Authority> _jkp_Authority;
		
		private EntityRef<jkp_Table> _jkp_Table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnATA_Auth_IDChanging(System.Guid value);
    partial void OnATA_Auth_IDChanged();
    partial void OnATA_T_IDChanging(System.Guid value);
    partial void OnATA_T_IDChanged();
    partial void OnATA_A_IDChanging(System.Guid value);
    partial void OnATA_A_IDChanged();
    partial void OnATA_DefaultChanging(System.Nullable<char> value);
    partial void OnATA_DefaultChanged();
    #endregion
		
		public jkp_AuthorityTablesAction()
		{
			this._jkp_Action = default(EntityRef<jkp_Action>);
			this._jkp_Authority = default(EntityRef<jkp_Authority>);
			this._jkp_Table = default(EntityRef<jkp_Table>);
			OnCreated();
		}
		
		[Column(Storage="_ATA_Auth_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ATA_Auth_ID
		{
			get
			{
				return this._ATA_Auth_ID;
			}
			set
			{
				if ((this._ATA_Auth_ID != value))
				{
					if (this._jkp_Authority.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnATA_Auth_IDChanging(value);
					this.SendPropertyChanging();
					this._ATA_Auth_ID = value;
					this.SendPropertyChanged("ATA_Auth_ID");
					this.OnATA_Auth_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ATA_T_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ATA_T_ID
		{
			get
			{
				return this._ATA_T_ID;
			}
			set
			{
				if ((this._ATA_T_ID != value))
				{
					if (this._jkp_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnATA_T_IDChanging(value);
					this.SendPropertyChanging();
					this._ATA_T_ID = value;
					this.SendPropertyChanged("ATA_T_ID");
					this.OnATA_T_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ATA_A_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ATA_A_ID
		{
			get
			{
				return this._ATA_A_ID;
			}
			set
			{
				if ((this._ATA_A_ID != value))
				{
					if (this._jkp_Action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnATA_A_IDChanging(value);
					this.SendPropertyChanging();
					this._ATA_A_ID = value;
					this.SendPropertyChanged("ATA_A_ID");
					this.OnATA_A_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ATA_Default", DbType="VarChar(1)")]
		public System.Nullable<char> ATA_Default
		{
			get
			{
				return this._ATA_Default;
			}
			set
			{
				if ((this._ATA_Default != value))
				{
					this.OnATA_DefaultChanging(value);
					this.SendPropertyChanging();
					this._ATA_Default = value;
					this.SendPropertyChanged("ATA_Default");
					this.OnATA_DefaultChanged();
				}
			}
		}
		
		[Association(Name="jkp_Action_jkp_AuthorityTablesAction", Storage="_jkp_Action", ThisKey="ATA_A_ID", OtherKey="A_ID", IsForeignKey=true)]
		public jkp_Action jkp_Action
		{
			get
			{
				return this._jkp_Action.Entity;
			}
			set
			{
				jkp_Action previousValue = this._jkp_Action.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Action.Entity = null;
						previousValue.jkp_AuthorityTablesActions.Remove(this);
					}
					this._jkp_Action.Entity = value;
					if ((value != null))
					{
						value.jkp_AuthorityTablesActions.Add(this);
						this._ATA_A_ID = value.A_ID;
					}
					else
					{
						this._ATA_A_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Action");
				}
			}
		}
		
		[Association(Name="jkp_Authority_jkp_AuthorityTablesAction", Storage="_jkp_Authority", ThisKey="ATA_Auth_ID", OtherKey="Auth_ID", IsForeignKey=true)]
		public jkp_Authority jkp_Authority
		{
			get
			{
				return this._jkp_Authority.Entity;
			}
			set
			{
				jkp_Authority previousValue = this._jkp_Authority.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Authority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Authority.Entity = null;
						previousValue.jkp_AuthorityTablesActions.Remove(this);
					}
					this._jkp_Authority.Entity = value;
					if ((value != null))
					{
						value.jkp_AuthorityTablesActions.Add(this);
						this._ATA_Auth_ID = value.Auth_ID;
					}
					else
					{
						this._ATA_Auth_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Authority");
				}
			}
		}
		
		[Association(Name="jkp_Table_jkp_AuthorityTablesAction", Storage="_jkp_Table", ThisKey="ATA_T_ID", OtherKey="T_ID", IsForeignKey=true)]
		public jkp_Table jkp_Table
		{
			get
			{
				return this._jkp_Table.Entity;
			}
			set
			{
				jkp_Table previousValue = this._jkp_Table.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Table.Entity = null;
						previousValue.jkp_AuthorityTablesActions.Remove(this);
					}
					this._jkp_Table.Entity = value;
					if ((value != null))
					{
						value.jkp_AuthorityTablesActions.Add(this);
						this._ATA_T_ID = value.T_ID;
					}
					else
					{
						this._ATA_T_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Book")]
	public partial class jkp_Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Bk_ID;
		
		private string _Bk_Pathname;
		
		private System.Nullable<int> _Bk_Size;
		
		private System.Nullable<System.DateTime> _Bk_DateAdded;
		
		private System.Nullable<System.DateTime> _Bk_DateModified;
		
		private string _Bk_Title;
		
		private string _Bk_Genre;
		
		private string _Bk_Language;
		
		private string _Bk_Edition;
		
		private string _Bk_Publisher;
		
		private string _Bk_Subject;
		
		private string _Bk_Contents;
		
		private string _Bk_Description;
		
		private string _Bk_Summary;
		
		private System.Nullable<int> _Bk_Year;
		
		private System.Nullable<System.Guid> _Bk_Coll_ID;
		
		private string _Bk_Comment;
		
		private System.Nullable<System.Guid> _Bk_FileTypeId;
		
		private string _Bk_PreviewSmallUrl;
		
		private string _Bk_PreviewMediumUrl;
		
		private System.Nullable<System.Guid> _Bk_Author;
		
		private bool _Bk_Featured;
		
		private EntitySet<jkp_BookActivity> _jkp_BookActivities;
		
		private EntitySet<jkp_MediaRole> _jkp_MediaRoles;
		
		private EntitySet<jkp_PersonBook> _jkp_PersonBooks;
		
		private EntityRef<jkp_Collection> _jkp_Collection;
		
		private EntityRef<jkp_FileType> _jkp_FileType;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBk_IDChanging(System.Guid value);
    partial void OnBk_IDChanged();
    partial void OnBk_PathnameChanging(string value);
    partial void OnBk_PathnameChanged();
    partial void OnBk_SizeChanging(System.Nullable<int> value);
    partial void OnBk_SizeChanged();
    partial void OnBk_DateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnBk_DateAddedChanged();
    partial void OnBk_DateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnBk_DateModifiedChanged();
    partial void OnBk_TitleChanging(string value);
    partial void OnBk_TitleChanged();
    partial void OnBk_GenreChanging(string value);
    partial void OnBk_GenreChanged();
    partial void OnBk_LanguageChanging(string value);
    partial void OnBk_LanguageChanged();
    partial void OnBk_EditionChanging(string value);
    partial void OnBk_EditionChanged();
    partial void OnBk_PublisherChanging(string value);
    partial void OnBk_PublisherChanged();
    partial void OnBk_SubjectChanging(string value);
    partial void OnBk_SubjectChanged();
    partial void OnBk_ContentsChanging(string value);
    partial void OnBk_ContentsChanged();
    partial void OnBk_DescriptionChanging(string value);
    partial void OnBk_DescriptionChanged();
    partial void OnBk_SummaryChanging(string value);
    partial void OnBk_SummaryChanged();
    partial void OnBk_YearChanging(System.Nullable<int> value);
    partial void OnBk_YearChanged();
    partial void OnBk_Coll_IDChanging(System.Nullable<System.Guid> value);
    partial void OnBk_Coll_IDChanged();
    partial void OnBk_CommentChanging(string value);
    partial void OnBk_CommentChanged();
    partial void OnBk_FileTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnBk_FileTypeIdChanged();
    partial void OnBk_PreviewSmallUrlChanging(string value);
    partial void OnBk_PreviewSmallUrlChanged();
    partial void OnBk_PreviewMediumUrlChanging(string value);
    partial void OnBk_PreviewMediumUrlChanged();
    partial void OnBk_AuthorChanging(System.Nullable<System.Guid> value);
    partial void OnBk_AuthorChanged();
    partial void OnBk_FeaturedChanging(bool value);
    partial void OnBk_FeaturedChanged();
    #endregion
		
		public jkp_Book()
		{
			this._jkp_BookActivities = new EntitySet<jkp_BookActivity>(new Action<jkp_BookActivity>(this.attach_jkp_BookActivities), new Action<jkp_BookActivity>(this.detach_jkp_BookActivities));
			this._jkp_MediaRoles = new EntitySet<jkp_MediaRole>(new Action<jkp_MediaRole>(this.attach_jkp_MediaRoles), new Action<jkp_MediaRole>(this.detach_jkp_MediaRoles));
			this._jkp_PersonBooks = new EntitySet<jkp_PersonBook>(new Action<jkp_PersonBook>(this.attach_jkp_PersonBooks), new Action<jkp_PersonBook>(this.detach_jkp_PersonBooks));
			this._jkp_Collection = default(EntityRef<jkp_Collection>);
			this._jkp_FileType = default(EntityRef<jkp_FileType>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_Bk_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Bk_ID
		{
			get
			{
				return this._Bk_ID;
			}
			set
			{
				if ((this._Bk_ID != value))
				{
					this.OnBk_IDChanging(value);
					this.SendPropertyChanging();
					this._Bk_ID = value;
					this.SendPropertyChanged("Bk_ID");
					this.OnBk_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Pathname", DbType="VarChar(255)")]
		public string Bk_Pathname
		{
			get
			{
				return this._Bk_Pathname;
			}
			set
			{
				if ((this._Bk_Pathname != value))
				{
					this.OnBk_PathnameChanging(value);
					this.SendPropertyChanging();
					this._Bk_Pathname = value;
					this.SendPropertyChanged("Bk_Pathname");
					this.OnBk_PathnameChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Size", DbType="Int")]
		public System.Nullable<int> Bk_Size
		{
			get
			{
				return this._Bk_Size;
			}
			set
			{
				if ((this._Bk_Size != value))
				{
					this.OnBk_SizeChanging(value);
					this.SendPropertyChanging();
					this._Bk_Size = value;
					this.SendPropertyChanged("Bk_Size");
					this.OnBk_SizeChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bk_DateAdded
		{
			get
			{
				return this._Bk_DateAdded;
			}
			set
			{
				if ((this._Bk_DateAdded != value))
				{
					this.OnBk_DateAddedChanging(value);
					this.SendPropertyChanging();
					this._Bk_DateAdded = value;
					this.SendPropertyChanged("Bk_DateAdded");
					this.OnBk_DateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Bk_DateModified
		{
			get
			{
				return this._Bk_DateModified;
			}
			set
			{
				if ((this._Bk_DateModified != value))
				{
					this.OnBk_DateModifiedChanging(value);
					this.SendPropertyChanging();
					this._Bk_DateModified = value;
					this.SendPropertyChanged("Bk_DateModified");
					this.OnBk_DateModifiedChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Title", DbType="VarChar(100)")]
		public string Bk_Title
		{
			get
			{
				return this._Bk_Title;
			}
			set
			{
				if ((this._Bk_Title != value))
				{
					this.OnBk_TitleChanging(value);
					this.SendPropertyChanging();
					this._Bk_Title = value;
					this.SendPropertyChanged("Bk_Title");
					this.OnBk_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Genre", DbType="VarChar(50)")]
		public string Bk_Genre
		{
			get
			{
				return this._Bk_Genre;
			}
			set
			{
				if ((this._Bk_Genre != value))
				{
					this.OnBk_GenreChanging(value);
					this.SendPropertyChanging();
					this._Bk_Genre = value;
					this.SendPropertyChanged("Bk_Genre");
					this.OnBk_GenreChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Language", DbType="VarChar(20)")]
		public string Bk_Language
		{
			get
			{
				return this._Bk_Language;
			}
			set
			{
				if ((this._Bk_Language != value))
				{
					this.OnBk_LanguageChanging(value);
					this.SendPropertyChanging();
					this._Bk_Language = value;
					this.SendPropertyChanged("Bk_Language");
					this.OnBk_LanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Edition", DbType="VarChar(20)")]
		public string Bk_Edition
		{
			get
			{
				return this._Bk_Edition;
			}
			set
			{
				if ((this._Bk_Edition != value))
				{
					this.OnBk_EditionChanging(value);
					this.SendPropertyChanging();
					this._Bk_Edition = value;
					this.SendPropertyChanged("Bk_Edition");
					this.OnBk_EditionChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Publisher", DbType="VarChar(255)")]
		public string Bk_Publisher
		{
			get
			{
				return this._Bk_Publisher;
			}
			set
			{
				if ((this._Bk_Publisher != value))
				{
					this.OnBk_PublisherChanging(value);
					this.SendPropertyChanging();
					this._Bk_Publisher = value;
					this.SendPropertyChanged("Bk_Publisher");
					this.OnBk_PublisherChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Subject", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bk_Subject
		{
			get
			{
				return this._Bk_Subject;
			}
			set
			{
				if ((this._Bk_Subject != value))
				{
					this.OnBk_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Bk_Subject = value;
					this.SendPropertyChanged("Bk_Subject");
					this.OnBk_SubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Contents", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bk_Contents
		{
			get
			{
				return this._Bk_Contents;
			}
			set
			{
				if ((this._Bk_Contents != value))
				{
					this.OnBk_ContentsChanging(value);
					this.SendPropertyChanging();
					this._Bk_Contents = value;
					this.SendPropertyChanged("Bk_Contents");
					this.OnBk_ContentsChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bk_Description
		{
			get
			{
				return this._Bk_Description;
			}
			set
			{
				if ((this._Bk_Description != value))
				{
					this.OnBk_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Bk_Description = value;
					this.SendPropertyChanged("Bk_Description");
					this.OnBk_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bk_Summary
		{
			get
			{
				return this._Bk_Summary;
			}
			set
			{
				if ((this._Bk_Summary != value))
				{
					this.OnBk_SummaryChanging(value);
					this.SendPropertyChanging();
					this._Bk_Summary = value;
					this.SendPropertyChanged("Bk_Summary");
					this.OnBk_SummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Year", DbType="Int")]
		public System.Nullable<int> Bk_Year
		{
			get
			{
				return this._Bk_Year;
			}
			set
			{
				if ((this._Bk_Year != value))
				{
					this.OnBk_YearChanging(value);
					this.SendPropertyChanging();
					this._Bk_Year = value;
					this.SendPropertyChanged("Bk_Year");
					this.OnBk_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Coll_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Bk_Coll_ID
		{
			get
			{
				return this._Bk_Coll_ID;
			}
			set
			{
				if ((this._Bk_Coll_ID != value))
				{
					if (this._jkp_Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBk_Coll_IDChanging(value);
					this.SendPropertyChanging();
					this._Bk_Coll_ID = value;
					this.SendPropertyChanged("Bk_Coll_ID");
					this.OnBk_Coll_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bk_Comment
		{
			get
			{
				return this._Bk_Comment;
			}
			set
			{
				if ((this._Bk_Comment != value))
				{
					this.OnBk_CommentChanging(value);
					this.SendPropertyChanging();
					this._Bk_Comment = value;
					this.SendPropertyChanged("Bk_Comment");
					this.OnBk_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_FileTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Bk_FileTypeId
		{
			get
			{
				return this._Bk_FileTypeId;
			}
			set
			{
				if ((this._Bk_FileTypeId != value))
				{
					if (this._jkp_FileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBk_FileTypeIdChanging(value);
					this.SendPropertyChanging();
					this._Bk_FileTypeId = value;
					this.SendPropertyChanged("Bk_FileTypeId");
					this.OnBk_FileTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_PreviewSmallUrl", DbType="VarChar(200)")]
		public string Bk_PreviewSmallUrl
		{
			get
			{
				return this._Bk_PreviewSmallUrl;
			}
			set
			{
				if ((this._Bk_PreviewSmallUrl != value))
				{
					this.OnBk_PreviewSmallUrlChanging(value);
					this.SendPropertyChanging();
					this._Bk_PreviewSmallUrl = value;
					this.SendPropertyChanged("Bk_PreviewSmallUrl");
					this.OnBk_PreviewSmallUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_PreviewMediumUrl", DbType="VarChar(200)")]
		public string Bk_PreviewMediumUrl
		{
			get
			{
				return this._Bk_PreviewMediumUrl;
			}
			set
			{
				if ((this._Bk_PreviewMediumUrl != value))
				{
					this.OnBk_PreviewMediumUrlChanging(value);
					this.SendPropertyChanging();
					this._Bk_PreviewMediumUrl = value;
					this.SendPropertyChanged("Bk_PreviewMediumUrl");
					this.OnBk_PreviewMediumUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Author", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Bk_Author
		{
			get
			{
				return this._Bk_Author;
			}
			set
			{
				if ((this._Bk_Author != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBk_AuthorChanging(value);
					this.SendPropertyChanging();
					this._Bk_Author = value;
					this.SendPropertyChanged("Bk_Author");
					this.OnBk_AuthorChanged();
				}
			}
		}
		
		[Column(Storage="_Bk_Featured", DbType="Bit NOT NULL")]
		public bool Bk_Featured
		{
			get
			{
				return this._Bk_Featured;
			}
			set
			{
				if ((this._Bk_Featured != value))
				{
					this.OnBk_FeaturedChanging(value);
					this.SendPropertyChanging();
					this._Bk_Featured = value;
					this.SendPropertyChanged("Bk_Featured");
					this.OnBk_FeaturedChanged();
				}
			}
		}
		
		[Association(Name="jkp_Book_jkp_BookActivity", Storage="_jkp_BookActivities", ThisKey="Bk_ID", OtherKey="BA_Bk_ID")]
		public EntitySet<jkp_BookActivity> jkp_BookActivities
		{
			get
			{
				return this._jkp_BookActivities;
			}
			set
			{
				this._jkp_BookActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Book_jkp_MediaRole", Storage="_jkp_MediaRoles", ThisKey="Bk_ID", OtherKey="BookId")]
		public EntitySet<jkp_MediaRole> jkp_MediaRoles
		{
			get
			{
				return this._jkp_MediaRoles;
			}
			set
			{
				this._jkp_MediaRoles.Assign(value);
			}
		}
		
		[Association(Name="jkp_Book_jkp_PersonBook", Storage="_jkp_PersonBooks", ThisKey="Bk_ID", OtherKey="PB_Bk_ID")]
		public EntitySet<jkp_PersonBook> jkp_PersonBooks
		{
			get
			{
				return this._jkp_PersonBooks;
			}
			set
			{
				this._jkp_PersonBooks.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Book", Storage="_jkp_Collection", ThisKey="Bk_Coll_ID", OtherKey="Coll_ID", IsForeignKey=true)]
		public jkp_Collection jkp_Collection
		{
			get
			{
				return this._jkp_Collection.Entity;
			}
			set
			{
				jkp_Collection previousValue = this._jkp_Collection.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Collection.Entity = null;
						previousValue.jkp_Books.Remove(this);
					}
					this._jkp_Collection.Entity = value;
					if ((value != null))
					{
						value.jkp_Books.Add(this);
						this._Bk_Coll_ID = value.Coll_ID;
					}
					else
					{
						this._Bk_Coll_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Collection");
				}
			}
		}
		
		[Association(Name="jkp_FileType_jkp_Book", Storage="_jkp_FileType", ThisKey="Bk_FileTypeId", OtherKey="For_ID", IsForeignKey=true)]
		public jkp_FileType jkp_FileType
		{
			get
			{
				return this._jkp_FileType.Entity;
			}
			set
			{
				jkp_FileType previousValue = this._jkp_FileType.Entity;
				if (((previousValue != value) 
							|| (this._jkp_FileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_FileType.Entity = null;
						previousValue.jkp_Books.Remove(this);
					}
					this._jkp_FileType.Entity = value;
					if ((value != null))
					{
						value.jkp_Books.Add(this);
						this._Bk_FileTypeId = value.For_ID;
					}
					else
					{
						this._Bk_FileTypeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_FileType");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Book", Storage="_jkp_Person", ThisKey="Bk_Author", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Books.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Books.Add(this);
						this._Bk_Author = value.Per_ID;
					}
					else
					{
						this._Bk_Author = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_BookActivities(jkp_BookActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Book = this;
		}
		
		private void detach_jkp_BookActivities(jkp_BookActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Book = null;
		}
		
		private void attach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Book = this;
		}
		
		private void detach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Book = null;
		}
		
		private void attach_jkp_PersonBooks(jkp_PersonBook entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Book = this;
		}
		
		private void detach_jkp_PersonBooks(jkp_PersonBook entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Book = null;
		}
	}
	
	[Table(Name="dbo.jkp_BookActivity")]
	public partial class jkp_BookActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BA_Bk_ID;
		
		private System.Guid _BA_Act_ID;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
		private EntityRef<jkp_Book> _jkp_Book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBA_Bk_IDChanging(System.Guid value);
    partial void OnBA_Bk_IDChanged();
    partial void OnBA_Act_IDChanging(System.Guid value);
    partial void OnBA_Act_IDChanged();
    #endregion
		
		public jkp_BookActivity()
		{
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			this._jkp_Book = default(EntityRef<jkp_Book>);
			OnCreated();
		}
		
		[Column(Storage="_BA_Bk_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BA_Bk_ID
		{
			get
			{
				return this._BA_Bk_ID;
			}
			set
			{
				if ((this._BA_Bk_ID != value))
				{
					if (this._jkp_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBA_Bk_IDChanging(value);
					this.SendPropertyChanging();
					this._BA_Bk_ID = value;
					this.SendPropertyChanged("BA_Bk_ID");
					this.OnBA_Bk_IDChanged();
				}
			}
		}
		
		[Column(Storage="_BA_Act_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BA_Act_ID
		{
			get
			{
				return this._BA_Act_ID;
			}
			set
			{
				if ((this._BA_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBA_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._BA_Act_ID = value;
					this.SendPropertyChanged("BA_Act_ID");
					this.OnBA_Act_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_BookActivity", Storage="_jkp_Activity", ThisKey="BA_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_BookActivities.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_BookActivities.Add(this);
						this._BA_Act_ID = value.Act_ID;
					}
					else
					{
						this._BA_Act_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		[Association(Name="jkp_Book_jkp_BookActivity", Storage="_jkp_Book", ThisKey="BA_Bk_ID", OtherKey="Bk_ID", IsForeignKey=true)]
		public jkp_Book jkp_Book
		{
			get
			{
				return this._jkp_Book.Entity;
			}
			set
			{
				jkp_Book previousValue = this._jkp_Book.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Book.Entity = null;
						previousValue.jkp_BookActivities.Remove(this);
					}
					this._jkp_Book.Entity = value;
					if ((value != null))
					{
						value.jkp_BookActivities.Add(this);
						this._BA_Bk_ID = value.Bk_ID;
					}
					else
					{
						this._BA_Bk_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Building")]
	public partial class jkp_Building : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Bld_ID;
		
		private System.Nullable<System.Guid> _Bld_Ham_ID;
		
		private string _Bld_VietnameseName;
		
		private string _Bld_EnglishName;
		
		private string _Bld_LocalName;
		
		private string _Bld_Directions;
		
		private string _Bld_Description;
		
		private string _Bld_Comment;
		
		private EntitySet<jkp_Room> _jkp_Rooms;
		
		private EntityRef<jkp_Hamlet> _jkp_Hamlet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBld_IDChanging(System.Guid value);
    partial void OnBld_IDChanged();
    partial void OnBld_Ham_IDChanging(System.Nullable<System.Guid> value);
    partial void OnBld_Ham_IDChanged();
    partial void OnBld_VietnameseNameChanging(string value);
    partial void OnBld_VietnameseNameChanged();
    partial void OnBld_EnglishNameChanging(string value);
    partial void OnBld_EnglishNameChanged();
    partial void OnBld_LocalNameChanging(string value);
    partial void OnBld_LocalNameChanged();
    partial void OnBld_DirectionsChanging(string value);
    partial void OnBld_DirectionsChanged();
    partial void OnBld_DescriptionChanging(string value);
    partial void OnBld_DescriptionChanged();
    partial void OnBld_CommentChanging(string value);
    partial void OnBld_CommentChanged();
    #endregion
		
		public jkp_Building()
		{
			this._jkp_Rooms = new EntitySet<jkp_Room>(new Action<jkp_Room>(this.attach_jkp_Rooms), new Action<jkp_Room>(this.detach_jkp_Rooms));
			this._jkp_Hamlet = default(EntityRef<jkp_Hamlet>);
			OnCreated();
		}
		
		[Column(Storage="_Bld_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Bld_ID
		{
			get
			{
				return this._Bld_ID;
			}
			set
			{
				if ((this._Bld_ID != value))
				{
					this.OnBld_IDChanging(value);
					this.SendPropertyChanging();
					this._Bld_ID = value;
					this.SendPropertyChanged("Bld_ID");
					this.OnBld_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Bld_Ham_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Bld_Ham_ID
		{
			get
			{
				return this._Bld_Ham_ID;
			}
			set
			{
				if ((this._Bld_Ham_ID != value))
				{
					if (this._jkp_Hamlet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBld_Ham_IDChanging(value);
					this.SendPropertyChanging();
					this._Bld_Ham_ID = value;
					this.SendPropertyChanged("Bld_Ham_ID");
					this.OnBld_Ham_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Bld_VietnameseName", DbType="VarChar(50)")]
		public string Bld_VietnameseName
		{
			get
			{
				return this._Bld_VietnameseName;
			}
			set
			{
				if ((this._Bld_VietnameseName != value))
				{
					this.OnBld_VietnameseNameChanging(value);
					this.SendPropertyChanging();
					this._Bld_VietnameseName = value;
					this.SendPropertyChanged("Bld_VietnameseName");
					this.OnBld_VietnameseNameChanged();
				}
			}
		}
		
		[Column(Storage="_Bld_EnglishName", DbType="VarChar(50)")]
		public string Bld_EnglishName
		{
			get
			{
				return this._Bld_EnglishName;
			}
			set
			{
				if ((this._Bld_EnglishName != value))
				{
					this.OnBld_EnglishNameChanging(value);
					this.SendPropertyChanging();
					this._Bld_EnglishName = value;
					this.SendPropertyChanged("Bld_EnglishName");
					this.OnBld_EnglishNameChanged();
				}
			}
		}
		
		[Column(Storage="_Bld_LocalName", DbType="VarChar(50)")]
		public string Bld_LocalName
		{
			get
			{
				return this._Bld_LocalName;
			}
			set
			{
				if ((this._Bld_LocalName != value))
				{
					this.OnBld_LocalNameChanging(value);
					this.SendPropertyChanging();
					this._Bld_LocalName = value;
					this.SendPropertyChanged("Bld_LocalName");
					this.OnBld_LocalNameChanged();
				}
			}
		}
		
		[Column(Storage="_Bld_Directions", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bld_Directions
		{
			get
			{
				return this._Bld_Directions;
			}
			set
			{
				if ((this._Bld_Directions != value))
				{
					this.OnBld_DirectionsChanging(value);
					this.SendPropertyChanging();
					this._Bld_Directions = value;
					this.SendPropertyChanged("Bld_Directions");
					this.OnBld_DirectionsChanged();
				}
			}
		}
		
		[Column(Storage="_Bld_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bld_Description
		{
			get
			{
				return this._Bld_Description;
			}
			set
			{
				if ((this._Bld_Description != value))
				{
					this.OnBld_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Bld_Description = value;
					this.SendPropertyChanged("Bld_Description");
					this.OnBld_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Bld_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bld_Comment
		{
			get
			{
				return this._Bld_Comment;
			}
			set
			{
				if ((this._Bld_Comment != value))
				{
					this.OnBld_CommentChanging(value);
					this.SendPropertyChanging();
					this._Bld_Comment = value;
					this.SendPropertyChanged("Bld_Comment");
					this.OnBld_CommentChanged();
				}
			}
		}
		
		[Association(Name="jkp_Building_jkp_Room", Storage="_jkp_Rooms", ThisKey="Bld_ID", OtherKey="Rm_Bld_ID")]
		public EntitySet<jkp_Room> jkp_Rooms
		{
			get
			{
				return this._jkp_Rooms;
			}
			set
			{
				this._jkp_Rooms.Assign(value);
			}
		}
		
		[Association(Name="jkp_Hamlet_jkp_Building", Storage="_jkp_Hamlet", ThisKey="Bld_Ham_ID", OtherKey="Ham_ID", IsForeignKey=true)]
		public jkp_Hamlet jkp_Hamlet
		{
			get
			{
				return this._jkp_Hamlet.Entity;
			}
			set
			{
				jkp_Hamlet previousValue = this._jkp_Hamlet.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Hamlet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Hamlet.Entity = null;
						previousValue.jkp_Buildings.Remove(this);
					}
					this._jkp_Hamlet.Entity = value;
					if ((value != null))
					{
						value.jkp_Buildings.Add(this);
						this._Bld_Ham_ID = value.Ham_ID;
					}
					else
					{
						this._Bld_Ham_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Hamlet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Rooms(jkp_Room entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Building = this;
		}
		
		private void detach_jkp_Rooms(jkp_Room entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Building = null;
		}
	}
	
	[Table(Name="dbo.jkp_Collection")]
	public partial class jkp_Collection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Coll_ID;
		
		private string _Coll_Name;
		
		private string _Coll_Description;
		
		private EntitySet<jkp_Audio> _jkp_Audios;
		
		private EntitySet<jkp_Book> _jkp_Books;
		
		private EntitySet<jkp_Document> _jkp_Documents;
		
		private EntitySet<jkp_Image> _jkp_Images;
		
		private EntitySet<jkp_Video> _jkp_Videos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnColl_IDChanging(System.Guid value);
    partial void OnColl_IDChanged();
    partial void OnColl_NameChanging(string value);
    partial void OnColl_NameChanged();
    partial void OnColl_DescriptionChanging(string value);
    partial void OnColl_DescriptionChanged();
    #endregion
		
		public jkp_Collection()
		{
			this._jkp_Audios = new EntitySet<jkp_Audio>(new Action<jkp_Audio>(this.attach_jkp_Audios), new Action<jkp_Audio>(this.detach_jkp_Audios));
			this._jkp_Books = new EntitySet<jkp_Book>(new Action<jkp_Book>(this.attach_jkp_Books), new Action<jkp_Book>(this.detach_jkp_Books));
			this._jkp_Documents = new EntitySet<jkp_Document>(new Action<jkp_Document>(this.attach_jkp_Documents), new Action<jkp_Document>(this.detach_jkp_Documents));
			this._jkp_Images = new EntitySet<jkp_Image>(new Action<jkp_Image>(this.attach_jkp_Images), new Action<jkp_Image>(this.detach_jkp_Images));
			this._jkp_Videos = new EntitySet<jkp_Video>(new Action<jkp_Video>(this.attach_jkp_Videos), new Action<jkp_Video>(this.detach_jkp_Videos));
			OnCreated();
		}
		
		[Column(Storage="_Coll_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Coll_ID
		{
			get
			{
				return this._Coll_ID;
			}
			set
			{
				if ((this._Coll_ID != value))
				{
					this.OnColl_IDChanging(value);
					this.SendPropertyChanging();
					this._Coll_ID = value;
					this.SendPropertyChanged("Coll_ID");
					this.OnColl_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Coll_Name", DbType="VarChar(50)")]
		public string Coll_Name
		{
			get
			{
				return this._Coll_Name;
			}
			set
			{
				if ((this._Coll_Name != value))
				{
					this.OnColl_NameChanging(value);
					this.SendPropertyChanging();
					this._Coll_Name = value;
					this.SendPropertyChanged("Coll_Name");
					this.OnColl_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Coll_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Coll_Description
		{
			get
			{
				return this._Coll_Description;
			}
			set
			{
				if ((this._Coll_Description != value))
				{
					this.OnColl_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Coll_Description = value;
					this.SendPropertyChanged("Coll_Description");
					this.OnColl_DescriptionChanged();
				}
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Audio", Storage="_jkp_Audios", ThisKey="Coll_ID", OtherKey="Aud_Coll_ID")]
		public EntitySet<jkp_Audio> jkp_Audios
		{
			get
			{
				return this._jkp_Audios;
			}
			set
			{
				this._jkp_Audios.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Book", Storage="_jkp_Books", ThisKey="Coll_ID", OtherKey="Bk_Coll_ID")]
		public EntitySet<jkp_Book> jkp_Books
		{
			get
			{
				return this._jkp_Books;
			}
			set
			{
				this._jkp_Books.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Document", Storage="_jkp_Documents", ThisKey="Coll_ID", OtherKey="Doc_Coll_ID")]
		public EntitySet<jkp_Document> jkp_Documents
		{
			get
			{
				return this._jkp_Documents;
			}
			set
			{
				this._jkp_Documents.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Image", Storage="_jkp_Images", ThisKey="Coll_ID", OtherKey="Img_Coll_ID")]
		public EntitySet<jkp_Image> jkp_Images
		{
			get
			{
				return this._jkp_Images;
			}
			set
			{
				this._jkp_Images.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Video", Storage="_jkp_Videos", ThisKey="Coll_ID", OtherKey="Vid_Coll_ID")]
		public EntitySet<jkp_Video> jkp_Videos
		{
			get
			{
				return this._jkp_Videos;
			}
			set
			{
				this._jkp_Videos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Audios(jkp_Audio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = this;
		}
		
		private void detach_jkp_Audios(jkp_Audio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = null;
		}
		
		private void attach_jkp_Books(jkp_Book entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = this;
		}
		
		private void detach_jkp_Books(jkp_Book entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = null;
		}
		
		private void attach_jkp_Documents(jkp_Document entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = this;
		}
		
		private void detach_jkp_Documents(jkp_Document entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = null;
		}
		
		private void attach_jkp_Images(jkp_Image entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = this;
		}
		
		private void detach_jkp_Images(jkp_Image entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = null;
		}
		
		private void attach_jkp_Videos(jkp_Video entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = this;
		}
		
		private void detach_jkp_Videos(jkp_Video entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Collection = null;
		}
	}
	
	[Table(Name="dbo.jkp_Contact")]
	public partial class jkp_Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Contact_ID;
		
		private string _Contact_Type;
		
		private string _Contact_Permission;
		
		private System.Nullable<System.Guid> _Contact_Ham_ID;
		
		private EntityRef<jkp_Hamlet> _jkp_Hamlet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContact_IDChanging(System.Guid value);
    partial void OnContact_IDChanged();
    partial void OnContact_TypeChanging(string value);
    partial void OnContact_TypeChanged();
    partial void OnContact_PermissionChanging(string value);
    partial void OnContact_PermissionChanged();
    partial void OnContact_Ham_IDChanging(System.Nullable<System.Guid> value);
    partial void OnContact_Ham_IDChanged();
    #endregion
		
		public jkp_Contact()
		{
			this._jkp_Hamlet = default(EntityRef<jkp_Hamlet>);
			OnCreated();
		}
		
		[Column(Storage="_Contact_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Contact_ID
		{
			get
			{
				return this._Contact_ID;
			}
			set
			{
				if ((this._Contact_ID != value))
				{
					this.OnContact_IDChanging(value);
					this.SendPropertyChanging();
					this._Contact_ID = value;
					this.SendPropertyChanged("Contact_ID");
					this.OnContact_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Contact_Type", DbType="VarChar(30)")]
		public string Contact_Type
		{
			get
			{
				return this._Contact_Type;
			}
			set
			{
				if ((this._Contact_Type != value))
				{
					this.OnContact_TypeChanging(value);
					this.SendPropertyChanging();
					this._Contact_Type = value;
					this.SendPropertyChanged("Contact_Type");
					this.OnContact_TypeChanged();
				}
			}
		}
		
		[Column(Storage="_Contact_Permission", DbType="VarChar(10)")]
		public string Contact_Permission
		{
			get
			{
				return this._Contact_Permission;
			}
			set
			{
				if ((this._Contact_Permission != value))
				{
					this.OnContact_PermissionChanging(value);
					this.SendPropertyChanging();
					this._Contact_Permission = value;
					this.SendPropertyChanged("Contact_Permission");
					this.OnContact_PermissionChanged();
				}
			}
		}
		
		[Column(Storage="_Contact_Ham_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Contact_Ham_ID
		{
			get
			{
				return this._Contact_Ham_ID;
			}
			set
			{
				if ((this._Contact_Ham_ID != value))
				{
					if (this._jkp_Hamlet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContact_Ham_IDChanging(value);
					this.SendPropertyChanging();
					this._Contact_Ham_ID = value;
					this.SendPropertyChanged("Contact_Ham_ID");
					this.OnContact_Ham_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Hamlet_jkp_Contact", Storage="_jkp_Hamlet", ThisKey="Contact_Ham_ID", OtherKey="Ham_ID", IsForeignKey=true)]
		public jkp_Hamlet jkp_Hamlet
		{
			get
			{
				return this._jkp_Hamlet.Entity;
			}
			set
			{
				jkp_Hamlet previousValue = this._jkp_Hamlet.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Hamlet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Hamlet.Entity = null;
						previousValue.jkp_Contacts.Remove(this);
					}
					this._jkp_Hamlet.Entity = value;
					if ((value != null))
					{
						value.jkp_Contacts.Add(this);
						this._Contact_Ham_ID = value.Ham_ID;
					}
					else
					{
						this._Contact_Ham_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Hamlet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Contribution")]
	public partial class jkp_Contribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Cont_ID;
		
		private System.Nullable<System.Guid> _Cont_Off_Per_ID;
		
		private System.Nullable<System.Guid> _Cont_Rec_Per_ID;
		
		private string _Cont_Type;
		
		private System.Nullable<decimal> _Cont_AmountPaid;
		
		private string _Cont_Currency;
		
		private System.Nullable<decimal> _Cont_ExchangeRate;
		
		private System.Nullable<System.DateTime> _Cont_Date;
		
		private string _Cont_Comment;
		
		private string _Cont_Transaction_ID;
		
		private System.Nullable<decimal> _Cont_TotalPrice;
		
		private System.Nullable<decimal> _Cont_RefundedAmount;
		
		private System.Nullable<int> _Cont_PaymentMethodTypeId;
		
		private EntitySet<jkp_ContributionAccount> _jkp_ContributionAccounts;
		
		private EntitySet<jkp_PersonAttendingRetreat> _jkp_PersonAttendingRetreats;
		
		private EntitySet<jkp_PersonContributionRetreat> _jkp_PersonContributionRetreats;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Person> _jkp_Person1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCont_IDChanging(System.Guid value);
    partial void OnCont_IDChanged();
    partial void OnCont_Off_Per_IDChanging(System.Nullable<System.Guid> value);
    partial void OnCont_Off_Per_IDChanged();
    partial void OnCont_Rec_Per_IDChanging(System.Nullable<System.Guid> value);
    partial void OnCont_Rec_Per_IDChanged();
    partial void OnCont_TypeChanging(string value);
    partial void OnCont_TypeChanged();
    partial void OnCont_AmountPaidChanging(System.Nullable<decimal> value);
    partial void OnCont_AmountPaidChanged();
    partial void OnCont_CurrencyChanging(string value);
    partial void OnCont_CurrencyChanged();
    partial void OnCont_ExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnCont_ExchangeRateChanged();
    partial void OnCont_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCont_DateChanged();
    partial void OnCont_CommentChanging(string value);
    partial void OnCont_CommentChanged();
    partial void OnCont_Transaction_IDChanging(string value);
    partial void OnCont_Transaction_IDChanged();
    partial void OnCont_TotalPriceChanging(System.Nullable<decimal> value);
    partial void OnCont_TotalPriceChanged();
    partial void OnCont_RefundedAmountChanging(System.Nullable<decimal> value);
    partial void OnCont_RefundedAmountChanged();
    partial void OnCont_PaymentMethodTypeIdChanging(System.Nullable<int> value);
    partial void OnCont_PaymentMethodTypeIdChanged();
    #endregion
		
		public jkp_Contribution()
		{
			this._jkp_ContributionAccounts = new EntitySet<jkp_ContributionAccount>(new Action<jkp_ContributionAccount>(this.attach_jkp_ContributionAccounts), new Action<jkp_ContributionAccount>(this.detach_jkp_ContributionAccounts));
			this._jkp_PersonAttendingRetreats = new EntitySet<jkp_PersonAttendingRetreat>(new Action<jkp_PersonAttendingRetreat>(this.attach_jkp_PersonAttendingRetreats), new Action<jkp_PersonAttendingRetreat>(this.detach_jkp_PersonAttendingRetreats));
			this._jkp_PersonContributionRetreats = new EntitySet<jkp_PersonContributionRetreat>(new Action<jkp_PersonContributionRetreat>(this.attach_jkp_PersonContributionRetreats), new Action<jkp_PersonContributionRetreat>(this.detach_jkp_PersonContributionRetreats));
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Person1 = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_Cont_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Cont_ID
		{
			get
			{
				return this._Cont_ID;
			}
			set
			{
				if ((this._Cont_ID != value))
				{
					this.OnCont_IDChanging(value);
					this.SendPropertyChanging();
					this._Cont_ID = value;
					this.SendPropertyChanged("Cont_ID");
					this.OnCont_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_Off_Per_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Cont_Off_Per_ID
		{
			get
			{
				return this._Cont_Off_Per_ID;
			}
			set
			{
				if ((this._Cont_Off_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCont_Off_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._Cont_Off_Per_ID = value;
					this.SendPropertyChanged("Cont_Off_Per_ID");
					this.OnCont_Off_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_Rec_Per_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Cont_Rec_Per_ID
		{
			get
			{
				return this._Cont_Rec_Per_ID;
			}
			set
			{
				if ((this._Cont_Rec_Per_ID != value))
				{
					if (this._jkp_Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCont_Rec_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._Cont_Rec_Per_ID = value;
					this.SendPropertyChanged("Cont_Rec_Per_ID");
					this.OnCont_Rec_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_Type", DbType="VarChar(50)")]
		public string Cont_Type
		{
			get
			{
				return this._Cont_Type;
			}
			set
			{
				if ((this._Cont_Type != value))
				{
					this.OnCont_TypeChanging(value);
					this.SendPropertyChanging();
					this._Cont_Type = value;
					this.SendPropertyChanged("Cont_Type");
					this.OnCont_TypeChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_AmountPaid", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Cont_AmountPaid
		{
			get
			{
				return this._Cont_AmountPaid;
			}
			set
			{
				if ((this._Cont_AmountPaid != value))
				{
					this.OnCont_AmountPaidChanging(value);
					this.SendPropertyChanging();
					this._Cont_AmountPaid = value;
					this.SendPropertyChanged("Cont_AmountPaid");
					this.OnCont_AmountPaidChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_Currency", DbType="VarChar(50)")]
		public string Cont_Currency
		{
			get
			{
				return this._Cont_Currency;
			}
			set
			{
				if ((this._Cont_Currency != value))
				{
					this.OnCont_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._Cont_Currency = value;
					this.SendPropertyChanged("Cont_Currency");
					this.OnCont_CurrencyChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_ExchangeRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Cont_ExchangeRate
		{
			get
			{
				return this._Cont_ExchangeRate;
			}
			set
			{
				if ((this._Cont_ExchangeRate != value))
				{
					this.OnCont_ExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._Cont_ExchangeRate = value;
					this.SendPropertyChanged("Cont_ExchangeRate");
					this.OnCont_ExchangeRateChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Cont_Date
		{
			get
			{
				return this._Cont_Date;
			}
			set
			{
				if ((this._Cont_Date != value))
				{
					this.OnCont_DateChanging(value);
					this.SendPropertyChanging();
					this._Cont_Date = value;
					this.SendPropertyChanged("Cont_Date");
					this.OnCont_DateChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Cont_Comment
		{
			get
			{
				return this._Cont_Comment;
			}
			set
			{
				if ((this._Cont_Comment != value))
				{
					this.OnCont_CommentChanging(value);
					this.SendPropertyChanging();
					this._Cont_Comment = value;
					this.SendPropertyChanged("Cont_Comment");
					this.OnCont_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_Transaction_ID", DbType="VarChar(50)")]
		public string Cont_Transaction_ID
		{
			get
			{
				return this._Cont_Transaction_ID;
			}
			set
			{
				if ((this._Cont_Transaction_ID != value))
				{
					this.OnCont_Transaction_IDChanging(value);
					this.SendPropertyChanging();
					this._Cont_Transaction_ID = value;
					this.SendPropertyChanged("Cont_Transaction_ID");
					this.OnCont_Transaction_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_TotalPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Cont_TotalPrice
		{
			get
			{
				return this._Cont_TotalPrice;
			}
			set
			{
				if ((this._Cont_TotalPrice != value))
				{
					this.OnCont_TotalPriceChanging(value);
					this.SendPropertyChanging();
					this._Cont_TotalPrice = value;
					this.SendPropertyChanged("Cont_TotalPrice");
					this.OnCont_TotalPriceChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_RefundedAmount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Cont_RefundedAmount
		{
			get
			{
				return this._Cont_RefundedAmount;
			}
			set
			{
				if ((this._Cont_RefundedAmount != value))
				{
					this.OnCont_RefundedAmountChanging(value);
					this.SendPropertyChanging();
					this._Cont_RefundedAmount = value;
					this.SendPropertyChanged("Cont_RefundedAmount");
					this.OnCont_RefundedAmountChanged();
				}
			}
		}
		
		[Column(Storage="_Cont_PaymentMethodTypeId", DbType="Int")]
		public System.Nullable<int> Cont_PaymentMethodTypeId
		{
			get
			{
				return this._Cont_PaymentMethodTypeId;
			}
			set
			{
				if ((this._Cont_PaymentMethodTypeId != value))
				{
					this.OnCont_PaymentMethodTypeIdChanging(value);
					this.SendPropertyChanging();
					this._Cont_PaymentMethodTypeId = value;
					this.SendPropertyChanged("Cont_PaymentMethodTypeId");
					this.OnCont_PaymentMethodTypeIdChanged();
				}
			}
		}
		
		[Association(Name="jkp_Contribution_jkp_ContributionAccount", Storage="_jkp_ContributionAccounts", ThisKey="Cont_ID", OtherKey="CA_Cont_ID")]
		public EntitySet<jkp_ContributionAccount> jkp_ContributionAccounts
		{
			get
			{
				return this._jkp_ContributionAccounts;
			}
			set
			{
				this._jkp_ContributionAccounts.Assign(value);
			}
		}
		
		[Association(Name="jkp_Contribution_jkp_PersonAttendingRetreat", Storage="_jkp_PersonAttendingRetreats", ThisKey="Cont_ID", OtherKey="PAR_ContributionId")]
		public EntitySet<jkp_PersonAttendingRetreat> jkp_PersonAttendingRetreats
		{
			get
			{
				return this._jkp_PersonAttendingRetreats;
			}
			set
			{
				this._jkp_PersonAttendingRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Contribution_jkp_PersonContributionRetreat", Storage="_jkp_PersonContributionRetreats", ThisKey="Cont_ID", OtherKey="PCR_Cont_ID")]
		public EntitySet<jkp_PersonContributionRetreat> jkp_PersonContributionRetreats
		{
			get
			{
				return this._jkp_PersonContributionRetreats;
			}
			set
			{
				this._jkp_PersonContributionRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Contribution", Storage="_jkp_Person", ThisKey="Cont_Off_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Contributions.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Contributions.Add(this);
						this._Cont_Off_Per_ID = value.Per_ID;
					}
					else
					{
						this._Cont_Off_Per_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Contribution1", Storage="_jkp_Person1", ThisKey="Cont_Rec_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person1
		{
			get
			{
				return this._jkp_Person1.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person1.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person1.Entity = null;
						previousValue.jkp_Contributions1.Remove(this);
					}
					this._jkp_Person1.Entity = value;
					if ((value != null))
					{
						value.jkp_Contributions1.Add(this);
						this._Cont_Rec_Per_ID = value.Per_ID;
					}
					else
					{
						this._Cont_Rec_Per_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_ContributionAccounts(jkp_ContributionAccount entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Contribution = this;
		}
		
		private void detach_jkp_ContributionAccounts(jkp_ContributionAccount entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Contribution = null;
		}
		
		private void attach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Contribution = this;
		}
		
		private void detach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Contribution = null;
		}
		
		private void attach_jkp_PersonContributionRetreats(jkp_PersonContributionRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Contribution = this;
		}
		
		private void detach_jkp_PersonContributionRetreats(jkp_PersonContributionRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Contribution = null;
		}
	}
	
	[Table(Name="dbo.jkp_ContributionAccount")]
	public partial class jkp_ContributionAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CA_Cont_ID;
		
		private System.Guid _CA_Acc_ID;
		
		private EntityRef<jkp_Account> _jkp_Account;
		
		private EntityRef<jkp_Contribution> _jkp_Contribution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCA_Cont_IDChanging(System.Guid value);
    partial void OnCA_Cont_IDChanged();
    partial void OnCA_Acc_IDChanging(System.Guid value);
    partial void OnCA_Acc_IDChanged();
    #endregion
		
		public jkp_ContributionAccount()
		{
			this._jkp_Account = default(EntityRef<jkp_Account>);
			this._jkp_Contribution = default(EntityRef<jkp_Contribution>);
			OnCreated();
		}
		
		[Column(Storage="_CA_Cont_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CA_Cont_ID
		{
			get
			{
				return this._CA_Cont_ID;
			}
			set
			{
				if ((this._CA_Cont_ID != value))
				{
					if (this._jkp_Contribution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCA_Cont_IDChanging(value);
					this.SendPropertyChanging();
					this._CA_Cont_ID = value;
					this.SendPropertyChanged("CA_Cont_ID");
					this.OnCA_Cont_IDChanged();
				}
			}
		}
		
		[Column(Storage="_CA_Acc_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CA_Acc_ID
		{
			get
			{
				return this._CA_Acc_ID;
			}
			set
			{
				if ((this._CA_Acc_ID != value))
				{
					if (this._jkp_Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCA_Acc_IDChanging(value);
					this.SendPropertyChanging();
					this._CA_Acc_ID = value;
					this.SendPropertyChanged("CA_Acc_ID");
					this.OnCA_Acc_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Account_jkp_ContributionAccount", Storage="_jkp_Account", ThisKey="CA_Acc_ID", OtherKey="Acc_ID", IsForeignKey=true)]
		public jkp_Account jkp_Account
		{
			get
			{
				return this._jkp_Account.Entity;
			}
			set
			{
				jkp_Account previousValue = this._jkp_Account.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Account.Entity = null;
						previousValue.jkp_ContributionAccounts.Remove(this);
					}
					this._jkp_Account.Entity = value;
					if ((value != null))
					{
						value.jkp_ContributionAccounts.Add(this);
						this._CA_Acc_ID = value.Acc_ID;
					}
					else
					{
						this._CA_Acc_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Account");
				}
			}
		}
		
		[Association(Name="jkp_Contribution_jkp_ContributionAccount", Storage="_jkp_Contribution", ThisKey="CA_Cont_ID", OtherKey="Cont_ID", IsForeignKey=true)]
		public jkp_Contribution jkp_Contribution
		{
			get
			{
				return this._jkp_Contribution.Entity;
			}
			set
			{
				jkp_Contribution previousValue = this._jkp_Contribution.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Contribution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Contribution.Entity = null;
						previousValue.jkp_ContributionAccounts.Remove(this);
					}
					this._jkp_Contribution.Entity = value;
					if ((value != null))
					{
						value.jkp_ContributionAccounts.Add(this);
						this._CA_Cont_ID = value.Cont_ID;
					}
					else
					{
						this._CA_Cont_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Contribution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_DiscussionGroup")]
	public partial class jkp_DiscussionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DGroup_ID;
		
		private string _DGroup_Name;
		
		private string _DGroup_Location;
		
		private string _DGroup_Comment;
		
		private System.Guid _DGroup_RetreatID;
		
		private EntitySet<jkp_PersonDiscussionGroup> _jkp_PersonDiscussionGroups;
		
		private EntityRef<jkp_Retreat> _jkp_Retreat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDGroup_IDChanging(System.Guid value);
    partial void OnDGroup_IDChanged();
    partial void OnDGroup_NameChanging(string value);
    partial void OnDGroup_NameChanged();
    partial void OnDGroup_LocationChanging(string value);
    partial void OnDGroup_LocationChanged();
    partial void OnDGroup_CommentChanging(string value);
    partial void OnDGroup_CommentChanged();
    partial void OnDGroup_RetreatIDChanging(System.Guid value);
    partial void OnDGroup_RetreatIDChanged();
    #endregion
		
		public jkp_DiscussionGroup()
		{
			this._jkp_PersonDiscussionGroups = new EntitySet<jkp_PersonDiscussionGroup>(new Action<jkp_PersonDiscussionGroup>(this.attach_jkp_PersonDiscussionGroups), new Action<jkp_PersonDiscussionGroup>(this.detach_jkp_PersonDiscussionGroups));
			this._jkp_Retreat = default(EntityRef<jkp_Retreat>);
			OnCreated();
		}
		
		[Column(Storage="_DGroup_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DGroup_ID
		{
			get
			{
				return this._DGroup_ID;
			}
			set
			{
				if ((this._DGroup_ID != value))
				{
					this.OnDGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._DGroup_ID = value;
					this.SendPropertyChanged("DGroup_ID");
					this.OnDGroup_IDChanged();
				}
			}
		}
		
		[Column(Storage="_DGroup_Name", DbType="VarChar(30)")]
		public string DGroup_Name
		{
			get
			{
				return this._DGroup_Name;
			}
			set
			{
				if ((this._DGroup_Name != value))
				{
					this.OnDGroup_NameChanging(value);
					this.SendPropertyChanging();
					this._DGroup_Name = value;
					this.SendPropertyChanged("DGroup_Name");
					this.OnDGroup_NameChanged();
				}
			}
		}
		
		[Column(Storage="_DGroup_Location", DbType="VarChar(30)")]
		public string DGroup_Location
		{
			get
			{
				return this._DGroup_Location;
			}
			set
			{
				if ((this._DGroup_Location != value))
				{
					this.OnDGroup_LocationChanging(value);
					this.SendPropertyChanging();
					this._DGroup_Location = value;
					this.SendPropertyChanged("DGroup_Location");
					this.OnDGroup_LocationChanged();
				}
			}
		}
		
		[Column(Storage="_DGroup_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DGroup_Comment
		{
			get
			{
				return this._DGroup_Comment;
			}
			set
			{
				if ((this._DGroup_Comment != value))
				{
					this.OnDGroup_CommentChanging(value);
					this.SendPropertyChanging();
					this._DGroup_Comment = value;
					this.SendPropertyChanged("DGroup_Comment");
					this.OnDGroup_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_DGroup_RetreatID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DGroup_RetreatID
		{
			get
			{
				return this._DGroup_RetreatID;
			}
			set
			{
				if ((this._DGroup_RetreatID != value))
				{
					if (this._jkp_Retreat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDGroup_RetreatIDChanging(value);
					this.SendPropertyChanging();
					this._DGroup_RetreatID = value;
					this.SendPropertyChanged("DGroup_RetreatID");
					this.OnDGroup_RetreatIDChanged();
				}
			}
		}
		
		[Association(Name="jkp_DiscussionGroup_jkp_PersonDiscussionGroup", Storage="_jkp_PersonDiscussionGroups", ThisKey="DGroup_ID", OtherKey="PDG_DGroup_ID")]
		public EntitySet<jkp_PersonDiscussionGroup> jkp_PersonDiscussionGroups
		{
			get
			{
				return this._jkp_PersonDiscussionGroups;
			}
			set
			{
				this._jkp_PersonDiscussionGroups.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_DiscussionGroup", Storage="_jkp_Retreat", ThisKey="DGroup_RetreatID", OtherKey="Ret_ID", IsForeignKey=true)]
		public jkp_Retreat jkp_Retreat
		{
			get
			{
				return this._jkp_Retreat.Entity;
			}
			set
			{
				jkp_Retreat previousValue = this._jkp_Retreat.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Retreat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Retreat.Entity = null;
						previousValue.jkp_DiscussionGroups.Remove(this);
					}
					this._jkp_Retreat.Entity = value;
					if ((value != null))
					{
						value.jkp_DiscussionGroups.Add(this);
						this._DGroup_RetreatID = value.Ret_ID;
					}
					else
					{
						this._DGroup_RetreatID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Retreat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_PersonDiscussionGroups(jkp_PersonDiscussionGroup entity)
		{
			this.SendPropertyChanging();
			entity.jkp_DiscussionGroup = this;
		}
		
		private void detach_jkp_PersonDiscussionGroups(jkp_PersonDiscussionGroup entity)
		{
			this.SendPropertyChanging();
			entity.jkp_DiscussionGroup = null;
		}
	}
	
	[Table(Name="dbo.jkp_Document")]
	public partial class jkp_Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Doc_ID;
		
		private string _Doc_Format;
		
		private string _Doc_Pathname;
		
		private System.Nullable<int> _Doc_Size;
		
		private System.Nullable<System.DateTime> _Doc_DateAdded;
		
		private System.Nullable<System.DateTime> _Doc_DateModified;
		
		private string _Doc_Title;
		
		private string _Doc_Genre;
		
		private string _Doc_Language;
		
		private string _Doc_Subject;
		
		private string _Doc_Contents;
		
		private string _Doc_Description;
		
		private string _Doc_Summary;
		
		private System.Nullable<int> _Doc_Year;
		
		private System.Nullable<System.Guid> _Doc_Coll_ID;
		
		private string _Doc_Comment;
		
		private System.Nullable<System.Guid> _Doc_Creator;
		
		private EntitySet<jkp_DocumentActivity> _jkp_DocumentActivities;
		
		private EntitySet<jkp_PersonDocument> _jkp_PersonDocuments;
		
		private EntityRef<jkp_Collection> _jkp_Collection;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoc_IDChanging(System.Guid value);
    partial void OnDoc_IDChanged();
    partial void OnDoc_FormatChanging(string value);
    partial void OnDoc_FormatChanged();
    partial void OnDoc_PathnameChanging(string value);
    partial void OnDoc_PathnameChanged();
    partial void OnDoc_SizeChanging(System.Nullable<int> value);
    partial void OnDoc_SizeChanged();
    partial void OnDoc_DateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDoc_DateAddedChanged();
    partial void OnDoc_DateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDoc_DateModifiedChanged();
    partial void OnDoc_TitleChanging(string value);
    partial void OnDoc_TitleChanged();
    partial void OnDoc_GenreChanging(string value);
    partial void OnDoc_GenreChanged();
    partial void OnDoc_LanguageChanging(string value);
    partial void OnDoc_LanguageChanged();
    partial void OnDoc_SubjectChanging(string value);
    partial void OnDoc_SubjectChanged();
    partial void OnDoc_ContentsChanging(string value);
    partial void OnDoc_ContentsChanged();
    partial void OnDoc_DescriptionChanging(string value);
    partial void OnDoc_DescriptionChanged();
    partial void OnDoc_SummaryChanging(string value);
    partial void OnDoc_SummaryChanged();
    partial void OnDoc_YearChanging(System.Nullable<int> value);
    partial void OnDoc_YearChanged();
    partial void OnDoc_Coll_IDChanging(System.Nullable<System.Guid> value);
    partial void OnDoc_Coll_IDChanged();
    partial void OnDoc_CommentChanging(string value);
    partial void OnDoc_CommentChanged();
    partial void OnDoc_CreatorChanging(System.Nullable<System.Guid> value);
    partial void OnDoc_CreatorChanged();
    #endregion
		
		public jkp_Document()
		{
			this._jkp_DocumentActivities = new EntitySet<jkp_DocumentActivity>(new Action<jkp_DocumentActivity>(this.attach_jkp_DocumentActivities), new Action<jkp_DocumentActivity>(this.detach_jkp_DocumentActivities));
			this._jkp_PersonDocuments = new EntitySet<jkp_PersonDocument>(new Action<jkp_PersonDocument>(this.attach_jkp_PersonDocuments), new Action<jkp_PersonDocument>(this.detach_jkp_PersonDocuments));
			this._jkp_Collection = default(EntityRef<jkp_Collection>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_Doc_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Doc_ID
		{
			get
			{
				return this._Doc_ID;
			}
			set
			{
				if ((this._Doc_ID != value))
				{
					this.OnDoc_IDChanging(value);
					this.SendPropertyChanging();
					this._Doc_ID = value;
					this.SendPropertyChanged("Doc_ID");
					this.OnDoc_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Format", DbType="VarChar(10)")]
		public string Doc_Format
		{
			get
			{
				return this._Doc_Format;
			}
			set
			{
				if ((this._Doc_Format != value))
				{
					this.OnDoc_FormatChanging(value);
					this.SendPropertyChanging();
					this._Doc_Format = value;
					this.SendPropertyChanged("Doc_Format");
					this.OnDoc_FormatChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Pathname", DbType="VarChar(255)")]
		public string Doc_Pathname
		{
			get
			{
				return this._Doc_Pathname;
			}
			set
			{
				if ((this._Doc_Pathname != value))
				{
					this.OnDoc_PathnameChanging(value);
					this.SendPropertyChanging();
					this._Doc_Pathname = value;
					this.SendPropertyChanged("Doc_Pathname");
					this.OnDoc_PathnameChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Size", DbType="Int")]
		public System.Nullable<int> Doc_Size
		{
			get
			{
				return this._Doc_Size;
			}
			set
			{
				if ((this._Doc_Size != value))
				{
					this.OnDoc_SizeChanging(value);
					this.SendPropertyChanging();
					this._Doc_Size = value;
					this.SendPropertyChanged("Doc_Size");
					this.OnDoc_SizeChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> Doc_DateAdded
		{
			get
			{
				return this._Doc_DateAdded;
			}
			set
			{
				if ((this._Doc_DateAdded != value))
				{
					this.OnDoc_DateAddedChanging(value);
					this.SendPropertyChanging();
					this._Doc_DateAdded = value;
					this.SendPropertyChanged("Doc_DateAdded");
					this.OnDoc_DateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Doc_DateModified
		{
			get
			{
				return this._Doc_DateModified;
			}
			set
			{
				if ((this._Doc_DateModified != value))
				{
					this.OnDoc_DateModifiedChanging(value);
					this.SendPropertyChanging();
					this._Doc_DateModified = value;
					this.SendPropertyChanged("Doc_DateModified");
					this.OnDoc_DateModifiedChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Title", DbType="VarChar(100)")]
		public string Doc_Title
		{
			get
			{
				return this._Doc_Title;
			}
			set
			{
				if ((this._Doc_Title != value))
				{
					this.OnDoc_TitleChanging(value);
					this.SendPropertyChanging();
					this._Doc_Title = value;
					this.SendPropertyChanged("Doc_Title");
					this.OnDoc_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Genre", DbType="VarChar(50)")]
		public string Doc_Genre
		{
			get
			{
				return this._Doc_Genre;
			}
			set
			{
				if ((this._Doc_Genre != value))
				{
					this.OnDoc_GenreChanging(value);
					this.SendPropertyChanging();
					this._Doc_Genre = value;
					this.SendPropertyChanged("Doc_Genre");
					this.OnDoc_GenreChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Language", DbType="VarChar(20)")]
		public string Doc_Language
		{
			get
			{
				return this._Doc_Language;
			}
			set
			{
				if ((this._Doc_Language != value))
				{
					this.OnDoc_LanguageChanging(value);
					this.SendPropertyChanging();
					this._Doc_Language = value;
					this.SendPropertyChanged("Doc_Language");
					this.OnDoc_LanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Subject", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Doc_Subject
		{
			get
			{
				return this._Doc_Subject;
			}
			set
			{
				if ((this._Doc_Subject != value))
				{
					this.OnDoc_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Doc_Subject = value;
					this.SendPropertyChanged("Doc_Subject");
					this.OnDoc_SubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Contents", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Doc_Contents
		{
			get
			{
				return this._Doc_Contents;
			}
			set
			{
				if ((this._Doc_Contents != value))
				{
					this.OnDoc_ContentsChanging(value);
					this.SendPropertyChanging();
					this._Doc_Contents = value;
					this.SendPropertyChanged("Doc_Contents");
					this.OnDoc_ContentsChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Doc_Description
		{
			get
			{
				return this._Doc_Description;
			}
			set
			{
				if ((this._Doc_Description != value))
				{
					this.OnDoc_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Doc_Description = value;
					this.SendPropertyChanged("Doc_Description");
					this.OnDoc_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Doc_Summary
		{
			get
			{
				return this._Doc_Summary;
			}
			set
			{
				if ((this._Doc_Summary != value))
				{
					this.OnDoc_SummaryChanging(value);
					this.SendPropertyChanging();
					this._Doc_Summary = value;
					this.SendPropertyChanged("Doc_Summary");
					this.OnDoc_SummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Year", DbType="Int")]
		public System.Nullable<int> Doc_Year
		{
			get
			{
				return this._Doc_Year;
			}
			set
			{
				if ((this._Doc_Year != value))
				{
					this.OnDoc_YearChanging(value);
					this.SendPropertyChanging();
					this._Doc_Year = value;
					this.SendPropertyChanged("Doc_Year");
					this.OnDoc_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Coll_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Doc_Coll_ID
		{
			get
			{
				return this._Doc_Coll_ID;
			}
			set
			{
				if ((this._Doc_Coll_ID != value))
				{
					if (this._jkp_Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoc_Coll_IDChanging(value);
					this.SendPropertyChanging();
					this._Doc_Coll_ID = value;
					this.SendPropertyChanged("Doc_Coll_ID");
					this.OnDoc_Coll_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Doc_Comment
		{
			get
			{
				return this._Doc_Comment;
			}
			set
			{
				if ((this._Doc_Comment != value))
				{
					this.OnDoc_CommentChanging(value);
					this.SendPropertyChanging();
					this._Doc_Comment = value;
					this.SendPropertyChanged("Doc_Comment");
					this.OnDoc_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Doc_Creator", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Doc_Creator
		{
			get
			{
				return this._Doc_Creator;
			}
			set
			{
				if ((this._Doc_Creator != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoc_CreatorChanging(value);
					this.SendPropertyChanging();
					this._Doc_Creator = value;
					this.SendPropertyChanged("Doc_Creator");
					this.OnDoc_CreatorChanged();
				}
			}
		}
		
		[Association(Name="jkp_Document_jkp_DocumentActivity", Storage="_jkp_DocumentActivities", ThisKey="Doc_ID", OtherKey="DA_Doc_ID")]
		public EntitySet<jkp_DocumentActivity> jkp_DocumentActivities
		{
			get
			{
				return this._jkp_DocumentActivities;
			}
			set
			{
				this._jkp_DocumentActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Document_jkp_PersonDocument", Storage="_jkp_PersonDocuments", ThisKey="Doc_ID", OtherKey="PD_Doc_ID")]
		public EntitySet<jkp_PersonDocument> jkp_PersonDocuments
		{
			get
			{
				return this._jkp_PersonDocuments;
			}
			set
			{
				this._jkp_PersonDocuments.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Document", Storage="_jkp_Collection", ThisKey="Doc_Coll_ID", OtherKey="Coll_ID", IsForeignKey=true)]
		public jkp_Collection jkp_Collection
		{
			get
			{
				return this._jkp_Collection.Entity;
			}
			set
			{
				jkp_Collection previousValue = this._jkp_Collection.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Collection.Entity = null;
						previousValue.jkp_Documents.Remove(this);
					}
					this._jkp_Collection.Entity = value;
					if ((value != null))
					{
						value.jkp_Documents.Add(this);
						this._Doc_Coll_ID = value.Coll_ID;
					}
					else
					{
						this._Doc_Coll_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Collection");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Document", Storage="_jkp_Person", ThisKey="Doc_Creator", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Documents.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Documents.Add(this);
						this._Doc_Creator = value.Per_ID;
					}
					else
					{
						this._Doc_Creator = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_DocumentActivities(jkp_DocumentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Document = this;
		}
		
		private void detach_jkp_DocumentActivities(jkp_DocumentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Document = null;
		}
		
		private void attach_jkp_PersonDocuments(jkp_PersonDocument entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Document = this;
		}
		
		private void detach_jkp_PersonDocuments(jkp_PersonDocument entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Document = null;
		}
	}
	
	[Table(Name="dbo.jkp_DocumentActivity")]
	public partial class jkp_DocumentActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DA_Doc_ID;
		
		private System.Guid _DA_Act_ID;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
		private EntityRef<jkp_Document> _jkp_Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDA_Doc_IDChanging(System.Guid value);
    partial void OnDA_Doc_IDChanged();
    partial void OnDA_Act_IDChanging(System.Guid value);
    partial void OnDA_Act_IDChanged();
    #endregion
		
		public jkp_DocumentActivity()
		{
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			this._jkp_Document = default(EntityRef<jkp_Document>);
			OnCreated();
		}
		
		[Column(Storage="_DA_Doc_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DA_Doc_ID
		{
			get
			{
				return this._DA_Doc_ID;
			}
			set
			{
				if ((this._DA_Doc_ID != value))
				{
					if (this._jkp_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDA_Doc_IDChanging(value);
					this.SendPropertyChanging();
					this._DA_Doc_ID = value;
					this.SendPropertyChanged("DA_Doc_ID");
					this.OnDA_Doc_IDChanged();
				}
			}
		}
		
		[Column(Storage="_DA_Act_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DA_Act_ID
		{
			get
			{
				return this._DA_Act_ID;
			}
			set
			{
				if ((this._DA_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDA_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._DA_Act_ID = value;
					this.SendPropertyChanged("DA_Act_ID");
					this.OnDA_Act_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_DocumentActivity", Storage="_jkp_Activity", ThisKey="DA_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_DocumentActivities.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_DocumentActivities.Add(this);
						this._DA_Act_ID = value.Act_ID;
					}
					else
					{
						this._DA_Act_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		[Association(Name="jkp_Document_jkp_DocumentActivity", Storage="_jkp_Document", ThisKey="DA_Doc_ID", OtherKey="Doc_ID", IsForeignKey=true)]
		public jkp_Document jkp_Document
		{
			get
			{
				return this._jkp_Document.Entity;
			}
			set
			{
				jkp_Document previousValue = this._jkp_Document.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Document.Entity = null;
						previousValue.jkp_DocumentActivities.Remove(this);
					}
					this._jkp_Document.Entity = value;
					if ((value != null))
					{
						value.jkp_DocumentActivities.Add(this);
						this._DA_Doc_ID = value.Doc_ID;
					}
					else
					{
						this._DA_Doc_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_DriversLicense")]
	public partial class jkp_DriversLicense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DrvLic_ID;
		
		private System.Nullable<System.Guid> _DrvLic_Per_ID;
		
		private string _DrvLic_Number;
		
		private string _DrvLic_Country;
		
		private string _DrvLic_State;
		
		private System.Nullable<System.DateTime> _DrvLic_DateIssued;
		
		private System.Nullable<System.DateTime> _DrvLic_DateExpires;
		
		private string _DrvLic_Class;
		
		private string _DrvLic_Comment;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrvLic_IDChanging(System.Guid value);
    partial void OnDrvLic_IDChanged();
    partial void OnDrvLic_Per_IDChanging(System.Nullable<System.Guid> value);
    partial void OnDrvLic_Per_IDChanged();
    partial void OnDrvLic_NumberChanging(string value);
    partial void OnDrvLic_NumberChanged();
    partial void OnDrvLic_CountryChanging(string value);
    partial void OnDrvLic_CountryChanged();
    partial void OnDrvLic_StateChanging(string value);
    partial void OnDrvLic_StateChanged();
    partial void OnDrvLic_DateIssuedChanging(System.Nullable<System.DateTime> value);
    partial void OnDrvLic_DateIssuedChanged();
    partial void OnDrvLic_DateExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnDrvLic_DateExpiresChanged();
    partial void OnDrvLic_ClassChanging(string value);
    partial void OnDrvLic_ClassChanged();
    partial void OnDrvLic_CommentChanging(string value);
    partial void OnDrvLic_CommentChanged();
    #endregion
		
		public jkp_DriversLicense()
		{
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_DrvLic_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DrvLic_ID
		{
			get
			{
				return this._DrvLic_ID;
			}
			set
			{
				if ((this._DrvLic_ID != value))
				{
					this.OnDrvLic_IDChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_ID = value;
					this.SendPropertyChanged("DrvLic_ID");
					this.OnDrvLic_IDChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_Per_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrvLic_Per_ID
		{
			get
			{
				return this._DrvLic_Per_ID;
			}
			set
			{
				if ((this._DrvLic_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrvLic_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_Per_ID = value;
					this.SendPropertyChanged("DrvLic_Per_ID");
					this.OnDrvLic_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_Number", DbType="VarChar(20)")]
		public string DrvLic_Number
		{
			get
			{
				return this._DrvLic_Number;
			}
			set
			{
				if ((this._DrvLic_Number != value))
				{
					this.OnDrvLic_NumberChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_Number = value;
					this.SendPropertyChanged("DrvLic_Number");
					this.OnDrvLic_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_Country", DbType="VarChar(20)")]
		public string DrvLic_Country
		{
			get
			{
				return this._DrvLic_Country;
			}
			set
			{
				if ((this._DrvLic_Country != value))
				{
					this.OnDrvLic_CountryChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_Country = value;
					this.SendPropertyChanged("DrvLic_Country");
					this.OnDrvLic_CountryChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_State", DbType="VarChar(20)")]
		public string DrvLic_State
		{
			get
			{
				return this._DrvLic_State;
			}
			set
			{
				if ((this._DrvLic_State != value))
				{
					this.OnDrvLic_StateChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_State = value;
					this.SendPropertyChanged("DrvLic_State");
					this.OnDrvLic_StateChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_DateIssued", DbType="DateTime")]
		public System.Nullable<System.DateTime> DrvLic_DateIssued
		{
			get
			{
				return this._DrvLic_DateIssued;
			}
			set
			{
				if ((this._DrvLic_DateIssued != value))
				{
					this.OnDrvLic_DateIssuedChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_DateIssued = value;
					this.SendPropertyChanged("DrvLic_DateIssued");
					this.OnDrvLic_DateIssuedChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_DateExpires", DbType="DateTime")]
		public System.Nullable<System.DateTime> DrvLic_DateExpires
		{
			get
			{
				return this._DrvLic_DateExpires;
			}
			set
			{
				if ((this._DrvLic_DateExpires != value))
				{
					this.OnDrvLic_DateExpiresChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_DateExpires = value;
					this.SendPropertyChanged("DrvLic_DateExpires");
					this.OnDrvLic_DateExpiresChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_Class", DbType="VarChar(10)")]
		public string DrvLic_Class
		{
			get
			{
				return this._DrvLic_Class;
			}
			set
			{
				if ((this._DrvLic_Class != value))
				{
					this.OnDrvLic_ClassChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_Class = value;
					this.SendPropertyChanged("DrvLic_Class");
					this.OnDrvLic_ClassChanged();
				}
			}
		}
		
		[Column(Storage="_DrvLic_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DrvLic_Comment
		{
			get
			{
				return this._DrvLic_Comment;
			}
			set
			{
				if ((this._DrvLic_Comment != value))
				{
					this.OnDrvLic_CommentChanging(value);
					this.SendPropertyChanging();
					this._DrvLic_Comment = value;
					this.SendPropertyChanged("DrvLic_Comment");
					this.OnDrvLic_CommentChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_DriversLicense", Storage="_jkp_Person", ThisKey="DrvLic_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_DriversLicenses.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_DriversLicenses.Add(this);
						this._DrvLic_Per_ID = value.Per_ID;
					}
					else
					{
						this._DrvLic_Per_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_FamilyGroup")]
	public partial class jkp_FamilyGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FGroup_ID;
		
		private string _FGroup_Comment;
		
		private EntitySet<jkp_Person> _jkp_Persons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFGroup_IDChanging(System.Guid value);
    partial void OnFGroup_IDChanged();
    partial void OnFGroup_CommentChanging(string value);
    partial void OnFGroup_CommentChanged();
    #endregion
		
		public jkp_FamilyGroup()
		{
			this._jkp_Persons = new EntitySet<jkp_Person>(new Action<jkp_Person>(this.attach_jkp_Persons), new Action<jkp_Person>(this.detach_jkp_Persons));
			OnCreated();
		}
		
		[Column(Storage="_FGroup_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FGroup_ID
		{
			get
			{
				return this._FGroup_ID;
			}
			set
			{
				if ((this._FGroup_ID != value))
				{
					this.OnFGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._FGroup_ID = value;
					this.SendPropertyChanged("FGroup_ID");
					this.OnFGroup_IDChanged();
				}
			}
		}
		
		[Column(Storage="_FGroup_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string FGroup_Comment
		{
			get
			{
				return this._FGroup_Comment;
			}
			set
			{
				if ((this._FGroup_Comment != value))
				{
					this.OnFGroup_CommentChanging(value);
					this.SendPropertyChanging();
					this._FGroup_Comment = value;
					this.SendPropertyChanged("FGroup_Comment");
					this.OnFGroup_CommentChanged();
				}
			}
		}
		
		[Association(Name="jkp_FamilyGroup_jkp_Person", Storage="_jkp_Persons", ThisKey="FGroup_ID", OtherKey="Per_FGroup_ID")]
		public EntitySet<jkp_Person> jkp_Persons
		{
			get
			{
				return this._jkp_Persons;
			}
			set
			{
				this._jkp_Persons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FamilyGroup = this;
		}
		
		private void detach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FamilyGroup = null;
		}
	}
	
	[Table(Name="dbo.jkp_FileType")]
	public partial class jkp_FileType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _For_ID;
		
		private string _For_Name;
		
		private string _For_IconPictureUrl;
		
		private string _For_Extension;
		
		private EntitySet<jkp_Audio> _jkp_Audios;
		
		private EntitySet<jkp_Book> _jkp_Books;
		
		private EntitySet<jkp_Video> _jkp_Videos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFor_IDChanging(System.Guid value);
    partial void OnFor_IDChanged();
    partial void OnFor_NameChanging(string value);
    partial void OnFor_NameChanged();
    partial void OnFor_IconPictureUrlChanging(string value);
    partial void OnFor_IconPictureUrlChanged();
    partial void OnFor_ExtensionChanging(string value);
    partial void OnFor_ExtensionChanged();
    #endregion
		
		public jkp_FileType()
		{
			this._jkp_Audios = new EntitySet<jkp_Audio>(new Action<jkp_Audio>(this.attach_jkp_Audios), new Action<jkp_Audio>(this.detach_jkp_Audios));
			this._jkp_Books = new EntitySet<jkp_Book>(new Action<jkp_Book>(this.attach_jkp_Books), new Action<jkp_Book>(this.detach_jkp_Books));
			this._jkp_Videos = new EntitySet<jkp_Video>(new Action<jkp_Video>(this.attach_jkp_Videos), new Action<jkp_Video>(this.detach_jkp_Videos));
			OnCreated();
		}
		
		[Column(Storage="_For_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid For_ID
		{
			get
			{
				return this._For_ID;
			}
			set
			{
				if ((this._For_ID != value))
				{
					this.OnFor_IDChanging(value);
					this.SendPropertyChanging();
					this._For_ID = value;
					this.SendPropertyChanged("For_ID");
					this.OnFor_IDChanged();
				}
			}
		}
		
		[Column(Storage="_For_Name", DbType="VarChar(100)")]
		public string For_Name
		{
			get
			{
				return this._For_Name;
			}
			set
			{
				if ((this._For_Name != value))
				{
					this.OnFor_NameChanging(value);
					this.SendPropertyChanging();
					this._For_Name = value;
					this.SendPropertyChanged("For_Name");
					this.OnFor_NameChanged();
				}
			}
		}
		
		[Column(Storage="_For_IconPictureUrl", DbType="VarChar(200)")]
		public string For_IconPictureUrl
		{
			get
			{
				return this._For_IconPictureUrl;
			}
			set
			{
				if ((this._For_IconPictureUrl != value))
				{
					this.OnFor_IconPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._For_IconPictureUrl = value;
					this.SendPropertyChanged("For_IconPictureUrl");
					this.OnFor_IconPictureUrlChanged();
				}
			}
		}
		
		[Column(Storage="_For_Extension", DbType="VarChar(50)")]
		public string For_Extension
		{
			get
			{
				return this._For_Extension;
			}
			set
			{
				if ((this._For_Extension != value))
				{
					this.OnFor_ExtensionChanging(value);
					this.SendPropertyChanging();
					this._For_Extension = value;
					this.SendPropertyChanged("For_Extension");
					this.OnFor_ExtensionChanged();
				}
			}
		}
		
		[Association(Name="jkp_FileType_jkp_Audio", Storage="_jkp_Audios", ThisKey="For_ID", OtherKey="Aud_FileTypeId")]
		public EntitySet<jkp_Audio> jkp_Audios
		{
			get
			{
				return this._jkp_Audios;
			}
			set
			{
				this._jkp_Audios.Assign(value);
			}
		}
		
		[Association(Name="jkp_FileType_jkp_Book", Storage="_jkp_Books", ThisKey="For_ID", OtherKey="Bk_FileTypeId")]
		public EntitySet<jkp_Book> jkp_Books
		{
			get
			{
				return this._jkp_Books;
			}
			set
			{
				this._jkp_Books.Assign(value);
			}
		}
		
		[Association(Name="jkp_FileType_jkp_Video", Storage="_jkp_Videos", ThisKey="For_ID", OtherKey="Vid_FileTypeId")]
		public EntitySet<jkp_Video> jkp_Videos
		{
			get
			{
				return this._jkp_Videos;
			}
			set
			{
				this._jkp_Videos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Audios(jkp_Audio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FileType = this;
		}
		
		private void detach_jkp_Audios(jkp_Audio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FileType = null;
		}
		
		private void attach_jkp_Books(jkp_Book entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FileType = this;
		}
		
		private void detach_jkp_Books(jkp_Book entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FileType = null;
		}
		
		private void attach_jkp_Videos(jkp_Video entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FileType = this;
		}
		
		private void detach_jkp_Videos(jkp_Video entity)
		{
			this.SendPropertyChanging();
			entity.jkp_FileType = null;
		}
	}
	
	[Table(Name="dbo.jkp_GeneralQuestions")]
	public partial class jkp_GeneralQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GenQues_ID;
		
		private string _GenQues_Question;
		
		private EntitySet<jkp_PersonGeneralQuestion> _jkp_PersonGeneralQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenQues_IDChanging(System.Guid value);
    partial void OnGenQues_IDChanged();
    partial void OnGenQues_QuestionChanging(string value);
    partial void OnGenQues_QuestionChanged();
    #endregion
		
		public jkp_GeneralQuestion()
		{
			this._jkp_PersonGeneralQuestions = new EntitySet<jkp_PersonGeneralQuestion>(new Action<jkp_PersonGeneralQuestion>(this.attach_jkp_PersonGeneralQuestions), new Action<jkp_PersonGeneralQuestion>(this.detach_jkp_PersonGeneralQuestions));
			OnCreated();
		}
		
		[Column(Storage="_GenQues_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GenQues_ID
		{
			get
			{
				return this._GenQues_ID;
			}
			set
			{
				if ((this._GenQues_ID != value))
				{
					this.OnGenQues_IDChanging(value);
					this.SendPropertyChanging();
					this._GenQues_ID = value;
					this.SendPropertyChanged("GenQues_ID");
					this.OnGenQues_IDChanged();
				}
			}
		}
		
		[Column(Storage="_GenQues_Question", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GenQues_Question
		{
			get
			{
				return this._GenQues_Question;
			}
			set
			{
				if ((this._GenQues_Question != value))
				{
					this.OnGenQues_QuestionChanging(value);
					this.SendPropertyChanging();
					this._GenQues_Question = value;
					this.SendPropertyChanged("GenQues_Question");
					this.OnGenQues_QuestionChanged();
				}
			}
		}
		
		[Association(Name="jkp_GeneralQuestion_jkp_PersonGeneralQuestion", Storage="_jkp_PersonGeneralQuestions", ThisKey="GenQues_ID", OtherKey="PGQ_GenQues_ID")]
		public EntitySet<jkp_PersonGeneralQuestion> jkp_PersonGeneralQuestions
		{
			get
			{
				return this._jkp_PersonGeneralQuestions;
			}
			set
			{
				this._jkp_PersonGeneralQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_PersonGeneralQuestions(jkp_PersonGeneralQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_GeneralQuestion = this;
		}
		
		private void detach_jkp_PersonGeneralQuestions(jkp_PersonGeneralQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_GeneralQuestion = null;
		}
	}
	
	[Table(Name="dbo.jkp_Hamlet")]
	public partial class jkp_Hamlet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Ham_ID;
		
		private System.Nullable<System.Guid> _Ham_Site_ID;
		
		private System.Nullable<System.Guid> _Ham_Add_ID;
		
		private string _Ham_VietnameseName;
		
		private string _Ham_EnglishName;
		
		private string _Ham_LocalName;
		
		private string _Ham_Description;
		
		private string _Ham_Comment;
		
		private EntitySet<jkp_Building> _jkp_Buildings;
		
		private EntitySet<jkp_Contact> _jkp_Contacts;
		
		private EntityRef<jkp_Address> _jkp_Address;
		
		private EntityRef<jkp_Site> _jkp_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHam_IDChanging(System.Guid value);
    partial void OnHam_IDChanged();
    partial void OnHam_Site_IDChanging(System.Nullable<System.Guid> value);
    partial void OnHam_Site_IDChanged();
    partial void OnHam_Add_IDChanging(System.Nullable<System.Guid> value);
    partial void OnHam_Add_IDChanged();
    partial void OnHam_VietnameseNameChanging(string value);
    partial void OnHam_VietnameseNameChanged();
    partial void OnHam_EnglishNameChanging(string value);
    partial void OnHam_EnglishNameChanged();
    partial void OnHam_LocalNameChanging(string value);
    partial void OnHam_LocalNameChanged();
    partial void OnHam_DescriptionChanging(string value);
    partial void OnHam_DescriptionChanged();
    partial void OnHam_CommentChanging(string value);
    partial void OnHam_CommentChanged();
    #endregion
		
		public jkp_Hamlet()
		{
			this._jkp_Buildings = new EntitySet<jkp_Building>(new Action<jkp_Building>(this.attach_jkp_Buildings), new Action<jkp_Building>(this.detach_jkp_Buildings));
			this._jkp_Contacts = new EntitySet<jkp_Contact>(new Action<jkp_Contact>(this.attach_jkp_Contacts), new Action<jkp_Contact>(this.detach_jkp_Contacts));
			this._jkp_Address = default(EntityRef<jkp_Address>);
			this._jkp_Site = default(EntityRef<jkp_Site>);
			OnCreated();
		}
		
		[Column(Storage="_Ham_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Ham_ID
		{
			get
			{
				return this._Ham_ID;
			}
			set
			{
				if ((this._Ham_ID != value))
				{
					this.OnHam_IDChanging(value);
					this.SendPropertyChanging();
					this._Ham_ID = value;
					this.SendPropertyChanged("Ham_ID");
					this.OnHam_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Ham_Site_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Ham_Site_ID
		{
			get
			{
				return this._Ham_Site_ID;
			}
			set
			{
				if ((this._Ham_Site_ID != value))
				{
					if (this._jkp_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHam_Site_IDChanging(value);
					this.SendPropertyChanging();
					this._Ham_Site_ID = value;
					this.SendPropertyChanged("Ham_Site_ID");
					this.OnHam_Site_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Ham_Add_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Ham_Add_ID
		{
			get
			{
				return this._Ham_Add_ID;
			}
			set
			{
				if ((this._Ham_Add_ID != value))
				{
					if (this._jkp_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHam_Add_IDChanging(value);
					this.SendPropertyChanging();
					this._Ham_Add_ID = value;
					this.SendPropertyChanged("Ham_Add_ID");
					this.OnHam_Add_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Ham_VietnameseName", DbType="VarChar(50)")]
		public string Ham_VietnameseName
		{
			get
			{
				return this._Ham_VietnameseName;
			}
			set
			{
				if ((this._Ham_VietnameseName != value))
				{
					this.OnHam_VietnameseNameChanging(value);
					this.SendPropertyChanging();
					this._Ham_VietnameseName = value;
					this.SendPropertyChanged("Ham_VietnameseName");
					this.OnHam_VietnameseNameChanged();
				}
			}
		}
		
		[Column(Storage="_Ham_EnglishName", DbType="VarChar(50)")]
		public string Ham_EnglishName
		{
			get
			{
				return this._Ham_EnglishName;
			}
			set
			{
				if ((this._Ham_EnglishName != value))
				{
					this.OnHam_EnglishNameChanging(value);
					this.SendPropertyChanging();
					this._Ham_EnglishName = value;
					this.SendPropertyChanged("Ham_EnglishName");
					this.OnHam_EnglishNameChanged();
				}
			}
		}
		
		[Column(Storage="_Ham_LocalName", DbType="VarChar(50)")]
		public string Ham_LocalName
		{
			get
			{
				return this._Ham_LocalName;
			}
			set
			{
				if ((this._Ham_LocalName != value))
				{
					this.OnHam_LocalNameChanging(value);
					this.SendPropertyChanging();
					this._Ham_LocalName = value;
					this.SendPropertyChanged("Ham_LocalName");
					this.OnHam_LocalNameChanged();
				}
			}
		}
		
		[Column(Storage="_Ham_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Ham_Description
		{
			get
			{
				return this._Ham_Description;
			}
			set
			{
				if ((this._Ham_Description != value))
				{
					this.OnHam_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Ham_Description = value;
					this.SendPropertyChanged("Ham_Description");
					this.OnHam_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Ham_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Ham_Comment
		{
			get
			{
				return this._Ham_Comment;
			}
			set
			{
				if ((this._Ham_Comment != value))
				{
					this.OnHam_CommentChanging(value);
					this.SendPropertyChanging();
					this._Ham_Comment = value;
					this.SendPropertyChanged("Ham_Comment");
					this.OnHam_CommentChanged();
				}
			}
		}
		
		[Association(Name="jkp_Hamlet_jkp_Building", Storage="_jkp_Buildings", ThisKey="Ham_ID", OtherKey="Bld_Ham_ID")]
		public EntitySet<jkp_Building> jkp_Buildings
		{
			get
			{
				return this._jkp_Buildings;
			}
			set
			{
				this._jkp_Buildings.Assign(value);
			}
		}
		
		[Association(Name="jkp_Hamlet_jkp_Contact", Storage="_jkp_Contacts", ThisKey="Ham_ID", OtherKey="Contact_Ham_ID")]
		public EntitySet<jkp_Contact> jkp_Contacts
		{
			get
			{
				return this._jkp_Contacts;
			}
			set
			{
				this._jkp_Contacts.Assign(value);
			}
		}
		
		[Association(Name="jkp_Address_jkp_Hamlet", Storage="_jkp_Address", ThisKey="Ham_Add_ID", OtherKey="Add_ID", IsForeignKey=true)]
		public jkp_Address jkp_Address
		{
			get
			{
				return this._jkp_Address.Entity;
			}
			set
			{
				jkp_Address previousValue = this._jkp_Address.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Address.Entity = null;
						previousValue.jkp_Hamlets.Remove(this);
					}
					this._jkp_Address.Entity = value;
					if ((value != null))
					{
						value.jkp_Hamlets.Add(this);
						this._Ham_Add_ID = value.Add_ID;
					}
					else
					{
						this._Ham_Add_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Address");
				}
			}
		}
		
		[Association(Name="jkp_Site_jkp_Hamlet", Storage="_jkp_Site", ThisKey="Ham_Site_ID", OtherKey="Site_ID", IsForeignKey=true)]
		public jkp_Site jkp_Site
		{
			get
			{
				return this._jkp_Site.Entity;
			}
			set
			{
				jkp_Site previousValue = this._jkp_Site.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Site.Entity = null;
						previousValue.jkp_Hamlets.Remove(this);
					}
					this._jkp_Site.Entity = value;
					if ((value != null))
					{
						value.jkp_Hamlets.Add(this);
						this._Ham_Site_ID = value.Site_ID;
					}
					else
					{
						this._Ham_Site_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Buildings(jkp_Building entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Hamlet = this;
		}
		
		private void detach_jkp_Buildings(jkp_Building entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Hamlet = null;
		}
		
		private void attach_jkp_Contacts(jkp_Contact entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Hamlet = this;
		}
		
		private void detach_jkp_Contacts(jkp_Contact entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Hamlet = null;
		}
	}
	
	[Table(Name="dbo.jkp_Image")]
	public partial class jkp_Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Img_ID;
		
		private string _Img_Format;
		
		private string _Img_Pathname;
		
		private System.Nullable<int> _Img_Size;
		
		private System.Nullable<System.DateTime> _Img_DateAdded;
		
		private System.Nullable<System.DateTime> _Img_DateModified;
		
		private string _Img_Title;
		
		private string _Img_Genre;
		
		private string _Img_Subject;
		
		private string _Img_Description;
		
		private string _Img_Caption;
		
		private System.Nullable<int> _Img_Year;
		
		private System.Nullable<System.Guid> _Img_Coll_ID;
		
		private string _Img_Comment;
		
		private bool _Img_Featured;
		
		private EntitySet<jkp_ImageActivity> _jkp_ImageActivities;
		
		private EntitySet<jkp_MediaRole> _jkp_MediaRoles;
		
		private EntitySet<jkp_PersonImage> _jkp_PersonImages;
		
		private EntityRef<jkp_Collection> _jkp_Collection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImg_IDChanging(System.Guid value);
    partial void OnImg_IDChanged();
    partial void OnImg_FormatChanging(string value);
    partial void OnImg_FormatChanged();
    partial void OnImg_PathnameChanging(string value);
    partial void OnImg_PathnameChanged();
    partial void OnImg_SizeChanging(System.Nullable<int> value);
    partial void OnImg_SizeChanged();
    partial void OnImg_DateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnImg_DateAddedChanged();
    partial void OnImg_DateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnImg_DateModifiedChanged();
    partial void OnImg_TitleChanging(string value);
    partial void OnImg_TitleChanged();
    partial void OnImg_GenreChanging(string value);
    partial void OnImg_GenreChanged();
    partial void OnImg_SubjectChanging(string value);
    partial void OnImg_SubjectChanged();
    partial void OnImg_DescriptionChanging(string value);
    partial void OnImg_DescriptionChanged();
    partial void OnImg_CaptionChanging(string value);
    partial void OnImg_CaptionChanged();
    partial void OnImg_YearChanging(System.Nullable<int> value);
    partial void OnImg_YearChanged();
    partial void OnImg_Coll_IDChanging(System.Nullable<System.Guid> value);
    partial void OnImg_Coll_IDChanged();
    partial void OnImg_CommentChanging(string value);
    partial void OnImg_CommentChanged();
    partial void OnImg_FeaturedChanging(bool value);
    partial void OnImg_FeaturedChanged();
    #endregion
		
		public jkp_Image()
		{
			this._jkp_ImageActivities = new EntitySet<jkp_ImageActivity>(new Action<jkp_ImageActivity>(this.attach_jkp_ImageActivities), new Action<jkp_ImageActivity>(this.detach_jkp_ImageActivities));
			this._jkp_MediaRoles = new EntitySet<jkp_MediaRole>(new Action<jkp_MediaRole>(this.attach_jkp_MediaRoles), new Action<jkp_MediaRole>(this.detach_jkp_MediaRoles));
			this._jkp_PersonImages = new EntitySet<jkp_PersonImage>(new Action<jkp_PersonImage>(this.attach_jkp_PersonImages), new Action<jkp_PersonImage>(this.detach_jkp_PersonImages));
			this._jkp_Collection = default(EntityRef<jkp_Collection>);
			OnCreated();
		}
		
		[Column(Storage="_Img_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Img_ID
		{
			get
			{
				return this._Img_ID;
			}
			set
			{
				if ((this._Img_ID != value))
				{
					this.OnImg_IDChanging(value);
					this.SendPropertyChanging();
					this._Img_ID = value;
					this.SendPropertyChanged("Img_ID");
					this.OnImg_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Format", DbType="VarChar(10)")]
		public string Img_Format
		{
			get
			{
				return this._Img_Format;
			}
			set
			{
				if ((this._Img_Format != value))
				{
					this.OnImg_FormatChanging(value);
					this.SendPropertyChanging();
					this._Img_Format = value;
					this.SendPropertyChanged("Img_Format");
					this.OnImg_FormatChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Pathname", DbType="VarChar(255)")]
		public string Img_Pathname
		{
			get
			{
				return this._Img_Pathname;
			}
			set
			{
				if ((this._Img_Pathname != value))
				{
					this.OnImg_PathnameChanging(value);
					this.SendPropertyChanging();
					this._Img_Pathname = value;
					this.SendPropertyChanged("Img_Pathname");
					this.OnImg_PathnameChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Size", DbType="Int")]
		public System.Nullable<int> Img_Size
		{
			get
			{
				return this._Img_Size;
			}
			set
			{
				if ((this._Img_Size != value))
				{
					this.OnImg_SizeChanging(value);
					this.SendPropertyChanging();
					this._Img_Size = value;
					this.SendPropertyChanged("Img_Size");
					this.OnImg_SizeChanged();
				}
			}
		}
		
		[Column(Storage="_Img_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> Img_DateAdded
		{
			get
			{
				return this._Img_DateAdded;
			}
			set
			{
				if ((this._Img_DateAdded != value))
				{
					this.OnImg_DateAddedChanging(value);
					this.SendPropertyChanging();
					this._Img_DateAdded = value;
					this.SendPropertyChanged("Img_DateAdded");
					this.OnImg_DateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_Img_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> Img_DateModified
		{
			get
			{
				return this._Img_DateModified;
			}
			set
			{
				if ((this._Img_DateModified != value))
				{
					this.OnImg_DateModifiedChanging(value);
					this.SendPropertyChanging();
					this._Img_DateModified = value;
					this.SendPropertyChanged("Img_DateModified");
					this.OnImg_DateModifiedChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Title", DbType="VarChar(100)")]
		public string Img_Title
		{
			get
			{
				return this._Img_Title;
			}
			set
			{
				if ((this._Img_Title != value))
				{
					this.OnImg_TitleChanging(value);
					this.SendPropertyChanging();
					this._Img_Title = value;
					this.SendPropertyChanged("Img_Title");
					this.OnImg_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Genre", DbType="VarChar(50)")]
		public string Img_Genre
		{
			get
			{
				return this._Img_Genre;
			}
			set
			{
				if ((this._Img_Genre != value))
				{
					this.OnImg_GenreChanging(value);
					this.SendPropertyChanging();
					this._Img_Genre = value;
					this.SendPropertyChanged("Img_Genre");
					this.OnImg_GenreChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Subject", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Img_Subject
		{
			get
			{
				return this._Img_Subject;
			}
			set
			{
				if ((this._Img_Subject != value))
				{
					this.OnImg_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Img_Subject = value;
					this.SendPropertyChanged("Img_Subject");
					this.OnImg_SubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Img_Description
		{
			get
			{
				return this._Img_Description;
			}
			set
			{
				if ((this._Img_Description != value))
				{
					this.OnImg_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Img_Description = value;
					this.SendPropertyChanged("Img_Description");
					this.OnImg_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Caption", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Img_Caption
		{
			get
			{
				return this._Img_Caption;
			}
			set
			{
				if ((this._Img_Caption != value))
				{
					this.OnImg_CaptionChanging(value);
					this.SendPropertyChanging();
					this._Img_Caption = value;
					this.SendPropertyChanged("Img_Caption");
					this.OnImg_CaptionChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Year", DbType="Int")]
		public System.Nullable<int> Img_Year
		{
			get
			{
				return this._Img_Year;
			}
			set
			{
				if ((this._Img_Year != value))
				{
					this.OnImg_YearChanging(value);
					this.SendPropertyChanging();
					this._Img_Year = value;
					this.SendPropertyChanged("Img_Year");
					this.OnImg_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Coll_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Img_Coll_ID
		{
			get
			{
				return this._Img_Coll_ID;
			}
			set
			{
				if ((this._Img_Coll_ID != value))
				{
					if (this._jkp_Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImg_Coll_IDChanging(value);
					this.SendPropertyChanging();
					this._Img_Coll_ID = value;
					this.SendPropertyChanged("Img_Coll_ID");
					this.OnImg_Coll_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Img_Comment
		{
			get
			{
				return this._Img_Comment;
			}
			set
			{
				if ((this._Img_Comment != value))
				{
					this.OnImg_CommentChanging(value);
					this.SendPropertyChanging();
					this._Img_Comment = value;
					this.SendPropertyChanged("Img_Comment");
					this.OnImg_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Img_Featured", DbType="Bit NOT NULL")]
		public bool Img_Featured
		{
			get
			{
				return this._Img_Featured;
			}
			set
			{
				if ((this._Img_Featured != value))
				{
					this.OnImg_FeaturedChanging(value);
					this.SendPropertyChanging();
					this._Img_Featured = value;
					this.SendPropertyChanged("Img_Featured");
					this.OnImg_FeaturedChanged();
				}
			}
		}
		
		[Association(Name="jkp_Image_jkp_ImageActivity", Storage="_jkp_ImageActivities", ThisKey="Img_ID", OtherKey="IA_Img_ID")]
		public EntitySet<jkp_ImageActivity> jkp_ImageActivities
		{
			get
			{
				return this._jkp_ImageActivities;
			}
			set
			{
				this._jkp_ImageActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Image_jkp_MediaRole", Storage="_jkp_MediaRoles", ThisKey="Img_ID", OtherKey="ImageId")]
		public EntitySet<jkp_MediaRole> jkp_MediaRoles
		{
			get
			{
				return this._jkp_MediaRoles;
			}
			set
			{
				this._jkp_MediaRoles.Assign(value);
			}
		}
		
		[Association(Name="jkp_Image_jkp_PersonImage", Storage="_jkp_PersonImages", ThisKey="Img_ID", OtherKey="PI_Img_ID")]
		public EntitySet<jkp_PersonImage> jkp_PersonImages
		{
			get
			{
				return this._jkp_PersonImages;
			}
			set
			{
				this._jkp_PersonImages.Assign(value);
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Image", Storage="_jkp_Collection", ThisKey="Img_Coll_ID", OtherKey="Coll_ID", IsForeignKey=true)]
		public jkp_Collection jkp_Collection
		{
			get
			{
				return this._jkp_Collection.Entity;
			}
			set
			{
				jkp_Collection previousValue = this._jkp_Collection.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Collection.Entity = null;
						previousValue.jkp_Images.Remove(this);
					}
					this._jkp_Collection.Entity = value;
					if ((value != null))
					{
						value.jkp_Images.Add(this);
						this._Img_Coll_ID = value.Coll_ID;
					}
					else
					{
						this._Img_Coll_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Collection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_ImageActivities(jkp_ImageActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Image = this;
		}
		
		private void detach_jkp_ImageActivities(jkp_ImageActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Image = null;
		}
		
		private void attach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Image = this;
		}
		
		private void detach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Image = null;
		}
		
		private void attach_jkp_PersonImages(jkp_PersonImage entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Image = this;
		}
		
		private void detach_jkp_PersonImages(jkp_PersonImage entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Image = null;
		}
	}
	
	[Table(Name="dbo.jkp_ImageActivity")]
	public partial class jkp_ImageActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IA_Img_ID;
		
		private System.Guid _IA_Act_ID;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
		private EntityRef<jkp_Image> _jkp_Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIA_Img_IDChanging(System.Guid value);
    partial void OnIA_Img_IDChanged();
    partial void OnIA_Act_IDChanging(System.Guid value);
    partial void OnIA_Act_IDChanged();
    #endregion
		
		public jkp_ImageActivity()
		{
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			this._jkp_Image = default(EntityRef<jkp_Image>);
			OnCreated();
		}
		
		[Column(Storage="_IA_Img_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IA_Img_ID
		{
			get
			{
				return this._IA_Img_ID;
			}
			set
			{
				if ((this._IA_Img_ID != value))
				{
					if (this._jkp_Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIA_Img_IDChanging(value);
					this.SendPropertyChanging();
					this._IA_Img_ID = value;
					this.SendPropertyChanged("IA_Img_ID");
					this.OnIA_Img_IDChanged();
				}
			}
		}
		
		[Column(Storage="_IA_Act_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IA_Act_ID
		{
			get
			{
				return this._IA_Act_ID;
			}
			set
			{
				if ((this._IA_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIA_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._IA_Act_ID = value;
					this.SendPropertyChanged("IA_Act_ID");
					this.OnIA_Act_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_ImageActivity", Storage="_jkp_Activity", ThisKey="IA_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_ImageActivities.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_ImageActivities.Add(this);
						this._IA_Act_ID = value.Act_ID;
					}
					else
					{
						this._IA_Act_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		[Association(Name="jkp_Image_jkp_ImageActivity", Storage="_jkp_Image", ThisKey="IA_Img_ID", OtherKey="Img_ID", IsForeignKey=true)]
		public jkp_Image jkp_Image
		{
			get
			{
				return this._jkp_Image.Entity;
			}
			set
			{
				jkp_Image previousValue = this._jkp_Image.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Image.Entity = null;
						previousValue.jkp_ImageActivities.Remove(this);
					}
					this._jkp_Image.Entity = value;
					if ((value != null))
					{
						value.jkp_ImageActivities.Add(this);
						this._IA_Img_ID = value.Img_ID;
					}
					else
					{
						this._IA_Img_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Languages")]
	public partial class jkp_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Lang_ID;
		
		private string _Lang_DisplayName;
		
		private string _Lang_BrowserCode;
		
		private EntitySet<jkp_Article> _jkp_Articles;
		
		private EntitySet<jkp_Retreat> _jkp_Retreats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLang_IDChanging(System.Guid value);
    partial void OnLang_IDChanged();
    partial void OnLang_DisplayNameChanging(string value);
    partial void OnLang_DisplayNameChanged();
    partial void OnLang_BrowserCodeChanging(string value);
    partial void OnLang_BrowserCodeChanged();
    #endregion
		
		public jkp_Language()
		{
			this._jkp_Articles = new EntitySet<jkp_Article>(new Action<jkp_Article>(this.attach_jkp_Articles), new Action<jkp_Article>(this.detach_jkp_Articles));
			this._jkp_Retreats = new EntitySet<jkp_Retreat>(new Action<jkp_Retreat>(this.attach_jkp_Retreats), new Action<jkp_Retreat>(this.detach_jkp_Retreats));
			OnCreated();
		}
		
		[Column(Storage="_Lang_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Lang_ID
		{
			get
			{
				return this._Lang_ID;
			}
			set
			{
				if ((this._Lang_ID != value))
				{
					this.OnLang_IDChanging(value);
					this.SendPropertyChanging();
					this._Lang_ID = value;
					this.SendPropertyChanged("Lang_ID");
					this.OnLang_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Lang_DisplayName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Lang_DisplayName
		{
			get
			{
				return this._Lang_DisplayName;
			}
			set
			{
				if ((this._Lang_DisplayName != value))
				{
					this.OnLang_DisplayNameChanging(value);
					this.SendPropertyChanging();
					this._Lang_DisplayName = value;
					this.SendPropertyChanged("Lang_DisplayName");
					this.OnLang_DisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Lang_BrowserCode", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Lang_BrowserCode
		{
			get
			{
				return this._Lang_BrowserCode;
			}
			set
			{
				if ((this._Lang_BrowserCode != value))
				{
					this.OnLang_BrowserCodeChanging(value);
					this.SendPropertyChanging();
					this._Lang_BrowserCode = value;
					this.SendPropertyChanged("Lang_BrowserCode");
					this.OnLang_BrowserCodeChanged();
				}
			}
		}
		
		[Association(Name="jkp_Language_jkp_Article", Storage="_jkp_Articles", ThisKey="Lang_ID", OtherKey="Art_LanguageId")]
		public EntitySet<jkp_Article> jkp_Articles
		{
			get
			{
				return this._jkp_Articles;
			}
			set
			{
				this._jkp_Articles.Assign(value);
			}
		}
		
		[Association(Name="jkp_Language_jkp_Retreat", Storage="_jkp_Retreats", ThisKey="Lang_ID", OtherKey="Ret_LanguageId")]
		public EntitySet<jkp_Retreat> jkp_Retreats
		{
			get
			{
				return this._jkp_Retreats;
			}
			set
			{
				this._jkp_Retreats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Articles(jkp_Article entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Language = this;
		}
		
		private void detach_jkp_Articles(jkp_Article entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Language = null;
		}
		
		private void attach_jkp_Retreats(jkp_Retreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Language = this;
		}
		
		private void detach_jkp_Retreats(jkp_Retreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Language = null;
		}
	}
	
	[Table(Name="dbo.jkp_Media")]
	public partial class jkp_Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _M_ID;
		
		private string _M_Comment;
		
		private EntitySet<jkp_AuthorityMediaAction> _jkp_AuthorityMediaActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnM_IDChanging(System.Guid value);
    partial void OnM_IDChanged();
    partial void OnM_CommentChanging(string value);
    partial void OnM_CommentChanged();
    #endregion
		
		public jkp_Media()
		{
			this._jkp_AuthorityMediaActions = new EntitySet<jkp_AuthorityMediaAction>(new Action<jkp_AuthorityMediaAction>(this.attach_jkp_AuthorityMediaActions), new Action<jkp_AuthorityMediaAction>(this.detach_jkp_AuthorityMediaActions));
			OnCreated();
		}
		
		[Column(Storage="_M_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid M_ID
		{
			get
			{
				return this._M_ID;
			}
			set
			{
				if ((this._M_ID != value))
				{
					this.OnM_IDChanging(value);
					this.SendPropertyChanging();
					this._M_ID = value;
					this.SendPropertyChanged("M_ID");
					this.OnM_IDChanged();
				}
			}
		}
		
		[Column(Storage="_M_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string M_Comment
		{
			get
			{
				return this._M_Comment;
			}
			set
			{
				if ((this._M_Comment != value))
				{
					this.OnM_CommentChanging(value);
					this.SendPropertyChanging();
					this._M_Comment = value;
					this.SendPropertyChanged("M_Comment");
					this.OnM_CommentChanged();
				}
			}
		}
		
		[Association(Name="jkp_Media_jkp_AuthorityMediaAction", Storage="_jkp_AuthorityMediaActions", ThisKey="M_ID", OtherKey="AMA_M_ID")]
		public EntitySet<jkp_AuthorityMediaAction> jkp_AuthorityMediaActions
		{
			get
			{
				return this._jkp_AuthorityMediaActions;
			}
			set
			{
				this._jkp_AuthorityMediaActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_AuthorityMediaActions(jkp_AuthorityMediaAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Media = this;
		}
		
		private void detach_jkp_AuthorityMediaActions(jkp_AuthorityMediaAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Media = null;
		}
	}
	
	[Table(Name="dbo.jkp_MediaRole")]
	public partial class jkp_MediaRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MediaRoleId;
		
		private System.Nullable<System.Guid> _VideoId;
		
		private System.Nullable<System.Guid> _AudioId;
		
		private System.Nullable<System.Guid> _ImageId;
		
		private System.Nullable<System.Guid> _BookId;
		
		private System.Nullable<System.Guid> _RoleId;
		
		private System.Nullable<System.Guid> _PersonId;
		
		private System.Nullable<System.Guid> _DocumentId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<jkp_Audio> _jkp_Audio;
		
		private EntityRef<jkp_Book> _jkp_Book;
		
		private EntityRef<jkp_Image> _jkp_Image;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Video> _jkp_Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMediaRoleIdChanging(System.Guid value);
    partial void OnMediaRoleIdChanged();
    partial void OnVideoIdChanging(System.Nullable<System.Guid> value);
    partial void OnVideoIdChanged();
    partial void OnAudioIdChanging(System.Nullable<System.Guid> value);
    partial void OnAudioIdChanged();
    partial void OnImageIdChanging(System.Nullable<System.Guid> value);
    partial void OnImageIdChanged();
    partial void OnBookIdChanging(System.Nullable<System.Guid> value);
    partial void OnBookIdChanged();
    partial void OnRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnRoleIdChanged();
    partial void OnPersonIdChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIdChanged();
    partial void OnDocumentIdChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentIdChanged();
    #endregion
		
		public jkp_MediaRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._jkp_Audio = default(EntityRef<jkp_Audio>);
			this._jkp_Book = default(EntityRef<jkp_Book>);
			this._jkp_Image = default(EntityRef<jkp_Image>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Video = default(EntityRef<jkp_Video>);
			OnCreated();
		}
		
		[Column(Storage="_MediaRoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MediaRoleId
		{
			get
			{
				return this._MediaRoleId;
			}
			set
			{
				if ((this._MediaRoleId != value))
				{
					this.OnMediaRoleIdChanging(value);
					this.SendPropertyChanging();
					this._MediaRoleId = value;
					this.SendPropertyChanged("MediaRoleId");
					this.OnMediaRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_VideoId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					if (this._jkp_Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[Column(Storage="_AudioId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AudioId
		{
			get
			{
				return this._AudioId;
			}
			set
			{
				if ((this._AudioId != value))
				{
					if (this._jkp_Audio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAudioIdChanging(value);
					this.SendPropertyChanging();
					this._AudioId = value;
					this.SendPropertyChanged("AudioId");
					this.OnAudioIdChanged();
				}
			}
		}
		
		[Column(Storage="_ImageId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._jkp_Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[Column(Storage="_BookId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._jkp_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_PersonId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_jkp_MediaRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.jkp_MediaRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.jkp_MediaRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[Association(Name="jkp_Audio_jkp_MediaRole", Storage="_jkp_Audio", ThisKey="AudioId", OtherKey="Aud_ID", IsForeignKey=true)]
		public jkp_Audio jkp_Audio
		{
			get
			{
				return this._jkp_Audio.Entity;
			}
			set
			{
				jkp_Audio previousValue = this._jkp_Audio.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Audio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Audio.Entity = null;
						previousValue.jkp_MediaRoles.Remove(this);
					}
					this._jkp_Audio.Entity = value;
					if ((value != null))
					{
						value.jkp_MediaRoles.Add(this);
						this._AudioId = value.Aud_ID;
					}
					else
					{
						this._AudioId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Audio");
				}
			}
		}
		
		[Association(Name="jkp_Book_jkp_MediaRole", Storage="_jkp_Book", ThisKey="BookId", OtherKey="Bk_ID", IsForeignKey=true)]
		public jkp_Book jkp_Book
		{
			get
			{
				return this._jkp_Book.Entity;
			}
			set
			{
				jkp_Book previousValue = this._jkp_Book.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Book.Entity = null;
						previousValue.jkp_MediaRoles.Remove(this);
					}
					this._jkp_Book.Entity = value;
					if ((value != null))
					{
						value.jkp_MediaRoles.Add(this);
						this._BookId = value.Bk_ID;
					}
					else
					{
						this._BookId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Book");
				}
			}
		}
		
		[Association(Name="jkp_Image_jkp_MediaRole", Storage="_jkp_Image", ThisKey="ImageId", OtherKey="Img_ID", IsForeignKey=true)]
		public jkp_Image jkp_Image
		{
			get
			{
				return this._jkp_Image.Entity;
			}
			set
			{
				jkp_Image previousValue = this._jkp_Image.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Image.Entity = null;
						previousValue.jkp_MediaRoles.Remove(this);
					}
					this._jkp_Image.Entity = value;
					if ((value != null))
					{
						value.jkp_MediaRoles.Add(this);
						this._ImageId = value.Img_ID;
					}
					else
					{
						this._ImageId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Image");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_MediaRole", Storage="_jkp_Person", ThisKey="PersonId", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_MediaRoles.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_MediaRoles.Add(this);
						this._PersonId = value.Per_ID;
					}
					else
					{
						this._PersonId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Video_jkp_MediaRole", Storage="_jkp_Video", ThisKey="VideoId", OtherKey="Vid_ID", IsForeignKey=true)]
		public jkp_Video jkp_Video
		{
			get
			{
				return this._jkp_Video.Entity;
			}
			set
			{
				jkp_Video previousValue = this._jkp_Video.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Video.Entity = null;
						previousValue.jkp_MediaRoles.Remove(this);
					}
					this._jkp_Video.Entity = value;
					if ((value != null))
					{
						value.jkp_MediaRoles.Add(this);
						this._VideoId = value.Vid_ID;
					}
					else
					{
						this._VideoId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_MedicalQuestions")]
	public partial class jkp_MedicalQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MedQues_ID;
		
		private string _MedQues_Question;
		
		private EntitySet<jkp_PersonMedicalQuestion> _jkp_PersonMedicalQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedQues_IDChanging(System.Guid value);
    partial void OnMedQues_IDChanged();
    partial void OnMedQues_QuestionChanging(string value);
    partial void OnMedQues_QuestionChanged();
    #endregion
		
		public jkp_MedicalQuestion()
		{
			this._jkp_PersonMedicalQuestions = new EntitySet<jkp_PersonMedicalQuestion>(new Action<jkp_PersonMedicalQuestion>(this.attach_jkp_PersonMedicalQuestions), new Action<jkp_PersonMedicalQuestion>(this.detach_jkp_PersonMedicalQuestions));
			OnCreated();
		}
		
		[Column(Storage="_MedQues_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MedQues_ID
		{
			get
			{
				return this._MedQues_ID;
			}
			set
			{
				if ((this._MedQues_ID != value))
				{
					this.OnMedQues_IDChanging(value);
					this.SendPropertyChanging();
					this._MedQues_ID = value;
					this.SendPropertyChanged("MedQues_ID");
					this.OnMedQues_IDChanged();
				}
			}
		}
		
		[Column(Storage="_MedQues_Question", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MedQues_Question
		{
			get
			{
				return this._MedQues_Question;
			}
			set
			{
				if ((this._MedQues_Question != value))
				{
					this.OnMedQues_QuestionChanging(value);
					this.SendPropertyChanging();
					this._MedQues_Question = value;
					this.SendPropertyChanged("MedQues_Question");
					this.OnMedQues_QuestionChanged();
				}
			}
		}
		
		[Association(Name="jkp_MedicalQuestion_jkp_PersonMedicalQuestion", Storage="_jkp_PersonMedicalQuestions", ThisKey="MedQues_ID", OtherKey="PMQ_MedQues_ID")]
		public EntitySet<jkp_PersonMedicalQuestion> jkp_PersonMedicalQuestions
		{
			get
			{
				return this._jkp_PersonMedicalQuestions;
			}
			set
			{
				this._jkp_PersonMedicalQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_PersonMedicalQuestions(jkp_PersonMedicalQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_MedicalQuestion = this;
		}
		
		private void detach_jkp_PersonMedicalQuestions(jkp_PersonMedicalQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_MedicalQuestion = null;
		}
	}
	
	[Table(Name="dbo.jkp_OrdinationFamily")]
	public partial class jkp_OrdinationFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OrdFamily_ID;
		
		private string _OrdFamily_Name;
		
		private string _OrdFamily_Comment;
		
		private EntitySet<jkp_Person> _jkp_Persons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdFamily_IDChanging(System.Guid value);
    partial void OnOrdFamily_IDChanged();
    partial void OnOrdFamily_NameChanging(string value);
    partial void OnOrdFamily_NameChanged();
    partial void OnOrdFamily_CommentChanging(string value);
    partial void OnOrdFamily_CommentChanged();
    #endregion
		
		public jkp_OrdinationFamily()
		{
			this._jkp_Persons = new EntitySet<jkp_Person>(new Action<jkp_Person>(this.attach_jkp_Persons), new Action<jkp_Person>(this.detach_jkp_Persons));
			OnCreated();
		}
		
		[Column(Storage="_OrdFamily_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OrdFamily_ID
		{
			get
			{
				return this._OrdFamily_ID;
			}
			set
			{
				if ((this._OrdFamily_ID != value))
				{
					this.OnOrdFamily_IDChanging(value);
					this.SendPropertyChanging();
					this._OrdFamily_ID = value;
					this.SendPropertyChanged("OrdFamily_ID");
					this.OnOrdFamily_IDChanged();
				}
			}
		}
		
		[Column(Storage="_OrdFamily_Name", DbType="VarChar(30)")]
		public string OrdFamily_Name
		{
			get
			{
				return this._OrdFamily_Name;
			}
			set
			{
				if ((this._OrdFamily_Name != value))
				{
					this.OnOrdFamily_NameChanging(value);
					this.SendPropertyChanging();
					this._OrdFamily_Name = value;
					this.SendPropertyChanged("OrdFamily_Name");
					this.OnOrdFamily_NameChanged();
				}
			}
		}
		
		[Column(Storage="_OrdFamily_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string OrdFamily_Comment
		{
			get
			{
				return this._OrdFamily_Comment;
			}
			set
			{
				if ((this._OrdFamily_Comment != value))
				{
					this.OnOrdFamily_CommentChanging(value);
					this.SendPropertyChanging();
					this._OrdFamily_Comment = value;
					this.SendPropertyChanged("OrdFamily_Comment");
					this.OnOrdFamily_CommentChanged();
				}
			}
		}
		
		[Association(Name="jkp_OrdinationFamily_jkp_Person", Storage="_jkp_Persons", ThisKey="OrdFamily_ID", OtherKey="Per_OrdFamily_ID")]
		public EntitySet<jkp_Person> jkp_Persons
		{
			get
			{
				return this._jkp_Persons;
			}
			set
			{
				this._jkp_Persons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_OrdinationFamily = this;
		}
		
		private void detach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_OrdinationFamily = null;
		}
	}
	
	[Table(Name="dbo.jkp_Passport")]
	public partial class jkp_Passport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Pass_ID;
		
		private System.Nullable<System.Guid> _Pass_Per_ID;
		
		private string _Pass_Number;
		
		private string _Pass_Nationality;
		
		private System.Nullable<System.DateTime> _Pass_DateIssued;
		
		private System.Nullable<System.DateTime> _Pass_DateExpires;
		
		private string _Pass_Authority;
		
		private string _Pass_Image;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPass_IDChanging(System.Guid value);
    partial void OnPass_IDChanged();
    partial void OnPass_Per_IDChanging(System.Nullable<System.Guid> value);
    partial void OnPass_Per_IDChanged();
    partial void OnPass_NumberChanging(string value);
    partial void OnPass_NumberChanged();
    partial void OnPass_NationalityChanging(string value);
    partial void OnPass_NationalityChanged();
    partial void OnPass_DateIssuedChanging(System.Nullable<System.DateTime> value);
    partial void OnPass_DateIssuedChanged();
    partial void OnPass_DateExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnPass_DateExpiresChanged();
    partial void OnPass_AuthorityChanging(string value);
    partial void OnPass_AuthorityChanged();
    partial void OnPass_ImageChanging(string value);
    partial void OnPass_ImageChanged();
    #endregion
		
		public jkp_Passport()
		{
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_Pass_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Pass_ID
		{
			get
			{
				return this._Pass_ID;
			}
			set
			{
				if ((this._Pass_ID != value))
				{
					this.OnPass_IDChanging(value);
					this.SendPropertyChanging();
					this._Pass_ID = value;
					this.SendPropertyChanged("Pass_ID");
					this.OnPass_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Pass_Per_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Pass_Per_ID
		{
			get
			{
				return this._Pass_Per_ID;
			}
			set
			{
				if ((this._Pass_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPass_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._Pass_Per_ID = value;
					this.SendPropertyChanged("Pass_Per_ID");
					this.OnPass_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Pass_Number", DbType="VarChar(20)")]
		public string Pass_Number
		{
			get
			{
				return this._Pass_Number;
			}
			set
			{
				if ((this._Pass_Number != value))
				{
					this.OnPass_NumberChanging(value);
					this.SendPropertyChanging();
					this._Pass_Number = value;
					this.SendPropertyChanged("Pass_Number");
					this.OnPass_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_Pass_Nationality", DbType="VarChar(20)")]
		public string Pass_Nationality
		{
			get
			{
				return this._Pass_Nationality;
			}
			set
			{
				if ((this._Pass_Nationality != value))
				{
					this.OnPass_NationalityChanging(value);
					this.SendPropertyChanging();
					this._Pass_Nationality = value;
					this.SendPropertyChanged("Pass_Nationality");
					this.OnPass_NationalityChanged();
				}
			}
		}
		
		[Column(Storage="_Pass_DateIssued", DbType="DateTime")]
		public System.Nullable<System.DateTime> Pass_DateIssued
		{
			get
			{
				return this._Pass_DateIssued;
			}
			set
			{
				if ((this._Pass_DateIssued != value))
				{
					this.OnPass_DateIssuedChanging(value);
					this.SendPropertyChanging();
					this._Pass_DateIssued = value;
					this.SendPropertyChanged("Pass_DateIssued");
					this.OnPass_DateIssuedChanged();
				}
			}
		}
		
		[Column(Storage="_Pass_DateExpires", DbType="DateTime")]
		public System.Nullable<System.DateTime> Pass_DateExpires
		{
			get
			{
				return this._Pass_DateExpires;
			}
			set
			{
				if ((this._Pass_DateExpires != value))
				{
					this.OnPass_DateExpiresChanging(value);
					this.SendPropertyChanging();
					this._Pass_DateExpires = value;
					this.SendPropertyChanged("Pass_DateExpires");
					this.OnPass_DateExpiresChanged();
				}
			}
		}
		
		[Column(Storage="_Pass_Authority", DbType="VarChar(50)")]
		public string Pass_Authority
		{
			get
			{
				return this._Pass_Authority;
			}
			set
			{
				if ((this._Pass_Authority != value))
				{
					this.OnPass_AuthorityChanging(value);
					this.SendPropertyChanging();
					this._Pass_Authority = value;
					this.SendPropertyChanged("Pass_Authority");
					this.OnPass_AuthorityChanged();
				}
			}
		}
		
		[Column(Storage="_Pass_Image", DbType="VarChar(100)")]
		public string Pass_Image
		{
			get
			{
				return this._Pass_Image;
			}
			set
			{
				if ((this._Pass_Image != value))
				{
					this.OnPass_ImageChanging(value);
					this.SendPropertyChanging();
					this._Pass_Image = value;
					this.SendPropertyChanged("Pass_Image");
					this.OnPass_ImageChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Passport", Storage="_jkp_Person", ThisKey="Pass_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Passports.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Passports.Add(this);
						this._Pass_Per_ID = value.Per_ID;
					}
					else
					{
						this._Pass_Per_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Person")]
	public partial class jkp_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Per_ID;
		
		private string _Per_FirstName;
		
		private string _Per_LastName;
		
		private string _Per_DharmaName;
		
		private string _Per_LineageName;
		
		private System.Nullable<char> _Per_Gender;
		
		private string _Per_Nationality;
		
		private string _Per_PrimaryLanguage;
		
		private string _Per_SecondaryLanguage;
		
		private string _Per_PlaceOfBirth;
		
		private System.Nullable<System.DateTime> _Per_Birthdate;
		
		private System.Nullable<System.DateTime> _Per_DeathDate;
		
		private string _Per_HomePhoneNumber;
		
		private string _Per_CellPhoneNumber;
		
		private string _Per_WorkPhoneNumber;
		
		private System.Nullable<char> _Per_Active;
		
		private string _Per_Fax;
		
		private string _Per_Email;
		
		private string _Per_SanghaRole;
		
		private System.Nullable<System.Guid> _Per_FGroup_ID;
		
		private System.Nullable<System.Guid> _Per_OrdFamily_ID;
		
		private System.Nullable<System.Guid> _Per_San_ID;
		
		private string _Per_Rm_ID;
		
		private System.Nullable<System.Guid> _Per_Add_ID;
		
		private EntitySet<jkp_Visa> _jkp_Visas;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<jkp_Article> _jkp_Articles;
		
		private EntitySet<jkp_Audio> _jkp_Audios;
		
		private EntitySet<jkp_Book> _jkp_Books;
		
		private EntitySet<jkp_Contribution> _jkp_Contributions;
		
		private EntitySet<jkp_Contribution> _jkp_Contributions1;
		
		private EntitySet<jkp_Document> _jkp_Documents;
		
		private EntitySet<jkp_DriversLicense> _jkp_DriversLicenses;
		
		private EntitySet<jkp_MediaRole> _jkp_MediaRoles;
		
		private EntitySet<jkp_Passport> _jkp_Passports;
		
		private EntityRef<jkp_Person> _jkp_Person2;
		
		private EntitySet<jkp_PersonActivity> _jkp_PersonActivities;
		
		private EntitySet<jkp_PersonAssignmentActivity> _jkp_PersonAssignmentActivities;
		
		private EntitySet<jkp_PersonAssignmentRetreat> _jkp_PersonAssignmentRetreats;
		
		private EntitySet<jkp_PersonAttendingRetreat> _jkp_PersonAttendingRetreats;
		
		private EntitySet<jkp_PersonAudio> _jkp_PersonAudios;
		
		private EntitySet<jkp_PersonBook> _jkp_PersonBooks;
		
		private EntitySet<jkp_PersonContributionRetreat> _jkp_PersonContributionRetreats;
		
		private EntitySet<jkp_PersonDiscussionGroup> _jkp_PersonDiscussionGroups;
		
		private EntitySet<jkp_PersonDocument> _jkp_PersonDocuments;
		
		private EntitySet<jkp_PersonGeneralQuestion> _jkp_PersonGeneralQuestions;
		
		private EntitySet<jkp_PersonImage> _jkp_PersonImages;
		
		private EntitySet<jkp_PersonMedicalQuestion> _jkp_PersonMedicalQuestions;
		
		private EntitySet<jkp_PersonReceivesTraining> _jkp_PersonReceivesTrainings;
		
		private EntitySet<jkp_PersonSangha> _jkp_PersonSanghas;
		
		private EntitySet<jkp_PersonTransmitsTraining> _jkp_PersonTransmitsTrainings;
		
		private EntitySet<jkp_PersonVideo> _jkp_PersonVideos;
		
		private EntitySet<jkp_Video> _jkp_Videos;
		
		private EntityRef<jkp_Person> _jkp_Person1;
		
		private EntityRef<jkp_Address> _jkp_Address;
		
		private EntityRef<jkp_FamilyGroup> _jkp_FamilyGroup;
		
		private EntityRef<jkp_OrdinationFamily> _jkp_OrdinationFamily;
		
		private EntityRef<jkp_Sangha> _jkp_Sangha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPer_IDChanging(System.Guid value);
    partial void OnPer_IDChanged();
    partial void OnPer_FirstNameChanging(string value);
    partial void OnPer_FirstNameChanged();
    partial void OnPer_LastNameChanging(string value);
    partial void OnPer_LastNameChanged();
    partial void OnPer_DharmaNameChanging(string value);
    partial void OnPer_DharmaNameChanged();
    partial void OnPer_LineageNameChanging(string value);
    partial void OnPer_LineageNameChanged();
    partial void OnPer_GenderChanging(System.Nullable<char> value);
    partial void OnPer_GenderChanged();
    partial void OnPer_NationalityChanging(string value);
    partial void OnPer_NationalityChanged();
    partial void OnPer_PrimaryLanguageChanging(string value);
    partial void OnPer_PrimaryLanguageChanged();
    partial void OnPer_SecondaryLanguageChanging(string value);
    partial void OnPer_SecondaryLanguageChanged();
    partial void OnPer_PlaceOfBirthChanging(string value);
    partial void OnPer_PlaceOfBirthChanged();
    partial void OnPer_BirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnPer_BirthdateChanged();
    partial void OnPer_DeathDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPer_DeathDateChanged();
    partial void OnPer_HomePhoneNumberChanging(string value);
    partial void OnPer_HomePhoneNumberChanged();
    partial void OnPer_CellPhoneNumberChanging(string value);
    partial void OnPer_CellPhoneNumberChanged();
    partial void OnPer_WorkPhoneNumberChanging(string value);
    partial void OnPer_WorkPhoneNumberChanged();
    partial void OnPer_ActiveChanging(System.Nullable<char> value);
    partial void OnPer_ActiveChanged();
    partial void OnPer_FaxChanging(string value);
    partial void OnPer_FaxChanged();
    partial void OnPer_EmailChanging(string value);
    partial void OnPer_EmailChanged();
    partial void OnPer_SanghaRoleChanging(string value);
    partial void OnPer_SanghaRoleChanged();
    partial void OnPer_FGroup_IDChanging(System.Nullable<System.Guid> value);
    partial void OnPer_FGroup_IDChanged();
    partial void OnPer_OrdFamily_IDChanging(System.Nullable<System.Guid> value);
    partial void OnPer_OrdFamily_IDChanged();
    partial void OnPer_San_IDChanging(System.Nullable<System.Guid> value);
    partial void OnPer_San_IDChanged();
    partial void OnPer_Rm_IDChanging(string value);
    partial void OnPer_Rm_IDChanged();
    partial void OnPer_Add_IDChanging(System.Nullable<System.Guid> value);
    partial void OnPer_Add_IDChanged();
    #endregion
		
		public jkp_Person()
		{
			this._jkp_Visas = new EntitySet<jkp_Visa>(new Action<jkp_Visa>(this.attach_jkp_Visas), new Action<jkp_Visa>(this.detach_jkp_Visas));
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._jkp_Articles = new EntitySet<jkp_Article>(new Action<jkp_Article>(this.attach_jkp_Articles), new Action<jkp_Article>(this.detach_jkp_Articles));
			this._jkp_Audios = new EntitySet<jkp_Audio>(new Action<jkp_Audio>(this.attach_jkp_Audios), new Action<jkp_Audio>(this.detach_jkp_Audios));
			this._jkp_Books = new EntitySet<jkp_Book>(new Action<jkp_Book>(this.attach_jkp_Books), new Action<jkp_Book>(this.detach_jkp_Books));
			this._jkp_Contributions = new EntitySet<jkp_Contribution>(new Action<jkp_Contribution>(this.attach_jkp_Contributions), new Action<jkp_Contribution>(this.detach_jkp_Contributions));
			this._jkp_Contributions1 = new EntitySet<jkp_Contribution>(new Action<jkp_Contribution>(this.attach_jkp_Contributions1), new Action<jkp_Contribution>(this.detach_jkp_Contributions1));
			this._jkp_Documents = new EntitySet<jkp_Document>(new Action<jkp_Document>(this.attach_jkp_Documents), new Action<jkp_Document>(this.detach_jkp_Documents));
			this._jkp_DriversLicenses = new EntitySet<jkp_DriversLicense>(new Action<jkp_DriversLicense>(this.attach_jkp_DriversLicenses), new Action<jkp_DriversLicense>(this.detach_jkp_DriversLicenses));
			this._jkp_MediaRoles = new EntitySet<jkp_MediaRole>(new Action<jkp_MediaRole>(this.attach_jkp_MediaRoles), new Action<jkp_MediaRole>(this.detach_jkp_MediaRoles));
			this._jkp_Passports = new EntitySet<jkp_Passport>(new Action<jkp_Passport>(this.attach_jkp_Passports), new Action<jkp_Passport>(this.detach_jkp_Passports));
			this._jkp_Person2 = default(EntityRef<jkp_Person>);
			this._jkp_PersonActivities = new EntitySet<jkp_PersonActivity>(new Action<jkp_PersonActivity>(this.attach_jkp_PersonActivities), new Action<jkp_PersonActivity>(this.detach_jkp_PersonActivities));
			this._jkp_PersonAssignmentActivities = new EntitySet<jkp_PersonAssignmentActivity>(new Action<jkp_PersonAssignmentActivity>(this.attach_jkp_PersonAssignmentActivities), new Action<jkp_PersonAssignmentActivity>(this.detach_jkp_PersonAssignmentActivities));
			this._jkp_PersonAssignmentRetreats = new EntitySet<jkp_PersonAssignmentRetreat>(new Action<jkp_PersonAssignmentRetreat>(this.attach_jkp_PersonAssignmentRetreats), new Action<jkp_PersonAssignmentRetreat>(this.detach_jkp_PersonAssignmentRetreats));
			this._jkp_PersonAttendingRetreats = new EntitySet<jkp_PersonAttendingRetreat>(new Action<jkp_PersonAttendingRetreat>(this.attach_jkp_PersonAttendingRetreats), new Action<jkp_PersonAttendingRetreat>(this.detach_jkp_PersonAttendingRetreats));
			this._jkp_PersonAudios = new EntitySet<jkp_PersonAudio>(new Action<jkp_PersonAudio>(this.attach_jkp_PersonAudios), new Action<jkp_PersonAudio>(this.detach_jkp_PersonAudios));
			this._jkp_PersonBooks = new EntitySet<jkp_PersonBook>(new Action<jkp_PersonBook>(this.attach_jkp_PersonBooks), new Action<jkp_PersonBook>(this.detach_jkp_PersonBooks));
			this._jkp_PersonContributionRetreats = new EntitySet<jkp_PersonContributionRetreat>(new Action<jkp_PersonContributionRetreat>(this.attach_jkp_PersonContributionRetreats), new Action<jkp_PersonContributionRetreat>(this.detach_jkp_PersonContributionRetreats));
			this._jkp_PersonDiscussionGroups = new EntitySet<jkp_PersonDiscussionGroup>(new Action<jkp_PersonDiscussionGroup>(this.attach_jkp_PersonDiscussionGroups), new Action<jkp_PersonDiscussionGroup>(this.detach_jkp_PersonDiscussionGroups));
			this._jkp_PersonDocuments = new EntitySet<jkp_PersonDocument>(new Action<jkp_PersonDocument>(this.attach_jkp_PersonDocuments), new Action<jkp_PersonDocument>(this.detach_jkp_PersonDocuments));
			this._jkp_PersonGeneralQuestions = new EntitySet<jkp_PersonGeneralQuestion>(new Action<jkp_PersonGeneralQuestion>(this.attach_jkp_PersonGeneralQuestions), new Action<jkp_PersonGeneralQuestion>(this.detach_jkp_PersonGeneralQuestions));
			this._jkp_PersonImages = new EntitySet<jkp_PersonImage>(new Action<jkp_PersonImage>(this.attach_jkp_PersonImages), new Action<jkp_PersonImage>(this.detach_jkp_PersonImages));
			this._jkp_PersonMedicalQuestions = new EntitySet<jkp_PersonMedicalQuestion>(new Action<jkp_PersonMedicalQuestion>(this.attach_jkp_PersonMedicalQuestions), new Action<jkp_PersonMedicalQuestion>(this.detach_jkp_PersonMedicalQuestions));
			this._jkp_PersonReceivesTrainings = new EntitySet<jkp_PersonReceivesTraining>(new Action<jkp_PersonReceivesTraining>(this.attach_jkp_PersonReceivesTrainings), new Action<jkp_PersonReceivesTraining>(this.detach_jkp_PersonReceivesTrainings));
			this._jkp_PersonSanghas = new EntitySet<jkp_PersonSangha>(new Action<jkp_PersonSangha>(this.attach_jkp_PersonSanghas), new Action<jkp_PersonSangha>(this.detach_jkp_PersonSanghas));
			this._jkp_PersonTransmitsTrainings = new EntitySet<jkp_PersonTransmitsTraining>(new Action<jkp_PersonTransmitsTraining>(this.attach_jkp_PersonTransmitsTrainings), new Action<jkp_PersonTransmitsTraining>(this.detach_jkp_PersonTransmitsTrainings));
			this._jkp_PersonVideos = new EntitySet<jkp_PersonVideo>(new Action<jkp_PersonVideo>(this.attach_jkp_PersonVideos), new Action<jkp_PersonVideo>(this.detach_jkp_PersonVideos));
			this._jkp_Videos = new EntitySet<jkp_Video>(new Action<jkp_Video>(this.attach_jkp_Videos), new Action<jkp_Video>(this.detach_jkp_Videos));
			this._jkp_Person1 = default(EntityRef<jkp_Person>);
			this._jkp_Address = default(EntityRef<jkp_Address>);
			this._jkp_FamilyGroup = default(EntityRef<jkp_FamilyGroup>);
			this._jkp_OrdinationFamily = default(EntityRef<jkp_OrdinationFamily>);
			this._jkp_Sangha = default(EntityRef<jkp_Sangha>);
			OnCreated();
		}
		
		[Column(Storage="_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Per_ID
		{
			get
			{
				return this._Per_ID;
			}
			set
			{
				if ((this._Per_ID != value))
				{
					if (this._jkp_Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPer_IDChanging(value);
					this.SendPropertyChanging();
					this._Per_ID = value;
					this.SendPropertyChanged("Per_ID");
					this.OnPer_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Per_FirstName", DbType="VarChar(30)")]
		public string Per_FirstName
		{
			get
			{
				return this._Per_FirstName;
			}
			set
			{
				if ((this._Per_FirstName != value))
				{
					this.OnPer_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Per_FirstName = value;
					this.SendPropertyChanged("Per_FirstName");
					this.OnPer_FirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_Per_LastName", DbType="VarChar(30)")]
		public string Per_LastName
		{
			get
			{
				return this._Per_LastName;
			}
			set
			{
				if ((this._Per_LastName != value))
				{
					this.OnPer_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Per_LastName = value;
					this.SendPropertyChanged("Per_LastName");
					this.OnPer_LastNameChanged();
				}
			}
		}
		
		[Column(Storage="_Per_DharmaName", DbType="VarChar(50)")]
		public string Per_DharmaName
		{
			get
			{
				return this._Per_DharmaName;
			}
			set
			{
				if ((this._Per_DharmaName != value))
				{
					this.OnPer_DharmaNameChanging(value);
					this.SendPropertyChanging();
					this._Per_DharmaName = value;
					this.SendPropertyChanged("Per_DharmaName");
					this.OnPer_DharmaNameChanged();
				}
			}
		}
		
		[Column(Storage="_Per_LineageName", DbType="VarChar(50)")]
		public string Per_LineageName
		{
			get
			{
				return this._Per_LineageName;
			}
			set
			{
				if ((this._Per_LineageName != value))
				{
					this.OnPer_LineageNameChanging(value);
					this.SendPropertyChanging();
					this._Per_LineageName = value;
					this.SendPropertyChanged("Per_LineageName");
					this.OnPer_LineageNameChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Gender", DbType="VarChar(1)")]
		public System.Nullable<char> Per_Gender
		{
			get
			{
				return this._Per_Gender;
			}
			set
			{
				if ((this._Per_Gender != value))
				{
					this.OnPer_GenderChanging(value);
					this.SendPropertyChanging();
					this._Per_Gender = value;
					this.SendPropertyChanged("Per_Gender");
					this.OnPer_GenderChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Nationality", DbType="VarChar(20)")]
		public string Per_Nationality
		{
			get
			{
				return this._Per_Nationality;
			}
			set
			{
				if ((this._Per_Nationality != value))
				{
					this.OnPer_NationalityChanging(value);
					this.SendPropertyChanging();
					this._Per_Nationality = value;
					this.SendPropertyChanged("Per_Nationality");
					this.OnPer_NationalityChanged();
				}
			}
		}
		
		[Column(Storage="_Per_PrimaryLanguage", DbType="VarChar(15)")]
		public string Per_PrimaryLanguage
		{
			get
			{
				return this._Per_PrimaryLanguage;
			}
			set
			{
				if ((this._Per_PrimaryLanguage != value))
				{
					this.OnPer_PrimaryLanguageChanging(value);
					this.SendPropertyChanging();
					this._Per_PrimaryLanguage = value;
					this.SendPropertyChanged("Per_PrimaryLanguage");
					this.OnPer_PrimaryLanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Per_SecondaryLanguage", DbType="VarChar(15)")]
		public string Per_SecondaryLanguage
		{
			get
			{
				return this._Per_SecondaryLanguage;
			}
			set
			{
				if ((this._Per_SecondaryLanguage != value))
				{
					this.OnPer_SecondaryLanguageChanging(value);
					this.SendPropertyChanging();
					this._Per_SecondaryLanguage = value;
					this.SendPropertyChanged("Per_SecondaryLanguage");
					this.OnPer_SecondaryLanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Per_PlaceOfBirth", DbType="VarChar(20)")]
		public string Per_PlaceOfBirth
		{
			get
			{
				return this._Per_PlaceOfBirth;
			}
			set
			{
				if ((this._Per_PlaceOfBirth != value))
				{
					this.OnPer_PlaceOfBirthChanging(value);
					this.SendPropertyChanging();
					this._Per_PlaceOfBirth = value;
					this.SendPropertyChanged("Per_PlaceOfBirth");
					this.OnPer_PlaceOfBirthChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Birthdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Per_Birthdate
		{
			get
			{
				return this._Per_Birthdate;
			}
			set
			{
				if ((this._Per_Birthdate != value))
				{
					this.OnPer_BirthdateChanging(value);
					this.SendPropertyChanging();
					this._Per_Birthdate = value;
					this.SendPropertyChanged("Per_Birthdate");
					this.OnPer_BirthdateChanged();
				}
			}
		}
		
		[Column(Storage="_Per_DeathDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Per_DeathDate
		{
			get
			{
				return this._Per_DeathDate;
			}
			set
			{
				if ((this._Per_DeathDate != value))
				{
					this.OnPer_DeathDateChanging(value);
					this.SendPropertyChanging();
					this._Per_DeathDate = value;
					this.SendPropertyChanged("Per_DeathDate");
					this.OnPer_DeathDateChanged();
				}
			}
		}
		
		[Column(Storage="_Per_HomePhoneNumber", DbType="VarChar(30)")]
		public string Per_HomePhoneNumber
		{
			get
			{
				return this._Per_HomePhoneNumber;
			}
			set
			{
				if ((this._Per_HomePhoneNumber != value))
				{
					this.OnPer_HomePhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._Per_HomePhoneNumber = value;
					this.SendPropertyChanged("Per_HomePhoneNumber");
					this.OnPer_HomePhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Per_CellPhoneNumber", DbType="VarChar(30)")]
		public string Per_CellPhoneNumber
		{
			get
			{
				return this._Per_CellPhoneNumber;
			}
			set
			{
				if ((this._Per_CellPhoneNumber != value))
				{
					this.OnPer_CellPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._Per_CellPhoneNumber = value;
					this.SendPropertyChanged("Per_CellPhoneNumber");
					this.OnPer_CellPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Per_WorkPhoneNumber", DbType="VarChar(30)")]
		public string Per_WorkPhoneNumber
		{
			get
			{
				return this._Per_WorkPhoneNumber;
			}
			set
			{
				if ((this._Per_WorkPhoneNumber != value))
				{
					this.OnPer_WorkPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._Per_WorkPhoneNumber = value;
					this.SendPropertyChanged("Per_WorkPhoneNumber");
					this.OnPer_WorkPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Active", DbType="VarChar(1)")]
		public System.Nullable<char> Per_Active
		{
			get
			{
				return this._Per_Active;
			}
			set
			{
				if ((this._Per_Active != value))
				{
					this.OnPer_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Per_Active = value;
					this.SendPropertyChanged("Per_Active");
					this.OnPer_ActiveChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Fax", DbType="VarChar(30)")]
		public string Per_Fax
		{
			get
			{
				return this._Per_Fax;
			}
			set
			{
				if ((this._Per_Fax != value))
				{
					this.OnPer_FaxChanging(value);
					this.SendPropertyChanging();
					this._Per_Fax = value;
					this.SendPropertyChanged("Per_Fax");
					this.OnPer_FaxChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Email", DbType="VarChar(50)")]
		public string Per_Email
		{
			get
			{
				return this._Per_Email;
			}
			set
			{
				if ((this._Per_Email != value))
				{
					this.OnPer_EmailChanging(value);
					this.SendPropertyChanging();
					this._Per_Email = value;
					this.SendPropertyChanged("Per_Email");
					this.OnPer_EmailChanged();
				}
			}
		}
		
		[Column(Storage="_Per_SanghaRole", DbType="VarChar(20)")]
		public string Per_SanghaRole
		{
			get
			{
				return this._Per_SanghaRole;
			}
			set
			{
				if ((this._Per_SanghaRole != value))
				{
					this.OnPer_SanghaRoleChanging(value);
					this.SendPropertyChanging();
					this._Per_SanghaRole = value;
					this.SendPropertyChanged("Per_SanghaRole");
					this.OnPer_SanghaRoleChanged();
				}
			}
		}
		
		[Column(Storage="_Per_FGroup_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Per_FGroup_ID
		{
			get
			{
				return this._Per_FGroup_ID;
			}
			set
			{
				if ((this._Per_FGroup_ID != value))
				{
					if (this._jkp_FamilyGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPer_FGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Per_FGroup_ID = value;
					this.SendPropertyChanged("Per_FGroup_ID");
					this.OnPer_FGroup_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Per_OrdFamily_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Per_OrdFamily_ID
		{
			get
			{
				return this._Per_OrdFamily_ID;
			}
			set
			{
				if ((this._Per_OrdFamily_ID != value))
				{
					if (this._jkp_OrdinationFamily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPer_OrdFamily_IDChanging(value);
					this.SendPropertyChanging();
					this._Per_OrdFamily_ID = value;
					this.SendPropertyChanged("Per_OrdFamily_ID");
					this.OnPer_OrdFamily_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Per_San_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Per_San_ID
		{
			get
			{
				return this._Per_San_ID;
			}
			set
			{
				if ((this._Per_San_ID != value))
				{
					if (this._jkp_Sangha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPer_San_IDChanging(value);
					this.SendPropertyChanging();
					this._Per_San_ID = value;
					this.SendPropertyChanged("Per_San_ID");
					this.OnPer_San_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Rm_ID", DbType="VarChar(10)")]
		public string Per_Rm_ID
		{
			get
			{
				return this._Per_Rm_ID;
			}
			set
			{
				if ((this._Per_Rm_ID != value))
				{
					this.OnPer_Rm_IDChanging(value);
					this.SendPropertyChanging();
					this._Per_Rm_ID = value;
					this.SendPropertyChanged("Per_Rm_ID");
					this.OnPer_Rm_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Per_Add_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Per_Add_ID
		{
			get
			{
				return this._Per_Add_ID;
			}
			set
			{
				if ((this._Per_Add_ID != value))
				{
					if (this._jkp_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPer_Add_IDChanging(value);
					this.SendPropertyChanging();
					this._Per_Add_ID = value;
					this.SendPropertyChanged("Per_Add_ID");
					this.OnPer_Add_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Visa", Storage="_jkp_Visas", ThisKey="Per_ID", OtherKey="Visa_Per_ID")]
		public EntitySet<jkp_Visa> jkp_Visas
		{
			get
			{
				return this._jkp_Visas;
			}
			set
			{
				this._jkp_Visas.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="Per_ID", OtherKey="PersonId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Article", Storage="_jkp_Articles", ThisKey="Per_ID", OtherKey="Art_AuthorPersonId")]
		public EntitySet<jkp_Article> jkp_Articles
		{
			get
			{
				return this._jkp_Articles;
			}
			set
			{
				this._jkp_Articles.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Audio", Storage="_jkp_Audios", ThisKey="Per_ID", OtherKey="Aud_Presenter")]
		public EntitySet<jkp_Audio> jkp_Audios
		{
			get
			{
				return this._jkp_Audios;
			}
			set
			{
				this._jkp_Audios.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Book", Storage="_jkp_Books", ThisKey="Per_ID", OtherKey="Bk_Author")]
		public EntitySet<jkp_Book> jkp_Books
		{
			get
			{
				return this._jkp_Books;
			}
			set
			{
				this._jkp_Books.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Contribution", Storage="_jkp_Contributions", ThisKey="Per_ID", OtherKey="Cont_Off_Per_ID")]
		public EntitySet<jkp_Contribution> jkp_Contributions
		{
			get
			{
				return this._jkp_Contributions;
			}
			set
			{
				this._jkp_Contributions.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Contribution1", Storage="_jkp_Contributions1", ThisKey="Per_ID", OtherKey="Cont_Rec_Per_ID")]
		public EntitySet<jkp_Contribution> jkp_Contributions1
		{
			get
			{
				return this._jkp_Contributions1;
			}
			set
			{
				this._jkp_Contributions1.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Document", Storage="_jkp_Documents", ThisKey="Per_ID", OtherKey="Doc_Creator")]
		public EntitySet<jkp_Document> jkp_Documents
		{
			get
			{
				return this._jkp_Documents;
			}
			set
			{
				this._jkp_Documents.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_DriversLicense", Storage="_jkp_DriversLicenses", ThisKey="Per_ID", OtherKey="DrvLic_Per_ID")]
		public EntitySet<jkp_DriversLicense> jkp_DriversLicenses
		{
			get
			{
				return this._jkp_DriversLicenses;
			}
			set
			{
				this._jkp_DriversLicenses.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_MediaRole", Storage="_jkp_MediaRoles", ThisKey="Per_ID", OtherKey="PersonId")]
		public EntitySet<jkp_MediaRole> jkp_MediaRoles
		{
			get
			{
				return this._jkp_MediaRoles;
			}
			set
			{
				this._jkp_MediaRoles.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Passport", Storage="_jkp_Passports", ThisKey="Per_ID", OtherKey="Pass_Per_ID")]
		public EntitySet<jkp_Passport> jkp_Passports
		{
			get
			{
				return this._jkp_Passports;
			}
			set
			{
				this._jkp_Passports.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Person", Storage="_jkp_Person2", ThisKey="Per_ID", OtherKey="Per_ID", IsUnique=true, IsForeignKey=false)]
		public jkp_Person jkp_Person2
		{
			get
			{
				return this._jkp_Person2.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person2.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person2.Entity = null;
						previousValue.jkp_Person1 = null;
					}
					this._jkp_Person2.Entity = value;
					if ((value != null))
					{
						value.jkp_Person1 = this;
					}
					this.SendPropertyChanged("jkp_Person2");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonActivity", Storage="_jkp_PersonActivities", ThisKey="Per_ID", OtherKey="PAct_Per_ID")]
		public EntitySet<jkp_PersonActivity> jkp_PersonActivities
		{
			get
			{
				return this._jkp_PersonActivities;
			}
			set
			{
				this._jkp_PersonActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAssignmentActivity", Storage="_jkp_PersonAssignmentActivities", ThisKey="Per_ID", OtherKey="PAA_Per_ID")]
		public EntitySet<jkp_PersonAssignmentActivity> jkp_PersonAssignmentActivities
		{
			get
			{
				return this._jkp_PersonAssignmentActivities;
			}
			set
			{
				this._jkp_PersonAssignmentActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAssignmentRetreat", Storage="_jkp_PersonAssignmentRetreats", ThisKey="Per_ID", OtherKey="PAR_Per_ID")]
		public EntitySet<jkp_PersonAssignmentRetreat> jkp_PersonAssignmentRetreats
		{
			get
			{
				return this._jkp_PersonAssignmentRetreats;
			}
			set
			{
				this._jkp_PersonAssignmentRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAttendingRetreat", Storage="_jkp_PersonAttendingRetreats", ThisKey="Per_ID", OtherKey="PAR_PersonId")]
		public EntitySet<jkp_PersonAttendingRetreat> jkp_PersonAttendingRetreats
		{
			get
			{
				return this._jkp_PersonAttendingRetreats;
			}
			set
			{
				this._jkp_PersonAttendingRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAudio", Storage="_jkp_PersonAudios", ThisKey="Per_ID", OtherKey="PA_Per_ID")]
		public EntitySet<jkp_PersonAudio> jkp_PersonAudios
		{
			get
			{
				return this._jkp_PersonAudios;
			}
			set
			{
				this._jkp_PersonAudios.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonBook", Storage="_jkp_PersonBooks", ThisKey="Per_ID", OtherKey="PB_Per_ID")]
		public EntitySet<jkp_PersonBook> jkp_PersonBooks
		{
			get
			{
				return this._jkp_PersonBooks;
			}
			set
			{
				this._jkp_PersonBooks.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonContributionRetreat", Storage="_jkp_PersonContributionRetreats", ThisKey="Per_ID", OtherKey="PCR_Per_ID")]
		public EntitySet<jkp_PersonContributionRetreat> jkp_PersonContributionRetreats
		{
			get
			{
				return this._jkp_PersonContributionRetreats;
			}
			set
			{
				this._jkp_PersonContributionRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonDiscussionGroup", Storage="_jkp_PersonDiscussionGroups", ThisKey="Per_ID", OtherKey="PDG_Per_ID")]
		public EntitySet<jkp_PersonDiscussionGroup> jkp_PersonDiscussionGroups
		{
			get
			{
				return this._jkp_PersonDiscussionGroups;
			}
			set
			{
				this._jkp_PersonDiscussionGroups.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonDocument", Storage="_jkp_PersonDocuments", ThisKey="Per_ID", OtherKey="PD_Per_ID")]
		public EntitySet<jkp_PersonDocument> jkp_PersonDocuments
		{
			get
			{
				return this._jkp_PersonDocuments;
			}
			set
			{
				this._jkp_PersonDocuments.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonGeneralQuestion", Storage="_jkp_PersonGeneralQuestions", ThisKey="Per_ID", OtherKey="PGQ_Per_ID")]
		public EntitySet<jkp_PersonGeneralQuestion> jkp_PersonGeneralQuestions
		{
			get
			{
				return this._jkp_PersonGeneralQuestions;
			}
			set
			{
				this._jkp_PersonGeneralQuestions.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonImage", Storage="_jkp_PersonImages", ThisKey="Per_ID", OtherKey="PI_Per_ID")]
		public EntitySet<jkp_PersonImage> jkp_PersonImages
		{
			get
			{
				return this._jkp_PersonImages;
			}
			set
			{
				this._jkp_PersonImages.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonMedicalQuestion", Storage="_jkp_PersonMedicalQuestions", ThisKey="Per_ID", OtherKey="PMQ_Per_ID")]
		public EntitySet<jkp_PersonMedicalQuestion> jkp_PersonMedicalQuestions
		{
			get
			{
				return this._jkp_PersonMedicalQuestions;
			}
			set
			{
				this._jkp_PersonMedicalQuestions.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonReceivesTraining", Storage="_jkp_PersonReceivesTrainings", ThisKey="Per_ID", OtherKey="PRT_Per_ID")]
		public EntitySet<jkp_PersonReceivesTraining> jkp_PersonReceivesTrainings
		{
			get
			{
				return this._jkp_PersonReceivesTrainings;
			}
			set
			{
				this._jkp_PersonReceivesTrainings.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonSangha", Storage="_jkp_PersonSanghas", ThisKey="Per_ID", OtherKey="PS_Per_ID")]
		public EntitySet<jkp_PersonSangha> jkp_PersonSanghas
		{
			get
			{
				return this._jkp_PersonSanghas;
			}
			set
			{
				this._jkp_PersonSanghas.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonTransmitsTraining", Storage="_jkp_PersonTransmitsTrainings", ThisKey="Per_ID", OtherKey="PTT_Per_ID")]
		public EntitySet<jkp_PersonTransmitsTraining> jkp_PersonTransmitsTrainings
		{
			get
			{
				return this._jkp_PersonTransmitsTrainings;
			}
			set
			{
				this._jkp_PersonTransmitsTrainings.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonVideo", Storage="_jkp_PersonVideos", ThisKey="Per_ID", OtherKey="PV_Per_ID")]
		public EntitySet<jkp_PersonVideo> jkp_PersonVideos
		{
			get
			{
				return this._jkp_PersonVideos;
			}
			set
			{
				this._jkp_PersonVideos.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Video", Storage="_jkp_Videos", ThisKey="Per_ID", OtherKey="Vid_Presenter")]
		public EntitySet<jkp_Video> jkp_Videos
		{
			get
			{
				return this._jkp_Videos;
			}
			set
			{
				this._jkp_Videos.Assign(value);
			}
		}
		
		[Association(Name="jkp_Person_jkp_Person", Storage="_jkp_Person1", ThisKey="Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person1
		{
			get
			{
				return this._jkp_Person1.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person1.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person1.Entity = null;
						previousValue.jkp_Person2 = null;
					}
					this._jkp_Person1.Entity = value;
					if ((value != null))
					{
						value.jkp_Person2 = this;
						this._Per_ID = value.Per_ID;
					}
					else
					{
						this._Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person1");
				}
			}
		}
		
		[Association(Name="jkp_Address_jkp_Person", Storage="_jkp_Address", ThisKey="Per_Add_ID", OtherKey="Add_ID", IsForeignKey=true)]
		public jkp_Address jkp_Address
		{
			get
			{
				return this._jkp_Address.Entity;
			}
			set
			{
				jkp_Address previousValue = this._jkp_Address.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Address.Entity = null;
						previousValue.jkp_Persons.Remove(this);
					}
					this._jkp_Address.Entity = value;
					if ((value != null))
					{
						value.jkp_Persons.Add(this);
						this._Per_Add_ID = value.Add_ID;
					}
					else
					{
						this._Per_Add_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Address");
				}
			}
		}
		
		[Association(Name="jkp_FamilyGroup_jkp_Person", Storage="_jkp_FamilyGroup", ThisKey="Per_FGroup_ID", OtherKey="FGroup_ID", IsForeignKey=true)]
		public jkp_FamilyGroup jkp_FamilyGroup
		{
			get
			{
				return this._jkp_FamilyGroup.Entity;
			}
			set
			{
				jkp_FamilyGroup previousValue = this._jkp_FamilyGroup.Entity;
				if (((previousValue != value) 
							|| (this._jkp_FamilyGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_FamilyGroup.Entity = null;
						previousValue.jkp_Persons.Remove(this);
					}
					this._jkp_FamilyGroup.Entity = value;
					if ((value != null))
					{
						value.jkp_Persons.Add(this);
						this._Per_FGroup_ID = value.FGroup_ID;
					}
					else
					{
						this._Per_FGroup_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_FamilyGroup");
				}
			}
		}
		
		[Association(Name="jkp_OrdinationFamily_jkp_Person", Storage="_jkp_OrdinationFamily", ThisKey="Per_OrdFamily_ID", OtherKey="OrdFamily_ID", IsForeignKey=true)]
		public jkp_OrdinationFamily jkp_OrdinationFamily
		{
			get
			{
				return this._jkp_OrdinationFamily.Entity;
			}
			set
			{
				jkp_OrdinationFamily previousValue = this._jkp_OrdinationFamily.Entity;
				if (((previousValue != value) 
							|| (this._jkp_OrdinationFamily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_OrdinationFamily.Entity = null;
						previousValue.jkp_Persons.Remove(this);
					}
					this._jkp_OrdinationFamily.Entity = value;
					if ((value != null))
					{
						value.jkp_Persons.Add(this);
						this._Per_OrdFamily_ID = value.OrdFamily_ID;
					}
					else
					{
						this._Per_OrdFamily_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_OrdinationFamily");
				}
			}
		}
		
		[Association(Name="jkp_Sangha_jkp_Person", Storage="_jkp_Sangha", ThisKey="Per_San_ID", OtherKey="San_ID", IsForeignKey=true)]
		public jkp_Sangha jkp_Sangha
		{
			get
			{
				return this._jkp_Sangha.Entity;
			}
			set
			{
				jkp_Sangha previousValue = this._jkp_Sangha.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Sangha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Sangha.Entity = null;
						previousValue.jkp_Persons.Remove(this);
					}
					this._jkp_Sangha.Entity = value;
					if ((value != null))
					{
						value.jkp_Persons.Add(this);
						this._Per_San_ID = value.San_ID;
					}
					else
					{
						this._Per_San_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Sangha");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Visas(jkp_Visa entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Visas(jkp_Visa entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_Articles(jkp_Article entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Articles(jkp_Article entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_Audios(jkp_Audio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Audios(jkp_Audio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_Books(jkp_Book entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Books(jkp_Book entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_Contributions(jkp_Contribution entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Contributions(jkp_Contribution entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_Contributions1(jkp_Contribution entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person1 = this;
		}
		
		private void detach_jkp_Contributions1(jkp_Contribution entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person1 = null;
		}
		
		private void attach_jkp_Documents(jkp_Document entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Documents(jkp_Document entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_DriversLicenses(jkp_DriversLicense entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_DriversLicenses(jkp_DriversLicense entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_Passports(jkp_Passport entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Passports(jkp_Passport entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonActivities(jkp_PersonActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonActivities(jkp_PersonActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonAssignmentActivities(jkp_PersonAssignmentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonAssignmentActivities(jkp_PersonAssignmentActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonAssignmentRetreats(jkp_PersonAssignmentRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonAssignmentRetreats(jkp_PersonAssignmentRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonAudios(jkp_PersonAudio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonAudios(jkp_PersonAudio entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonBooks(jkp_PersonBook entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonBooks(jkp_PersonBook entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonContributionRetreats(jkp_PersonContributionRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonContributionRetreats(jkp_PersonContributionRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonDiscussionGroups(jkp_PersonDiscussionGroup entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonDiscussionGroups(jkp_PersonDiscussionGroup entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonDocuments(jkp_PersonDocument entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonDocuments(jkp_PersonDocument entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonGeneralQuestions(jkp_PersonGeneralQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonGeneralQuestions(jkp_PersonGeneralQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonImages(jkp_PersonImage entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonImages(jkp_PersonImage entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonMedicalQuestions(jkp_PersonMedicalQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonMedicalQuestions(jkp_PersonMedicalQuestion entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonReceivesTrainings(jkp_PersonReceivesTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonReceivesTrainings(jkp_PersonReceivesTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonSanghas(jkp_PersonSangha entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonSanghas(jkp_PersonSangha entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonTransmitsTrainings(jkp_PersonTransmitsTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonTransmitsTrainings(jkp_PersonTransmitsTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_PersonVideos(jkp_PersonVideo entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_PersonVideos(jkp_PersonVideo entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
		
		private void attach_jkp_Videos(jkp_Video entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = this;
		}
		
		private void detach_jkp_Videos(jkp_Video entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Person = null;
		}
	}
	
	[Table(Name="dbo.jkp_PersonActivity")]
	public partial class jkp_PersonActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PAct_ID;
		
		private System.Guid _PAct_Per_ID;
		
		private System.Guid _PAct_Act_ID;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAct_IDChanging(System.Guid value);
    partial void OnPAct_IDChanged();
    partial void OnPAct_Per_IDChanging(System.Guid value);
    partial void OnPAct_Per_IDChanged();
    partial void OnPAct_Act_IDChanging(System.Guid value);
    partial void OnPAct_Act_IDChanged();
    #endregion
		
		public jkp_PersonActivity()
		{
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PAct_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAct_ID
		{
			get
			{
				return this._PAct_ID;
			}
			set
			{
				if ((this._PAct_ID != value))
				{
					this.OnPAct_IDChanging(value);
					this.SendPropertyChanging();
					this._PAct_ID = value;
					this.SendPropertyChanged("PAct_ID");
					this.OnPAct_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAct_Per_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAct_Per_ID
		{
			get
			{
				return this._PAct_Per_ID;
			}
			set
			{
				if ((this._PAct_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAct_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PAct_Per_ID = value;
					this.SendPropertyChanged("PAct_Per_ID");
					this.OnPAct_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAct_Act_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAct_Act_ID
		{
			get
			{
				return this._PAct_Act_ID;
			}
			set
			{
				if ((this._PAct_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAct_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._PAct_Act_ID = value;
					this.SendPropertyChanged("PAct_Act_ID");
					this.OnPAct_Act_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_PersonActivity", Storage="_jkp_Activity", ThisKey="PAct_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_PersonActivities.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonActivities.Add(this);
						this._PAct_Act_ID = value.Act_ID;
					}
					else
					{
						this._PAct_Act_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonActivity", Storage="_jkp_Person", ThisKey="PAct_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonActivities.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonActivities.Add(this);
						this._PAct_Per_ID = value.Per_ID;
					}
					else
					{
						this._PAct_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonAssignmentActivity")]
	public partial class jkp_PersonAssignmentActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PAA_Per_ID;
		
		private System.Guid _PAA_Assn_ID;
		
		private System.Guid _PAA_Act_ID;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
		private EntityRef<jkp_Assignment> _jkp_Assignment;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAA_Per_IDChanging(System.Guid value);
    partial void OnPAA_Per_IDChanged();
    partial void OnPAA_Assn_IDChanging(System.Guid value);
    partial void OnPAA_Assn_IDChanged();
    partial void OnPAA_Act_IDChanging(System.Guid value);
    partial void OnPAA_Act_IDChanged();
    #endregion
		
		public jkp_PersonAssignmentActivity()
		{
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			this._jkp_Assignment = default(EntityRef<jkp_Assignment>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PAA_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAA_Per_ID
		{
			get
			{
				return this._PAA_Per_ID;
			}
			set
			{
				if ((this._PAA_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAA_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PAA_Per_ID = value;
					this.SendPropertyChanged("PAA_Per_ID");
					this.OnPAA_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAA_Assn_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAA_Assn_ID
		{
			get
			{
				return this._PAA_Assn_ID;
			}
			set
			{
				if ((this._PAA_Assn_ID != value))
				{
					if (this._jkp_Assignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAA_Assn_IDChanging(value);
					this.SendPropertyChanging();
					this._PAA_Assn_ID = value;
					this.SendPropertyChanged("PAA_Assn_ID");
					this.OnPAA_Assn_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAA_Act_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAA_Act_ID
		{
			get
			{
				return this._PAA_Act_ID;
			}
			set
			{
				if ((this._PAA_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAA_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._PAA_Act_ID = value;
					this.SendPropertyChanged("PAA_Act_ID");
					this.OnPAA_Act_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_PersonAssignmentActivity", Storage="_jkp_Activity", ThisKey="PAA_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_PersonAssignmentActivities.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAssignmentActivities.Add(this);
						this._PAA_Act_ID = value.Act_ID;
					}
					else
					{
						this._PAA_Act_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		[Association(Name="jkp_Assignment_jkp_PersonAssignmentActivity", Storage="_jkp_Assignment", ThisKey="PAA_Assn_ID", OtherKey="Assn_ID", IsForeignKey=true)]
		public jkp_Assignment jkp_Assignment
		{
			get
			{
				return this._jkp_Assignment.Entity;
			}
			set
			{
				jkp_Assignment previousValue = this._jkp_Assignment.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Assignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Assignment.Entity = null;
						previousValue.jkp_PersonAssignmentActivities.Remove(this);
					}
					this._jkp_Assignment.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAssignmentActivities.Add(this);
						this._PAA_Assn_ID = value.Assn_ID;
					}
					else
					{
						this._PAA_Assn_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Assignment");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAssignmentActivity", Storage="_jkp_Person", ThisKey="PAA_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonAssignmentActivities.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAssignmentActivities.Add(this);
						this._PAA_Per_ID = value.Per_ID;
					}
					else
					{
						this._PAA_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonAssignmentRetreat")]
	public partial class jkp_PersonAssignmentRetreat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PAR_ID;
		
		private System.Guid _PAR_Per_ID;
		
		private System.Guid _PAR_Assn_ID;
		
		private System.Guid _PAR_Ret_ID;
		
		private EntityRef<jkp_Assignment> _jkp_Assignment;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Retreat> _jkp_Retreat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAR_IDChanging(System.Guid value);
    partial void OnPAR_IDChanged();
    partial void OnPAR_Per_IDChanging(System.Guid value);
    partial void OnPAR_Per_IDChanged();
    partial void OnPAR_Assn_IDChanging(System.Guid value);
    partial void OnPAR_Assn_IDChanged();
    partial void OnPAR_Ret_IDChanging(System.Guid value);
    partial void OnPAR_Ret_IDChanged();
    #endregion
		
		public jkp_PersonAssignmentRetreat()
		{
			this._jkp_Assignment = default(EntityRef<jkp_Assignment>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Retreat = default(EntityRef<jkp_Retreat>);
			OnCreated();
		}
		
		[Column(Storage="_PAR_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAR_ID
		{
			get
			{
				return this._PAR_ID;
			}
			set
			{
				if ((this._PAR_ID != value))
				{
					this.OnPAR_IDChanging(value);
					this.SendPropertyChanging();
					this._PAR_ID = value;
					this.SendPropertyChanged("PAR_ID");
					this.OnPAR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_Per_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_Per_ID
		{
			get
			{
				return this._PAR_Per_ID;
			}
			set
			{
				if ((this._PAR_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PAR_Per_ID = value;
					this.SendPropertyChanged("PAR_Per_ID");
					this.OnPAR_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_Assn_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_Assn_ID
		{
			get
			{
				return this._PAR_Assn_ID;
			}
			set
			{
				if ((this._PAR_Assn_ID != value))
				{
					if (this._jkp_Assignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_Assn_IDChanging(value);
					this.SendPropertyChanging();
					this._PAR_Assn_ID = value;
					this.SendPropertyChanged("PAR_Assn_ID");
					this.OnPAR_Assn_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_Ret_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_Ret_ID
		{
			get
			{
				return this._PAR_Ret_ID;
			}
			set
			{
				if ((this._PAR_Ret_ID != value))
				{
					if (this._jkp_Retreat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_Ret_IDChanging(value);
					this.SendPropertyChanging();
					this._PAR_Ret_ID = value;
					this.SendPropertyChanged("PAR_Ret_ID");
					this.OnPAR_Ret_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Assignment_jkp_PersonAssignmentRetreat", Storage="_jkp_Assignment", ThisKey="PAR_Assn_ID", OtherKey="Assn_ID", IsForeignKey=true)]
		public jkp_Assignment jkp_Assignment
		{
			get
			{
				return this._jkp_Assignment.Entity;
			}
			set
			{
				jkp_Assignment previousValue = this._jkp_Assignment.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Assignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Assignment.Entity = null;
						previousValue.jkp_PersonAssignmentRetreats.Remove(this);
					}
					this._jkp_Assignment.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAssignmentRetreats.Add(this);
						this._PAR_Assn_ID = value.Assn_ID;
					}
					else
					{
						this._PAR_Assn_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Assignment");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAssignmentRetreat", Storage="_jkp_Person", ThisKey="PAR_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonAssignmentRetreats.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAssignmentRetreats.Add(this);
						this._PAR_Per_ID = value.Per_ID;
					}
					else
					{
						this._PAR_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_PersonAssignmentRetreat", Storage="_jkp_Retreat", ThisKey="PAR_Ret_ID", OtherKey="Ret_ID", IsForeignKey=true)]
		public jkp_Retreat jkp_Retreat
		{
			get
			{
				return this._jkp_Retreat.Entity;
			}
			set
			{
				jkp_Retreat previousValue = this._jkp_Retreat.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Retreat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Retreat.Entity = null;
						previousValue.jkp_PersonAssignmentRetreats.Remove(this);
					}
					this._jkp_Retreat.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAssignmentRetreats.Add(this);
						this._PAR_Ret_ID = value.Ret_ID;
					}
					else
					{
						this._PAR_Ret_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Retreat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonAttendingRetreat")]
	public partial class jkp_PersonAttendingRetreat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PAR_ID;
		
		private System.Guid _PAR_RetId;
		
		private System.Guid _PAR_PersonId;
		
		private System.Nullable<System.Guid> _PAR_RoomId;
		
		private System.Guid _PAR_ContributionId;
		
		private System.Nullable<System.Guid> _PAR_RoomTypeId;
		
		private System.DateTime _PAR_ArrivalTime;
		
		private System.DateTime _PAR_DepartureTime;
		
		private decimal _PAR_InititalCostOfSpotAtSignup;
		
		private EntityRef<jkp_Contribution> _jkp_Contribution;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Retreat> _jkp_Retreat;
		
		private EntityRef<jkp_Room> _jkp_Room;
		
		private EntityRef<jkp_RoomType> _jkp_RoomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAR_IDChanging(System.Guid value);
    partial void OnPAR_IDChanged();
    partial void OnPAR_RetIdChanging(System.Guid value);
    partial void OnPAR_RetIdChanged();
    partial void OnPAR_PersonIdChanging(System.Guid value);
    partial void OnPAR_PersonIdChanged();
    partial void OnPAR_RoomIdChanging(System.Nullable<System.Guid> value);
    partial void OnPAR_RoomIdChanged();
    partial void OnPAR_ContributionIdChanging(System.Guid value);
    partial void OnPAR_ContributionIdChanged();
    partial void OnPAR_RoomTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnPAR_RoomTypeIdChanged();
    partial void OnPAR_ArrivalTimeChanging(System.DateTime value);
    partial void OnPAR_ArrivalTimeChanged();
    partial void OnPAR_DepartureTimeChanging(System.DateTime value);
    partial void OnPAR_DepartureTimeChanged();
    partial void OnPAR_InititalCostOfSpotAtSignupChanging(decimal value);
    partial void OnPAR_InititalCostOfSpotAtSignupChanged();
    #endregion
		
		public jkp_PersonAttendingRetreat()
		{
			this._jkp_Contribution = default(EntityRef<jkp_Contribution>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Retreat = default(EntityRef<jkp_Retreat>);
			this._jkp_Room = default(EntityRef<jkp_Room>);
			this._jkp_RoomType = default(EntityRef<jkp_RoomType>);
			OnCreated();
		}
		
		[Column(Storage="_PAR_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PAR_ID
		{
			get
			{
				return this._PAR_ID;
			}
			set
			{
				if ((this._PAR_ID != value))
				{
					this.OnPAR_IDChanging(value);
					this.SendPropertyChanging();
					this._PAR_ID = value;
					this.SendPropertyChanged("PAR_ID");
					this.OnPAR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_RetId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_RetId
		{
			get
			{
				return this._PAR_RetId;
			}
			set
			{
				if ((this._PAR_RetId != value))
				{
					if (this._jkp_Retreat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_RetIdChanging(value);
					this.SendPropertyChanging();
					this._PAR_RetId = value;
					this.SendPropertyChanged("PAR_RetId");
					this.OnPAR_RetIdChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_PersonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_PersonId
		{
			get
			{
				return this._PAR_PersonId;
			}
			set
			{
				if ((this._PAR_PersonId != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_PersonIdChanging(value);
					this.SendPropertyChanging();
					this._PAR_PersonId = value;
					this.SendPropertyChanged("PAR_PersonId");
					this.OnPAR_PersonIdChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_RoomId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PAR_RoomId
		{
			get
			{
				return this._PAR_RoomId;
			}
			set
			{
				if ((this._PAR_RoomId != value))
				{
					if (this._jkp_Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_RoomIdChanging(value);
					this.SendPropertyChanging();
					this._PAR_RoomId = value;
					this.SendPropertyChanged("PAR_RoomId");
					this.OnPAR_RoomIdChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_ContributionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PAR_ContributionId
		{
			get
			{
				return this._PAR_ContributionId;
			}
			set
			{
				if ((this._PAR_ContributionId != value))
				{
					if (this._jkp_Contribution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_ContributionIdChanging(value);
					this.SendPropertyChanging();
					this._PAR_ContributionId = value;
					this.SendPropertyChanged("PAR_ContributionId");
					this.OnPAR_ContributionIdChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_RoomTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PAR_RoomTypeId
		{
			get
			{
				return this._PAR_RoomTypeId;
			}
			set
			{
				if ((this._PAR_RoomTypeId != value))
				{
					if (this._jkp_RoomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAR_RoomTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PAR_RoomTypeId = value;
					this.SendPropertyChanged("PAR_RoomTypeId");
					this.OnPAR_RoomTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_ArrivalTime", DbType="DateTime NOT NULL")]
		public System.DateTime PAR_ArrivalTime
		{
			get
			{
				return this._PAR_ArrivalTime;
			}
			set
			{
				if ((this._PAR_ArrivalTime != value))
				{
					this.OnPAR_ArrivalTimeChanging(value);
					this.SendPropertyChanging();
					this._PAR_ArrivalTime = value;
					this.SendPropertyChanged("PAR_ArrivalTime");
					this.OnPAR_ArrivalTimeChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_DepartureTime", DbType="DateTime NOT NULL")]
		public System.DateTime PAR_DepartureTime
		{
			get
			{
				return this._PAR_DepartureTime;
			}
			set
			{
				if ((this._PAR_DepartureTime != value))
				{
					this.OnPAR_DepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._PAR_DepartureTime = value;
					this.SendPropertyChanged("PAR_DepartureTime");
					this.OnPAR_DepartureTimeChanged();
				}
			}
		}
		
		[Column(Storage="_PAR_InititalCostOfSpotAtSignup", DbType="Decimal(18,2) NOT NULL")]
		public decimal PAR_InititalCostOfSpotAtSignup
		{
			get
			{
				return this._PAR_InititalCostOfSpotAtSignup;
			}
			set
			{
				if ((this._PAR_InititalCostOfSpotAtSignup != value))
				{
					this.OnPAR_InititalCostOfSpotAtSignupChanging(value);
					this.SendPropertyChanging();
					this._PAR_InititalCostOfSpotAtSignup = value;
					this.SendPropertyChanged("PAR_InititalCostOfSpotAtSignup");
					this.OnPAR_InititalCostOfSpotAtSignupChanged();
				}
			}
		}
		
		[Association(Name="jkp_Contribution_jkp_PersonAttendingRetreat", Storage="_jkp_Contribution", ThisKey="PAR_ContributionId", OtherKey="Cont_ID", IsForeignKey=true)]
		public jkp_Contribution jkp_Contribution
		{
			get
			{
				return this._jkp_Contribution.Entity;
			}
			set
			{
				jkp_Contribution previousValue = this._jkp_Contribution.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Contribution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Contribution.Entity = null;
						previousValue.jkp_PersonAttendingRetreats.Remove(this);
					}
					this._jkp_Contribution.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAttendingRetreats.Add(this);
						this._PAR_ContributionId = value.Cont_ID;
					}
					else
					{
						this._PAR_ContributionId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Contribution");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAttendingRetreat", Storage="_jkp_Person", ThisKey="PAR_PersonId", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonAttendingRetreats.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAttendingRetreats.Add(this);
						this._PAR_PersonId = value.Per_ID;
					}
					else
					{
						this._PAR_PersonId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_PersonAttendingRetreat", Storage="_jkp_Retreat", ThisKey="PAR_RetId", OtherKey="Ret_ID", IsForeignKey=true)]
		public jkp_Retreat jkp_Retreat
		{
			get
			{
				return this._jkp_Retreat.Entity;
			}
			set
			{
				jkp_Retreat previousValue = this._jkp_Retreat.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Retreat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Retreat.Entity = null;
						previousValue.jkp_PersonAttendingRetreats.Remove(this);
					}
					this._jkp_Retreat.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAttendingRetreats.Add(this);
						this._PAR_RetId = value.Ret_ID;
					}
					else
					{
						this._PAR_RetId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Retreat");
				}
			}
		}
		
		[Association(Name="jkp_Room_jkp_PersonAttendingRetreat", Storage="_jkp_Room", ThisKey="PAR_RoomId", OtherKey="Rm_ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public jkp_Room jkp_Room
		{
			get
			{
				return this._jkp_Room.Entity;
			}
			set
			{
				jkp_Room previousValue = this._jkp_Room.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Room.Entity = null;
						previousValue.jkp_PersonAttendingRetreats.Remove(this);
					}
					this._jkp_Room.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAttendingRetreats.Add(this);
						this._PAR_RoomId = value.Rm_ID;
					}
					else
					{
						this._PAR_RoomId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Room");
				}
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_PersonAttendingRetreat", Storage="_jkp_RoomType", ThisKey="PAR_RoomTypeId", OtherKey="RmType_ID", IsForeignKey=true)]
		public jkp_RoomType jkp_RoomType
		{
			get
			{
				return this._jkp_RoomType.Entity;
			}
			set
			{
				jkp_RoomType previousValue = this._jkp_RoomType.Entity;
				if (((previousValue != value) 
							|| (this._jkp_RoomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_RoomType.Entity = null;
						previousValue.jkp_PersonAttendingRetreats.Remove(this);
					}
					this._jkp_RoomType.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAttendingRetreats.Add(this);
						this._PAR_RoomTypeId = value.RmType_ID;
					}
					else
					{
						this._PAR_RoomTypeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_RoomType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonAudio")]
	public partial class jkp_PersonAudio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PA_Per_ID;
		
		private System.Guid _PA_Aud_ID;
		
		private string _PA_Aud_Role;
		
		private EntityRef<jkp_Audio> _jkp_Audio;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPA_Per_IDChanging(System.Guid value);
    partial void OnPA_Per_IDChanged();
    partial void OnPA_Aud_IDChanging(System.Guid value);
    partial void OnPA_Aud_IDChanged();
    partial void OnPA_Aud_RoleChanging(string value);
    partial void OnPA_Aud_RoleChanged();
    #endregion
		
		public jkp_PersonAudio()
		{
			this._jkp_Audio = default(EntityRef<jkp_Audio>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PA_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PA_Per_ID
		{
			get
			{
				return this._PA_Per_ID;
			}
			set
			{
				if ((this._PA_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPA_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PA_Per_ID = value;
					this.SendPropertyChanged("PA_Per_ID");
					this.OnPA_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PA_Aud_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PA_Aud_ID
		{
			get
			{
				return this._PA_Aud_ID;
			}
			set
			{
				if ((this._PA_Aud_ID != value))
				{
					if (this._jkp_Audio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPA_Aud_IDChanging(value);
					this.SendPropertyChanging();
					this._PA_Aud_ID = value;
					this.SendPropertyChanged("PA_Aud_ID");
					this.OnPA_Aud_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PA_Aud_Role", DbType="VarChar(30)")]
		public string PA_Aud_Role
		{
			get
			{
				return this._PA_Aud_Role;
			}
			set
			{
				if ((this._PA_Aud_Role != value))
				{
					this.OnPA_Aud_RoleChanging(value);
					this.SendPropertyChanging();
					this._PA_Aud_Role = value;
					this.SendPropertyChanged("PA_Aud_Role");
					this.OnPA_Aud_RoleChanged();
				}
			}
		}
		
		[Association(Name="jkp_Audio_jkp_PersonAudio", Storage="_jkp_Audio", ThisKey="PA_Aud_ID", OtherKey="Aud_ID", IsForeignKey=true)]
		public jkp_Audio jkp_Audio
		{
			get
			{
				return this._jkp_Audio.Entity;
			}
			set
			{
				jkp_Audio previousValue = this._jkp_Audio.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Audio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Audio.Entity = null;
						previousValue.jkp_PersonAudios.Remove(this);
					}
					this._jkp_Audio.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAudios.Add(this);
						this._PA_Aud_ID = value.Aud_ID;
					}
					else
					{
						this._PA_Aud_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Audio");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonAudio", Storage="_jkp_Person", ThisKey="PA_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonAudios.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonAudios.Add(this);
						this._PA_Per_ID = value.Per_ID;
					}
					else
					{
						this._PA_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonBook")]
	public partial class jkp_PersonBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PB_Per_ID;
		
		private System.Guid _PB_Bk_ID;
		
		private string _PA_Bk_Role;
		
		private EntityRef<jkp_Book> _jkp_Book;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPB_Per_IDChanging(System.Guid value);
    partial void OnPB_Per_IDChanged();
    partial void OnPB_Bk_IDChanging(System.Guid value);
    partial void OnPB_Bk_IDChanged();
    partial void OnPA_Bk_RoleChanging(string value);
    partial void OnPA_Bk_RoleChanged();
    #endregion
		
		public jkp_PersonBook()
		{
			this._jkp_Book = default(EntityRef<jkp_Book>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PB_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PB_Per_ID
		{
			get
			{
				return this._PB_Per_ID;
			}
			set
			{
				if ((this._PB_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPB_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PB_Per_ID = value;
					this.SendPropertyChanged("PB_Per_ID");
					this.OnPB_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PB_Bk_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PB_Bk_ID
		{
			get
			{
				return this._PB_Bk_ID;
			}
			set
			{
				if ((this._PB_Bk_ID != value))
				{
					if (this._jkp_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPB_Bk_IDChanging(value);
					this.SendPropertyChanging();
					this._PB_Bk_ID = value;
					this.SendPropertyChanged("PB_Bk_ID");
					this.OnPB_Bk_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PA_Bk_Role", DbType="VarChar(30)")]
		public string PA_Bk_Role
		{
			get
			{
				return this._PA_Bk_Role;
			}
			set
			{
				if ((this._PA_Bk_Role != value))
				{
					this.OnPA_Bk_RoleChanging(value);
					this.SendPropertyChanging();
					this._PA_Bk_Role = value;
					this.SendPropertyChanged("PA_Bk_Role");
					this.OnPA_Bk_RoleChanged();
				}
			}
		}
		
		[Association(Name="jkp_Book_jkp_PersonBook", Storage="_jkp_Book", ThisKey="PB_Bk_ID", OtherKey="Bk_ID", IsForeignKey=true)]
		public jkp_Book jkp_Book
		{
			get
			{
				return this._jkp_Book.Entity;
			}
			set
			{
				jkp_Book previousValue = this._jkp_Book.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Book.Entity = null;
						previousValue.jkp_PersonBooks.Remove(this);
					}
					this._jkp_Book.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonBooks.Add(this);
						this._PB_Bk_ID = value.Bk_ID;
					}
					else
					{
						this._PB_Bk_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Book");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonBook", Storage="_jkp_Person", ThisKey="PB_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonBooks.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonBooks.Add(this);
						this._PB_Per_ID = value.Per_ID;
					}
					else
					{
						this._PB_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonContributionRetreat")]
	public partial class jkp_PersonContributionRetreat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PCR_Per_ID;
		
		private System.Guid _PCR_Ret_ID;
		
		private System.Guid _PCR_Cont_ID;
		
		private EntityRef<jkp_Contribution> _jkp_Contribution;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Retreat> _jkp_Retreat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPCR_Per_IDChanging(System.Guid value);
    partial void OnPCR_Per_IDChanged();
    partial void OnPCR_Ret_IDChanging(System.Guid value);
    partial void OnPCR_Ret_IDChanged();
    partial void OnPCR_Cont_IDChanging(System.Guid value);
    partial void OnPCR_Cont_IDChanged();
    #endregion
		
		public jkp_PersonContributionRetreat()
		{
			this._jkp_Contribution = default(EntityRef<jkp_Contribution>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Retreat = default(EntityRef<jkp_Retreat>);
			OnCreated();
		}
		
		[Column(Storage="_PCR_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PCR_Per_ID
		{
			get
			{
				return this._PCR_Per_ID;
			}
			set
			{
				if ((this._PCR_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCR_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PCR_Per_ID = value;
					this.SendPropertyChanged("PCR_Per_ID");
					this.OnPCR_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PCR_Ret_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PCR_Ret_ID
		{
			get
			{
				return this._PCR_Ret_ID;
			}
			set
			{
				if ((this._PCR_Ret_ID != value))
				{
					if (this._jkp_Retreat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCR_Ret_IDChanging(value);
					this.SendPropertyChanging();
					this._PCR_Ret_ID = value;
					this.SendPropertyChanged("PCR_Ret_ID");
					this.OnPCR_Ret_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PCR_Cont_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PCR_Cont_ID
		{
			get
			{
				return this._PCR_Cont_ID;
			}
			set
			{
				if ((this._PCR_Cont_ID != value))
				{
					if (this._jkp_Contribution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCR_Cont_IDChanging(value);
					this.SendPropertyChanging();
					this._PCR_Cont_ID = value;
					this.SendPropertyChanged("PCR_Cont_ID");
					this.OnPCR_Cont_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Contribution_jkp_PersonContributionRetreat", Storage="_jkp_Contribution", ThisKey="PCR_Cont_ID", OtherKey="Cont_ID", IsForeignKey=true)]
		public jkp_Contribution jkp_Contribution
		{
			get
			{
				return this._jkp_Contribution.Entity;
			}
			set
			{
				jkp_Contribution previousValue = this._jkp_Contribution.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Contribution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Contribution.Entity = null;
						previousValue.jkp_PersonContributionRetreats.Remove(this);
					}
					this._jkp_Contribution.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonContributionRetreats.Add(this);
						this._PCR_Cont_ID = value.Cont_ID;
					}
					else
					{
						this._PCR_Cont_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Contribution");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonContributionRetreat", Storage="_jkp_Person", ThisKey="PCR_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonContributionRetreats.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonContributionRetreats.Add(this);
						this._PCR_Per_ID = value.Per_ID;
					}
					else
					{
						this._PCR_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_PersonContributionRetreat", Storage="_jkp_Retreat", ThisKey="PCR_Ret_ID", OtherKey="Ret_ID", IsForeignKey=true)]
		public jkp_Retreat jkp_Retreat
		{
			get
			{
				return this._jkp_Retreat.Entity;
			}
			set
			{
				jkp_Retreat previousValue = this._jkp_Retreat.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Retreat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Retreat.Entity = null;
						previousValue.jkp_PersonContributionRetreats.Remove(this);
					}
					this._jkp_Retreat.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonContributionRetreats.Add(this);
						this._PCR_Ret_ID = value.Ret_ID;
					}
					else
					{
						this._PCR_Ret_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Retreat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonDiscussionGroup")]
	public partial class jkp_PersonDiscussionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PDG_ID;
		
		private System.Guid _PDG_Per_ID;
		
		private System.Guid _PDG_DGroup_ID;
		
		private EntityRef<jkp_DiscussionGroup> _jkp_DiscussionGroup;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPDG_IDChanging(System.Guid value);
    partial void OnPDG_IDChanged();
    partial void OnPDG_Per_IDChanging(System.Guid value);
    partial void OnPDG_Per_IDChanged();
    partial void OnPDG_DGroup_IDChanging(System.Guid value);
    partial void OnPDG_DGroup_IDChanged();
    #endregion
		
		public jkp_PersonDiscussionGroup()
		{
			this._jkp_DiscussionGroup = default(EntityRef<jkp_DiscussionGroup>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PDG_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PDG_ID
		{
			get
			{
				return this._PDG_ID;
			}
			set
			{
				if ((this._PDG_ID != value))
				{
					this.OnPDG_IDChanging(value);
					this.SendPropertyChanging();
					this._PDG_ID = value;
					this.SendPropertyChanged("PDG_ID");
					this.OnPDG_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PDG_Per_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PDG_Per_ID
		{
			get
			{
				return this._PDG_Per_ID;
			}
			set
			{
				if ((this._PDG_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPDG_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PDG_Per_ID = value;
					this.SendPropertyChanged("PDG_Per_ID");
					this.OnPDG_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PDG_DGroup_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PDG_DGroup_ID
		{
			get
			{
				return this._PDG_DGroup_ID;
			}
			set
			{
				if ((this._PDG_DGroup_ID != value))
				{
					if (this._jkp_DiscussionGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPDG_DGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._PDG_DGroup_ID = value;
					this.SendPropertyChanged("PDG_DGroup_ID");
					this.OnPDG_DGroup_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_DiscussionGroup_jkp_PersonDiscussionGroup", Storage="_jkp_DiscussionGroup", ThisKey="PDG_DGroup_ID", OtherKey="DGroup_ID", IsForeignKey=true)]
		public jkp_DiscussionGroup jkp_DiscussionGroup
		{
			get
			{
				return this._jkp_DiscussionGroup.Entity;
			}
			set
			{
				jkp_DiscussionGroup previousValue = this._jkp_DiscussionGroup.Entity;
				if (((previousValue != value) 
							|| (this._jkp_DiscussionGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_DiscussionGroup.Entity = null;
						previousValue.jkp_PersonDiscussionGroups.Remove(this);
					}
					this._jkp_DiscussionGroup.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonDiscussionGroups.Add(this);
						this._PDG_DGroup_ID = value.DGroup_ID;
					}
					else
					{
						this._PDG_DGroup_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_DiscussionGroup");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonDiscussionGroup", Storage="_jkp_Person", ThisKey="PDG_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonDiscussionGroups.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonDiscussionGroups.Add(this);
						this._PDG_Per_ID = value.Per_ID;
					}
					else
					{
						this._PDG_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonDocument")]
	public partial class jkp_PersonDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PD_Per_ID;
		
		private System.Guid _PD_Doc_ID;
		
		private string _PA_Doc_Role;
		
		private EntityRef<jkp_Document> _jkp_Document;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPD_Per_IDChanging(System.Guid value);
    partial void OnPD_Per_IDChanged();
    partial void OnPD_Doc_IDChanging(System.Guid value);
    partial void OnPD_Doc_IDChanged();
    partial void OnPA_Doc_RoleChanging(string value);
    partial void OnPA_Doc_RoleChanged();
    #endregion
		
		public jkp_PersonDocument()
		{
			this._jkp_Document = default(EntityRef<jkp_Document>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PD_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PD_Per_ID
		{
			get
			{
				return this._PD_Per_ID;
			}
			set
			{
				if ((this._PD_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPD_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PD_Per_ID = value;
					this.SendPropertyChanged("PD_Per_ID");
					this.OnPD_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PD_Doc_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PD_Doc_ID
		{
			get
			{
				return this._PD_Doc_ID;
			}
			set
			{
				if ((this._PD_Doc_ID != value))
				{
					if (this._jkp_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPD_Doc_IDChanging(value);
					this.SendPropertyChanging();
					this._PD_Doc_ID = value;
					this.SendPropertyChanged("PD_Doc_ID");
					this.OnPD_Doc_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PA_Doc_Role", DbType="VarChar(30)")]
		public string PA_Doc_Role
		{
			get
			{
				return this._PA_Doc_Role;
			}
			set
			{
				if ((this._PA_Doc_Role != value))
				{
					this.OnPA_Doc_RoleChanging(value);
					this.SendPropertyChanging();
					this._PA_Doc_Role = value;
					this.SendPropertyChanged("PA_Doc_Role");
					this.OnPA_Doc_RoleChanged();
				}
			}
		}
		
		[Association(Name="jkp_Document_jkp_PersonDocument", Storage="_jkp_Document", ThisKey="PD_Doc_ID", OtherKey="Doc_ID", IsForeignKey=true)]
		public jkp_Document jkp_Document
		{
			get
			{
				return this._jkp_Document.Entity;
			}
			set
			{
				jkp_Document previousValue = this._jkp_Document.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Document.Entity = null;
						previousValue.jkp_PersonDocuments.Remove(this);
					}
					this._jkp_Document.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonDocuments.Add(this);
						this._PD_Doc_ID = value.Doc_ID;
					}
					else
					{
						this._PD_Doc_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Document");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonDocument", Storage="_jkp_Person", ThisKey="PD_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonDocuments.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonDocuments.Add(this);
						this._PD_Per_ID = value.Per_ID;
					}
					else
					{
						this._PD_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonGeneralQuestions")]
	public partial class jkp_PersonGeneralQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PGQ_Per_ID;
		
		private System.Guid _PGQ_GenQues_ID;
		
		private string _PGQ_GeneralAnswer;
		
		private EntityRef<jkp_GeneralQuestion> _jkp_GeneralQuestion;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPGQ_Per_IDChanging(System.Guid value);
    partial void OnPGQ_Per_IDChanged();
    partial void OnPGQ_GenQues_IDChanging(System.Guid value);
    partial void OnPGQ_GenQues_IDChanged();
    partial void OnPGQ_GeneralAnswerChanging(string value);
    partial void OnPGQ_GeneralAnswerChanged();
    #endregion
		
		public jkp_PersonGeneralQuestion()
		{
			this._jkp_GeneralQuestion = default(EntityRef<jkp_GeneralQuestion>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PGQ_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PGQ_Per_ID
		{
			get
			{
				return this._PGQ_Per_ID;
			}
			set
			{
				if ((this._PGQ_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPGQ_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PGQ_Per_ID = value;
					this.SendPropertyChanged("PGQ_Per_ID");
					this.OnPGQ_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PGQ_GenQues_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PGQ_GenQues_ID
		{
			get
			{
				return this._PGQ_GenQues_ID;
			}
			set
			{
				if ((this._PGQ_GenQues_ID != value))
				{
					if (this._jkp_GeneralQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPGQ_GenQues_IDChanging(value);
					this.SendPropertyChanging();
					this._PGQ_GenQues_ID = value;
					this.SendPropertyChanged("PGQ_GenQues_ID");
					this.OnPGQ_GenQues_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PGQ_GeneralAnswer", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PGQ_GeneralAnswer
		{
			get
			{
				return this._PGQ_GeneralAnswer;
			}
			set
			{
				if ((this._PGQ_GeneralAnswer != value))
				{
					this.OnPGQ_GeneralAnswerChanging(value);
					this.SendPropertyChanging();
					this._PGQ_GeneralAnswer = value;
					this.SendPropertyChanged("PGQ_GeneralAnswer");
					this.OnPGQ_GeneralAnswerChanged();
				}
			}
		}
		
		[Association(Name="jkp_GeneralQuestion_jkp_PersonGeneralQuestion", Storage="_jkp_GeneralQuestion", ThisKey="PGQ_GenQues_ID", OtherKey="GenQues_ID", IsForeignKey=true)]
		public jkp_GeneralQuestion jkp_GeneralQuestion
		{
			get
			{
				return this._jkp_GeneralQuestion.Entity;
			}
			set
			{
				jkp_GeneralQuestion previousValue = this._jkp_GeneralQuestion.Entity;
				if (((previousValue != value) 
							|| (this._jkp_GeneralQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_GeneralQuestion.Entity = null;
						previousValue.jkp_PersonGeneralQuestions.Remove(this);
					}
					this._jkp_GeneralQuestion.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonGeneralQuestions.Add(this);
						this._PGQ_GenQues_ID = value.GenQues_ID;
					}
					else
					{
						this._PGQ_GenQues_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_GeneralQuestion");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonGeneralQuestion", Storage="_jkp_Person", ThisKey="PGQ_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonGeneralQuestions.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonGeneralQuestions.Add(this);
						this._PGQ_Per_ID = value.Per_ID;
					}
					else
					{
						this._PGQ_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonImage")]
	public partial class jkp_PersonImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PI_Per_ID;
		
		private System.Guid _PI_Img_ID;
		
		private string _PA_Img_Role;
		
		private EntityRef<jkp_Image> _jkp_Image;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPI_Per_IDChanging(System.Guid value);
    partial void OnPI_Per_IDChanged();
    partial void OnPI_Img_IDChanging(System.Guid value);
    partial void OnPI_Img_IDChanged();
    partial void OnPA_Img_RoleChanging(string value);
    partial void OnPA_Img_RoleChanged();
    #endregion
		
		public jkp_PersonImage()
		{
			this._jkp_Image = default(EntityRef<jkp_Image>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PI_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PI_Per_ID
		{
			get
			{
				return this._PI_Per_ID;
			}
			set
			{
				if ((this._PI_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPI_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PI_Per_ID = value;
					this.SendPropertyChanged("PI_Per_ID");
					this.OnPI_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PI_Img_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PI_Img_ID
		{
			get
			{
				return this._PI_Img_ID;
			}
			set
			{
				if ((this._PI_Img_ID != value))
				{
					if (this._jkp_Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPI_Img_IDChanging(value);
					this.SendPropertyChanging();
					this._PI_Img_ID = value;
					this.SendPropertyChanged("PI_Img_ID");
					this.OnPI_Img_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PA_Img_Role", DbType="VarChar(30)")]
		public string PA_Img_Role
		{
			get
			{
				return this._PA_Img_Role;
			}
			set
			{
				if ((this._PA_Img_Role != value))
				{
					this.OnPA_Img_RoleChanging(value);
					this.SendPropertyChanging();
					this._PA_Img_Role = value;
					this.SendPropertyChanged("PA_Img_Role");
					this.OnPA_Img_RoleChanged();
				}
			}
		}
		
		[Association(Name="jkp_Image_jkp_PersonImage", Storage="_jkp_Image", ThisKey="PI_Img_ID", OtherKey="Img_ID", IsForeignKey=true)]
		public jkp_Image jkp_Image
		{
			get
			{
				return this._jkp_Image.Entity;
			}
			set
			{
				jkp_Image previousValue = this._jkp_Image.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Image.Entity = null;
						previousValue.jkp_PersonImages.Remove(this);
					}
					this._jkp_Image.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonImages.Add(this);
						this._PI_Img_ID = value.Img_ID;
					}
					else
					{
						this._PI_Img_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Image");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonImage", Storage="_jkp_Person", ThisKey="PI_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonImages.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonImages.Add(this);
						this._PI_Per_ID = value.Per_ID;
					}
					else
					{
						this._PI_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonMedicalQuestions")]
	public partial class jkp_PersonMedicalQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PMQ_Per_ID;
		
		private System.Guid _PMQ_MedQues_ID;
		
		private string _PMQ_MedicalAnswer;
		
		private EntityRef<jkp_MedicalQuestion> _jkp_MedicalQuestion;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPMQ_Per_IDChanging(System.Guid value);
    partial void OnPMQ_Per_IDChanged();
    partial void OnPMQ_MedQues_IDChanging(System.Guid value);
    partial void OnPMQ_MedQues_IDChanged();
    partial void OnPMQ_MedicalAnswerChanging(string value);
    partial void OnPMQ_MedicalAnswerChanged();
    #endregion
		
		public jkp_PersonMedicalQuestion()
		{
			this._jkp_MedicalQuestion = default(EntityRef<jkp_MedicalQuestion>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			OnCreated();
		}
		
		[Column(Storage="_PMQ_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PMQ_Per_ID
		{
			get
			{
				return this._PMQ_Per_ID;
			}
			set
			{
				if ((this._PMQ_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPMQ_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PMQ_Per_ID = value;
					this.SendPropertyChanged("PMQ_Per_ID");
					this.OnPMQ_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PMQ_MedQues_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PMQ_MedQues_ID
		{
			get
			{
				return this._PMQ_MedQues_ID;
			}
			set
			{
				if ((this._PMQ_MedQues_ID != value))
				{
					if (this._jkp_MedicalQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPMQ_MedQues_IDChanging(value);
					this.SendPropertyChanging();
					this._PMQ_MedQues_ID = value;
					this.SendPropertyChanged("PMQ_MedQues_ID");
					this.OnPMQ_MedQues_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PMQ_MedicalAnswer", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PMQ_MedicalAnswer
		{
			get
			{
				return this._PMQ_MedicalAnswer;
			}
			set
			{
				if ((this._PMQ_MedicalAnswer != value))
				{
					this.OnPMQ_MedicalAnswerChanging(value);
					this.SendPropertyChanging();
					this._PMQ_MedicalAnswer = value;
					this.SendPropertyChanged("PMQ_MedicalAnswer");
					this.OnPMQ_MedicalAnswerChanged();
				}
			}
		}
		
		[Association(Name="jkp_MedicalQuestion_jkp_PersonMedicalQuestion", Storage="_jkp_MedicalQuestion", ThisKey="PMQ_MedQues_ID", OtherKey="MedQues_ID", IsForeignKey=true)]
		public jkp_MedicalQuestion jkp_MedicalQuestion
		{
			get
			{
				return this._jkp_MedicalQuestion.Entity;
			}
			set
			{
				jkp_MedicalQuestion previousValue = this._jkp_MedicalQuestion.Entity;
				if (((previousValue != value) 
							|| (this._jkp_MedicalQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_MedicalQuestion.Entity = null;
						previousValue.jkp_PersonMedicalQuestions.Remove(this);
					}
					this._jkp_MedicalQuestion.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonMedicalQuestions.Add(this);
						this._PMQ_MedQues_ID = value.MedQues_ID;
					}
					else
					{
						this._PMQ_MedQues_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_MedicalQuestion");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonMedicalQuestion", Storage="_jkp_Person", ThisKey="PMQ_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonMedicalQuestions.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonMedicalQuestions.Add(this);
						this._PMQ_Per_ID = value.Per_ID;
					}
					else
					{
						this._PMQ_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonReceivesTraining")]
	public partial class jkp_PersonReceivesTraining : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PRT_Per_ID;
		
		private System.Guid _PRT_Train_ID;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Training> _jkp_Training;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRT_Per_IDChanging(System.Guid value);
    partial void OnPRT_Per_IDChanged();
    partial void OnPRT_Train_IDChanging(System.Guid value);
    partial void OnPRT_Train_IDChanged();
    #endregion
		
		public jkp_PersonReceivesTraining()
		{
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Training = default(EntityRef<jkp_Training>);
			OnCreated();
		}
		
		[Column(Storage="_PRT_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PRT_Per_ID
		{
			get
			{
				return this._PRT_Per_ID;
			}
			set
			{
				if ((this._PRT_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRT_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PRT_Per_ID = value;
					this.SendPropertyChanged("PRT_Per_ID");
					this.OnPRT_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PRT_Train_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PRT_Train_ID
		{
			get
			{
				return this._PRT_Train_ID;
			}
			set
			{
				if ((this._PRT_Train_ID != value))
				{
					if (this._jkp_Training.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRT_Train_IDChanging(value);
					this.SendPropertyChanging();
					this._PRT_Train_ID = value;
					this.SendPropertyChanged("PRT_Train_ID");
					this.OnPRT_Train_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonReceivesTraining", Storage="_jkp_Person", ThisKey="PRT_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonReceivesTrainings.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonReceivesTrainings.Add(this);
						this._PRT_Per_ID = value.Per_ID;
					}
					else
					{
						this._PRT_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Training_jkp_PersonReceivesTraining", Storage="_jkp_Training", ThisKey="PRT_Train_ID", OtherKey="Train_ID", IsForeignKey=true)]
		public jkp_Training jkp_Training
		{
			get
			{
				return this._jkp_Training.Entity;
			}
			set
			{
				jkp_Training previousValue = this._jkp_Training.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Training.Entity = null;
						previousValue.jkp_PersonReceivesTrainings.Remove(this);
					}
					this._jkp_Training.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonReceivesTrainings.Add(this);
						this._PRT_Train_ID = value.Train_ID;
					}
					else
					{
						this._PRT_Train_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Training");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonSangha")]
	public partial class jkp_PersonSangha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PS_Per_ID;
		
		private System.Guid _PS_San_ID;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Sangha> _jkp_Sangha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPS_Per_IDChanging(System.Guid value);
    partial void OnPS_Per_IDChanged();
    partial void OnPS_San_IDChanging(System.Guid value);
    partial void OnPS_San_IDChanged();
    #endregion
		
		public jkp_PersonSangha()
		{
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Sangha = default(EntityRef<jkp_Sangha>);
			OnCreated();
		}
		
		[Column(Storage="_PS_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PS_Per_ID
		{
			get
			{
				return this._PS_Per_ID;
			}
			set
			{
				if ((this._PS_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPS_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PS_Per_ID = value;
					this.SendPropertyChanged("PS_Per_ID");
					this.OnPS_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PS_San_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PS_San_ID
		{
			get
			{
				return this._PS_San_ID;
			}
			set
			{
				if ((this._PS_San_ID != value))
				{
					if (this._jkp_Sangha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPS_San_IDChanging(value);
					this.SendPropertyChanging();
					this._PS_San_ID = value;
					this.SendPropertyChanged("PS_San_ID");
					this.OnPS_San_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonSangha", Storage="_jkp_Person", ThisKey="PS_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonSanghas.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonSanghas.Add(this);
						this._PS_Per_ID = value.Per_ID;
					}
					else
					{
						this._PS_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Sangha_jkp_PersonSangha", Storage="_jkp_Sangha", ThisKey="PS_San_ID", OtherKey="San_ID", IsForeignKey=true)]
		public jkp_Sangha jkp_Sangha
		{
			get
			{
				return this._jkp_Sangha.Entity;
			}
			set
			{
				jkp_Sangha previousValue = this._jkp_Sangha.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Sangha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Sangha.Entity = null;
						previousValue.jkp_PersonSanghas.Remove(this);
					}
					this._jkp_Sangha.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonSanghas.Add(this);
						this._PS_San_ID = value.San_ID;
					}
					else
					{
						this._PS_San_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Sangha");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonTransmitsTraining")]
	public partial class jkp_PersonTransmitsTraining : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PTT_Per_ID;
		
		private System.Guid _PTT_Train_ID;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Training> _jkp_Training;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPTT_Per_IDChanging(System.Guid value);
    partial void OnPTT_Per_IDChanged();
    partial void OnPTT_Train_IDChanging(System.Guid value);
    partial void OnPTT_Train_IDChanged();
    #endregion
		
		public jkp_PersonTransmitsTraining()
		{
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Training = default(EntityRef<jkp_Training>);
			OnCreated();
		}
		
		[Column(Storage="_PTT_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PTT_Per_ID
		{
			get
			{
				return this._PTT_Per_ID;
			}
			set
			{
				if ((this._PTT_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTT_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PTT_Per_ID = value;
					this.SendPropertyChanged("PTT_Per_ID");
					this.OnPTT_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PTT_Train_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PTT_Train_ID
		{
			get
			{
				return this._PTT_Train_ID;
			}
			set
			{
				if ((this._PTT_Train_ID != value))
				{
					if (this._jkp_Training.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTT_Train_IDChanging(value);
					this.SendPropertyChanging();
					this._PTT_Train_ID = value;
					this.SendPropertyChanged("PTT_Train_ID");
					this.OnPTT_Train_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonTransmitsTraining", Storage="_jkp_Person", ThisKey="PTT_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonTransmitsTrainings.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonTransmitsTrainings.Add(this);
						this._PTT_Per_ID = value.Per_ID;
					}
					else
					{
						this._PTT_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Training_jkp_PersonTransmitsTraining", Storage="_jkp_Training", ThisKey="PTT_Train_ID", OtherKey="Train_ID", IsForeignKey=true)]
		public jkp_Training jkp_Training
		{
			get
			{
				return this._jkp_Training.Entity;
			}
			set
			{
				jkp_Training previousValue = this._jkp_Training.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Training.Entity = null;
						previousValue.jkp_PersonTransmitsTrainings.Remove(this);
					}
					this._jkp_Training.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonTransmitsTrainings.Add(this);
						this._PTT_Train_ID = value.Train_ID;
					}
					else
					{
						this._PTT_Train_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Training");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_PersonVideo")]
	public partial class jkp_PersonVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PV_Per_ID;
		
		private System.Guid _PV_Vid_ID;
		
		private string _PA_Vid_Role;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Video> _jkp_Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPV_Per_IDChanging(System.Guid value);
    partial void OnPV_Per_IDChanged();
    partial void OnPV_Vid_IDChanging(System.Guid value);
    partial void OnPV_Vid_IDChanged();
    partial void OnPA_Vid_RoleChanging(string value);
    partial void OnPA_Vid_RoleChanged();
    #endregion
		
		public jkp_PersonVideo()
		{
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Video = default(EntityRef<jkp_Video>);
			OnCreated();
		}
		
		[Column(Storage="_PV_Per_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PV_Per_ID
		{
			get
			{
				return this._PV_Per_ID;
			}
			set
			{
				if ((this._PV_Per_ID != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPV_Per_IDChanging(value);
					this.SendPropertyChanging();
					this._PV_Per_ID = value;
					this.SendPropertyChanged("PV_Per_ID");
					this.OnPV_Per_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PV_Vid_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PV_Vid_ID
		{
			get
			{
				return this._PV_Vid_ID;
			}
			set
			{
				if ((this._PV_Vid_ID != value))
				{
					if (this._jkp_Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPV_Vid_IDChanging(value);
					this.SendPropertyChanging();
					this._PV_Vid_ID = value;
					this.SendPropertyChanged("PV_Vid_ID");
					this.OnPV_Vid_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PA_Vid_Role", DbType="VarChar(30)")]
		public string PA_Vid_Role
		{
			get
			{
				return this._PA_Vid_Role;
			}
			set
			{
				if ((this._PA_Vid_Role != value))
				{
					this.OnPA_Vid_RoleChanging(value);
					this.SendPropertyChanging();
					this._PA_Vid_Role = value;
					this.SendPropertyChanged("PA_Vid_Role");
					this.OnPA_Vid_RoleChanged();
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_PersonVideo", Storage="_jkp_Person", ThisKey="PV_Per_ID", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_PersonVideos.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonVideos.Add(this);
						this._PV_Per_ID = value.Per_ID;
					}
					else
					{
						this._PV_Per_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Video_jkp_PersonVideo", Storage="_jkp_Video", ThisKey="PV_Vid_ID", OtherKey="Vid_ID", IsForeignKey=true)]
		public jkp_Video jkp_Video
		{
			get
			{
				return this._jkp_Video.Entity;
			}
			set
			{
				jkp_Video previousValue = this._jkp_Video.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Video.Entity = null;
						previousValue.jkp_PersonVideos.Remove(this);
					}
					this._jkp_Video.Entity = value;
					if ((value != null))
					{
						value.jkp_PersonVideos.Add(this);
						this._PV_Vid_ID = value.Vid_ID;
					}
					else
					{
						this._PV_Vid_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Rate")]
	public partial class jkp_Rate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Rt_ID;
		
		private decimal _Rt_BaseAmount;
		
		private string _Rt_Currency;
		
		private EntitySet<jkp_RoomRate> _jkp_RoomRates;
		
		private EntitySet<jkp_RoomType> _jkp_RoomTypes;
		
		private EntitySet<jkp_RoomTypeRate> _jkp_RoomTypeRates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRt_IDChanging(System.Guid value);
    partial void OnRt_IDChanged();
    partial void OnRt_BaseAmountChanging(decimal value);
    partial void OnRt_BaseAmountChanged();
    partial void OnRt_CurrencyChanging(string value);
    partial void OnRt_CurrencyChanged();
    #endregion
		
		public jkp_Rate()
		{
			this._jkp_RoomRates = new EntitySet<jkp_RoomRate>(new Action<jkp_RoomRate>(this.attach_jkp_RoomRates), new Action<jkp_RoomRate>(this.detach_jkp_RoomRates));
			this._jkp_RoomTypes = new EntitySet<jkp_RoomType>(new Action<jkp_RoomType>(this.attach_jkp_RoomTypes), new Action<jkp_RoomType>(this.detach_jkp_RoomTypes));
			this._jkp_RoomTypeRates = new EntitySet<jkp_RoomTypeRate>(new Action<jkp_RoomTypeRate>(this.attach_jkp_RoomTypeRates), new Action<jkp_RoomTypeRate>(this.detach_jkp_RoomTypeRates));
			OnCreated();
		}
		
		[Column(Storage="_Rt_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Rt_ID
		{
			get
			{
				return this._Rt_ID;
			}
			set
			{
				if ((this._Rt_ID != value))
				{
					this.OnRt_IDChanging(value);
					this.SendPropertyChanging();
					this._Rt_ID = value;
					this.SendPropertyChanged("Rt_ID");
					this.OnRt_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Rt_BaseAmount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Rt_BaseAmount
		{
			get
			{
				return this._Rt_BaseAmount;
			}
			set
			{
				if ((this._Rt_BaseAmount != value))
				{
					this.OnRt_BaseAmountChanging(value);
					this.SendPropertyChanging();
					this._Rt_BaseAmount = value;
					this.SendPropertyChanged("Rt_BaseAmount");
					this.OnRt_BaseAmountChanged();
				}
			}
		}
		
		[Column(Storage="_Rt_Currency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Rt_Currency
		{
			get
			{
				return this._Rt_Currency;
			}
			set
			{
				if ((this._Rt_Currency != value))
				{
					this.OnRt_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._Rt_Currency = value;
					this.SendPropertyChanged("Rt_Currency");
					this.OnRt_CurrencyChanged();
				}
			}
		}
		
		[Association(Name="jkp_Rate_jkp_RoomRate", Storage="_jkp_RoomRates", ThisKey="Rt_ID", OtherKey="RR_Rt_ID")]
		public EntitySet<jkp_RoomRate> jkp_RoomRates
		{
			get
			{
				return this._jkp_RoomRates;
			}
			set
			{
				this._jkp_RoomRates.Assign(value);
			}
		}
		
		[Association(Name="jkp_Rate_jkp_RoomType", Storage="_jkp_RoomTypes", ThisKey="Rt_ID", OtherKey="RmType_RateId")]
		public EntitySet<jkp_RoomType> jkp_RoomTypes
		{
			get
			{
				return this._jkp_RoomTypes;
			}
			set
			{
				this._jkp_RoomTypes.Assign(value);
			}
		}
		
		[Association(Name="jkp_Rate_jkp_RoomTypeRate", Storage="_jkp_RoomTypeRates", ThisKey="Rt_ID", OtherKey="RTR_Rt_ID")]
		public EntitySet<jkp_RoomTypeRate> jkp_RoomTypeRates
		{
			get
			{
				return this._jkp_RoomTypeRates;
			}
			set
			{
				this._jkp_RoomTypeRates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_RoomRates(jkp_RoomRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Rate = this;
		}
		
		private void detach_jkp_RoomRates(jkp_RoomRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Rate = null;
		}
		
		private void attach_jkp_RoomTypes(jkp_RoomType entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Rate = this;
		}
		
		private void detach_jkp_RoomTypes(jkp_RoomType entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Rate = null;
		}
		
		private void attach_jkp_RoomTypeRates(jkp_RoomTypeRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Rate = this;
		}
		
		private void detach_jkp_RoomTypeRates(jkp_RoomTypeRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Rate = null;
		}
	}
	
	[Table(Name="dbo.jkp_Retreat")]
	public partial class jkp_Retreat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Ret_ID;
		
		private string _Ret_Name;
		
		private System.DateTime _Ret_StartDate;
		
		private System.DateTime _Ret_EndDate;
		
		private string _Ret_Description;
		
		private string _Ret_Comment;
		
		private System.Guid _Ret_Site_ID;
		
		private int _Ret_TotalCapacity;
		
		private System.Guid _Ret_LanguageId;
		
		private bool _Ret_AllowRegistrationDuringRetreat;
		
		private string _Ret_InformationForAttendingRetreat;
		
		private System.Nullable<decimal> _Ret_GlobalRateModifier;
		
		private EntitySet<jkp_Activity> _jkp_Activities;
		
		private EntitySet<jkp_Assignment> _jkp_Assignments;
		
		private EntitySet<jkp_DiscussionGroup> _jkp_DiscussionGroups;
		
		private EntitySet<jkp_PersonAssignmentRetreat> _jkp_PersonAssignmentRetreats;
		
		private EntitySet<jkp_PersonAttendingRetreat> _jkp_PersonAttendingRetreats;
		
		private EntitySet<jkp_PersonContributionRetreat> _jkp_PersonContributionRetreats;
		
		private EntityRef<jkp_Language> _jkp_Language;
		
		private EntityRef<jkp_Site> _jkp_Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRet_IDChanging(System.Guid value);
    partial void OnRet_IDChanged();
    partial void OnRet_NameChanging(string value);
    partial void OnRet_NameChanged();
    partial void OnRet_StartDateChanging(System.DateTime value);
    partial void OnRet_StartDateChanged();
    partial void OnRet_EndDateChanging(System.DateTime value);
    partial void OnRet_EndDateChanged();
    partial void OnRet_DescriptionChanging(string value);
    partial void OnRet_DescriptionChanged();
    partial void OnRet_CommentChanging(string value);
    partial void OnRet_CommentChanged();
    partial void OnRet_Site_IDChanging(System.Guid value);
    partial void OnRet_Site_IDChanged();
    partial void OnRet_TotalCapacityChanging(int value);
    partial void OnRet_TotalCapacityChanged();
    partial void OnRet_LanguageIdChanging(System.Guid value);
    partial void OnRet_LanguageIdChanged();
    partial void OnRet_AllowRegistrationDuringRetreatChanging(bool value);
    partial void OnRet_AllowRegistrationDuringRetreatChanged();
    partial void OnRet_InformationForAttendingRetreatChanging(string value);
    partial void OnRet_InformationForAttendingRetreatChanged();
    partial void OnRet_GlobalRateModifierChanging(System.Nullable<decimal> value);
    partial void OnRet_GlobalRateModifierChanged();
    #endregion
		
		public jkp_Retreat()
		{
			this._jkp_Activities = new EntitySet<jkp_Activity>(new Action<jkp_Activity>(this.attach_jkp_Activities), new Action<jkp_Activity>(this.detach_jkp_Activities));
			this._jkp_Assignments = new EntitySet<jkp_Assignment>(new Action<jkp_Assignment>(this.attach_jkp_Assignments), new Action<jkp_Assignment>(this.detach_jkp_Assignments));
			this._jkp_DiscussionGroups = new EntitySet<jkp_DiscussionGroup>(new Action<jkp_DiscussionGroup>(this.attach_jkp_DiscussionGroups), new Action<jkp_DiscussionGroup>(this.detach_jkp_DiscussionGroups));
			this._jkp_PersonAssignmentRetreats = new EntitySet<jkp_PersonAssignmentRetreat>(new Action<jkp_PersonAssignmentRetreat>(this.attach_jkp_PersonAssignmentRetreats), new Action<jkp_PersonAssignmentRetreat>(this.detach_jkp_PersonAssignmentRetreats));
			this._jkp_PersonAttendingRetreats = new EntitySet<jkp_PersonAttendingRetreat>(new Action<jkp_PersonAttendingRetreat>(this.attach_jkp_PersonAttendingRetreats), new Action<jkp_PersonAttendingRetreat>(this.detach_jkp_PersonAttendingRetreats));
			this._jkp_PersonContributionRetreats = new EntitySet<jkp_PersonContributionRetreat>(new Action<jkp_PersonContributionRetreat>(this.attach_jkp_PersonContributionRetreats), new Action<jkp_PersonContributionRetreat>(this.detach_jkp_PersonContributionRetreats));
			this._jkp_Language = default(EntityRef<jkp_Language>);
			this._jkp_Site = default(EntityRef<jkp_Site>);
			OnCreated();
		}
		
		[Column(Storage="_Ret_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Ret_ID
		{
			get
			{
				return this._Ret_ID;
			}
			set
			{
				if ((this._Ret_ID != value))
				{
					this.OnRet_IDChanging(value);
					this.SendPropertyChanging();
					this._Ret_ID = value;
					this.SendPropertyChanged("Ret_ID");
					this.OnRet_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Ret_Name
		{
			get
			{
				return this._Ret_Name;
			}
			set
			{
				if ((this._Ret_Name != value))
				{
					this.OnRet_NameChanging(value);
					this.SendPropertyChanging();
					this._Ret_Name = value;
					this.SendPropertyChanged("Ret_Name");
					this.OnRet_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime Ret_StartDate
		{
			get
			{
				return this._Ret_StartDate;
			}
			set
			{
				if ((this._Ret_StartDate != value))
				{
					this.OnRet_StartDateChanging(value);
					this.SendPropertyChanging();
					this._Ret_StartDate = value;
					this.SendPropertyChanged("Ret_StartDate");
					this.OnRet_StartDateChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime Ret_EndDate
		{
			get
			{
				return this._Ret_EndDate;
			}
			set
			{
				if ((this._Ret_EndDate != value))
				{
					this.OnRet_EndDateChanging(value);
					this.SendPropertyChanging();
					this._Ret_EndDate = value;
					this.SendPropertyChanged("Ret_EndDate");
					this.OnRet_EndDateChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Ret_Description
		{
			get
			{
				return this._Ret_Description;
			}
			set
			{
				if ((this._Ret_Description != value))
				{
					this.OnRet_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Ret_Description = value;
					this.SendPropertyChanged("Ret_Description");
					this.OnRet_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Ret_Comment
		{
			get
			{
				return this._Ret_Comment;
			}
			set
			{
				if ((this._Ret_Comment != value))
				{
					this.OnRet_CommentChanging(value);
					this.SendPropertyChanging();
					this._Ret_Comment = value;
					this.SendPropertyChanged("Ret_Comment");
					this.OnRet_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_Site_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Ret_Site_ID
		{
			get
			{
				return this._Ret_Site_ID;
			}
			set
			{
				if ((this._Ret_Site_ID != value))
				{
					if (this._jkp_Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRet_Site_IDChanging(value);
					this.SendPropertyChanging();
					this._Ret_Site_ID = value;
					this.SendPropertyChanged("Ret_Site_ID");
					this.OnRet_Site_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_TotalCapacity", DbType="Int NOT NULL")]
		public int Ret_TotalCapacity
		{
			get
			{
				return this._Ret_TotalCapacity;
			}
			set
			{
				if ((this._Ret_TotalCapacity != value))
				{
					this.OnRet_TotalCapacityChanging(value);
					this.SendPropertyChanging();
					this._Ret_TotalCapacity = value;
					this.SendPropertyChanged("Ret_TotalCapacity");
					this.OnRet_TotalCapacityChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_LanguageId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Ret_LanguageId
		{
			get
			{
				return this._Ret_LanguageId;
			}
			set
			{
				if ((this._Ret_LanguageId != value))
				{
					if (this._jkp_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRet_LanguageIdChanging(value);
					this.SendPropertyChanging();
					this._Ret_LanguageId = value;
					this.SendPropertyChanged("Ret_LanguageId");
					this.OnRet_LanguageIdChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_AllowRegistrationDuringRetreat", DbType="Bit NOT NULL")]
		public bool Ret_AllowRegistrationDuringRetreat
		{
			get
			{
				return this._Ret_AllowRegistrationDuringRetreat;
			}
			set
			{
				if ((this._Ret_AllowRegistrationDuringRetreat != value))
				{
					this.OnRet_AllowRegistrationDuringRetreatChanging(value);
					this.SendPropertyChanging();
					this._Ret_AllowRegistrationDuringRetreat = value;
					this.SendPropertyChanged("Ret_AllowRegistrationDuringRetreat");
					this.OnRet_AllowRegistrationDuringRetreatChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_InformationForAttendingRetreat", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Ret_InformationForAttendingRetreat
		{
			get
			{
				return this._Ret_InformationForAttendingRetreat;
			}
			set
			{
				if ((this._Ret_InformationForAttendingRetreat != value))
				{
					this.OnRet_InformationForAttendingRetreatChanging(value);
					this.SendPropertyChanging();
					this._Ret_InformationForAttendingRetreat = value;
					this.SendPropertyChanged("Ret_InformationForAttendingRetreat");
					this.OnRet_InformationForAttendingRetreatChanged();
				}
			}
		}
		
		[Column(Storage="_Ret_GlobalRateModifier", DbType="Decimal(2,2)")]
		public System.Nullable<decimal> Ret_GlobalRateModifier
		{
			get
			{
				return this._Ret_GlobalRateModifier;
			}
			set
			{
				if ((this._Ret_GlobalRateModifier != value))
				{
					this.OnRet_GlobalRateModifierChanging(value);
					this.SendPropertyChanging();
					this._Ret_GlobalRateModifier = value;
					this.SendPropertyChanged("Ret_GlobalRateModifier");
					this.OnRet_GlobalRateModifierChanged();
				}
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_Activity", Storage="_jkp_Activities", ThisKey="Ret_ID", OtherKey="Act_Ret_ID")]
		public EntitySet<jkp_Activity> jkp_Activities
		{
			get
			{
				return this._jkp_Activities;
			}
			set
			{
				this._jkp_Activities.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_Assignment", Storage="_jkp_Assignments", ThisKey="Ret_ID", OtherKey="Assn_RetreatId")]
		public EntitySet<jkp_Assignment> jkp_Assignments
		{
			get
			{
				return this._jkp_Assignments;
			}
			set
			{
				this._jkp_Assignments.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_DiscussionGroup", Storage="_jkp_DiscussionGroups", ThisKey="Ret_ID", OtherKey="DGroup_RetreatID")]
		public EntitySet<jkp_DiscussionGroup> jkp_DiscussionGroups
		{
			get
			{
				return this._jkp_DiscussionGroups;
			}
			set
			{
				this._jkp_DiscussionGroups.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_PersonAssignmentRetreat", Storage="_jkp_PersonAssignmentRetreats", ThisKey="Ret_ID", OtherKey="PAR_Ret_ID")]
		public EntitySet<jkp_PersonAssignmentRetreat> jkp_PersonAssignmentRetreats
		{
			get
			{
				return this._jkp_PersonAssignmentRetreats;
			}
			set
			{
				this._jkp_PersonAssignmentRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_PersonAttendingRetreat", Storage="_jkp_PersonAttendingRetreats", ThisKey="Ret_ID", OtherKey="PAR_RetId")]
		public EntitySet<jkp_PersonAttendingRetreat> jkp_PersonAttendingRetreats
		{
			get
			{
				return this._jkp_PersonAttendingRetreats;
			}
			set
			{
				this._jkp_PersonAttendingRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Retreat_jkp_PersonContributionRetreat", Storage="_jkp_PersonContributionRetreats", ThisKey="Ret_ID", OtherKey="PCR_Ret_ID")]
		public EntitySet<jkp_PersonContributionRetreat> jkp_PersonContributionRetreats
		{
			get
			{
				return this._jkp_PersonContributionRetreats;
			}
			set
			{
				this._jkp_PersonContributionRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Language_jkp_Retreat", Storage="_jkp_Language", ThisKey="Ret_LanguageId", OtherKey="Lang_ID", IsForeignKey=true)]
		public jkp_Language jkp_Language
		{
			get
			{
				return this._jkp_Language.Entity;
			}
			set
			{
				jkp_Language previousValue = this._jkp_Language.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Language.Entity = null;
						previousValue.jkp_Retreats.Remove(this);
					}
					this._jkp_Language.Entity = value;
					if ((value != null))
					{
						value.jkp_Retreats.Add(this);
						this._Ret_LanguageId = value.Lang_ID;
					}
					else
					{
						this._Ret_LanguageId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Language");
				}
			}
		}
		
		[Association(Name="jkp_Site_jkp_Retreat", Storage="_jkp_Site", ThisKey="Ret_Site_ID", OtherKey="Site_ID", IsForeignKey=true)]
		public jkp_Site jkp_Site
		{
			get
			{
				return this._jkp_Site.Entity;
			}
			set
			{
				jkp_Site previousValue = this._jkp_Site.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Site.Entity = null;
						previousValue.jkp_Retreats.Remove(this);
					}
					this._jkp_Site.Entity = value;
					if ((value != null))
					{
						value.jkp_Retreats.Add(this);
						this._Ret_Site_ID = value.Site_ID;
					}
					else
					{
						this._Ret_Site_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Activities(jkp_Activity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = this;
		}
		
		private void detach_jkp_Activities(jkp_Activity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = null;
		}
		
		private void attach_jkp_Assignments(jkp_Assignment entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = this;
		}
		
		private void detach_jkp_Assignments(jkp_Assignment entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = null;
		}
		
		private void attach_jkp_DiscussionGroups(jkp_DiscussionGroup entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = this;
		}
		
		private void detach_jkp_DiscussionGroups(jkp_DiscussionGroup entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = null;
		}
		
		private void attach_jkp_PersonAssignmentRetreats(jkp_PersonAssignmentRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = this;
		}
		
		private void detach_jkp_PersonAssignmentRetreats(jkp_PersonAssignmentRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = null;
		}
		
		private void attach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = this;
		}
		
		private void detach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = null;
		}
		
		private void attach_jkp_PersonContributionRetreats(jkp_PersonContributionRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = this;
		}
		
		private void detach_jkp_PersonContributionRetreats(jkp_PersonContributionRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Retreat = null;
		}
	}
	
	[Table(Name="dbo.jkp_Room")]
	public partial class jkp_Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Rm_ID;
		
		private string _Rm_Name;
		
		private System.Nullable<int> _Rm_Level;
		
		private System.Nullable<System.Guid> _Rm_Bld_ID;
		
		private System.Nullable<System.Guid> _Rm_RmType_ID;
		
		private string _Rm_Comment;
		
		private int _Rm_TotalCapacity;
		
		private System.Nullable<System.DateTime> _Rm_ContructedDate;
		
		private System.Nullable<System.DateTime> _Rm_DestroyedDate;
		
		private EntitySet<jkp_PersonAttendingRetreat> _jkp_PersonAttendingRetreats;
		
		private EntitySet<jkp_RoomRate> _jkp_RoomRates;
		
		private EntityRef<jkp_Building> _jkp_Building;
		
		private EntityRef<jkp_RoomType> _jkp_RoomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRm_IDChanging(System.Guid value);
    partial void OnRm_IDChanged();
    partial void OnRm_NameChanging(string value);
    partial void OnRm_NameChanged();
    partial void OnRm_LevelChanging(System.Nullable<int> value);
    partial void OnRm_LevelChanged();
    partial void OnRm_Bld_IDChanging(System.Nullable<System.Guid> value);
    partial void OnRm_Bld_IDChanged();
    partial void OnRm_RmType_IDChanging(System.Nullable<System.Guid> value);
    partial void OnRm_RmType_IDChanged();
    partial void OnRm_CommentChanging(string value);
    partial void OnRm_CommentChanged();
    partial void OnRm_TotalCapacityChanging(int value);
    partial void OnRm_TotalCapacityChanged();
    partial void OnRm_ContructedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRm_ContructedDateChanged();
    partial void OnRm_DestroyedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRm_DestroyedDateChanged();
    #endregion
		
		public jkp_Room()
		{
			this._jkp_PersonAttendingRetreats = new EntitySet<jkp_PersonAttendingRetreat>(new Action<jkp_PersonAttendingRetreat>(this.attach_jkp_PersonAttendingRetreats), new Action<jkp_PersonAttendingRetreat>(this.detach_jkp_PersonAttendingRetreats));
			this._jkp_RoomRates = new EntitySet<jkp_RoomRate>(new Action<jkp_RoomRate>(this.attach_jkp_RoomRates), new Action<jkp_RoomRate>(this.detach_jkp_RoomRates));
			this._jkp_Building = default(EntityRef<jkp_Building>);
			this._jkp_RoomType = default(EntityRef<jkp_RoomType>);
			OnCreated();
		}
		
		[Column(Storage="_Rm_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Rm_ID
		{
			get
			{
				return this._Rm_ID;
			}
			set
			{
				if ((this._Rm_ID != value))
				{
					this.OnRm_IDChanging(value);
					this.SendPropertyChanging();
					this._Rm_ID = value;
					this.SendPropertyChanged("Rm_ID");
					this.OnRm_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_Name", DbType="VarChar(50)")]
		public string Rm_Name
		{
			get
			{
				return this._Rm_Name;
			}
			set
			{
				if ((this._Rm_Name != value))
				{
					this.OnRm_NameChanging(value);
					this.SendPropertyChanging();
					this._Rm_Name = value;
					this.SendPropertyChanged("Rm_Name");
					this.OnRm_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_Level", DbType="Int")]
		public System.Nullable<int> Rm_Level
		{
			get
			{
				return this._Rm_Level;
			}
			set
			{
				if ((this._Rm_Level != value))
				{
					this.OnRm_LevelChanging(value);
					this.SendPropertyChanging();
					this._Rm_Level = value;
					this.SendPropertyChanged("Rm_Level");
					this.OnRm_LevelChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_Bld_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Rm_Bld_ID
		{
			get
			{
				return this._Rm_Bld_ID;
			}
			set
			{
				if ((this._Rm_Bld_ID != value))
				{
					if (this._jkp_Building.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRm_Bld_IDChanging(value);
					this.SendPropertyChanging();
					this._Rm_Bld_ID = value;
					this.SendPropertyChanged("Rm_Bld_ID");
					this.OnRm_Bld_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_RmType_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Rm_RmType_ID
		{
			get
			{
				return this._Rm_RmType_ID;
			}
			set
			{
				if ((this._Rm_RmType_ID != value))
				{
					if (this._jkp_RoomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRm_RmType_IDChanging(value);
					this.SendPropertyChanging();
					this._Rm_RmType_ID = value;
					this.SendPropertyChanged("Rm_RmType_ID");
					this.OnRm_RmType_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Rm_Comment
		{
			get
			{
				return this._Rm_Comment;
			}
			set
			{
				if ((this._Rm_Comment != value))
				{
					this.OnRm_CommentChanging(value);
					this.SendPropertyChanging();
					this._Rm_Comment = value;
					this.SendPropertyChanged("Rm_Comment");
					this.OnRm_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_TotalCapacity", DbType="Int NOT NULL")]
		public int Rm_TotalCapacity
		{
			get
			{
				return this._Rm_TotalCapacity;
			}
			set
			{
				if ((this._Rm_TotalCapacity != value))
				{
					this.OnRm_TotalCapacityChanging(value);
					this.SendPropertyChanging();
					this._Rm_TotalCapacity = value;
					this.SendPropertyChanged("Rm_TotalCapacity");
					this.OnRm_TotalCapacityChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_ContructedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rm_ContructedDate
		{
			get
			{
				return this._Rm_ContructedDate;
			}
			set
			{
				if ((this._Rm_ContructedDate != value))
				{
					this.OnRm_ContructedDateChanging(value);
					this.SendPropertyChanging();
					this._Rm_ContructedDate = value;
					this.SendPropertyChanged("Rm_ContructedDate");
					this.OnRm_ContructedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Rm_DestroyedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rm_DestroyedDate
		{
			get
			{
				return this._Rm_DestroyedDate;
			}
			set
			{
				if ((this._Rm_DestroyedDate != value))
				{
					this.OnRm_DestroyedDateChanging(value);
					this.SendPropertyChanging();
					this._Rm_DestroyedDate = value;
					this.SendPropertyChanged("Rm_DestroyedDate");
					this.OnRm_DestroyedDateChanged();
				}
			}
		}
		
		[Association(Name="jkp_Room_jkp_PersonAttendingRetreat", Storage="_jkp_PersonAttendingRetreats", ThisKey="Rm_ID", OtherKey="PAR_RoomId")]
		public EntitySet<jkp_PersonAttendingRetreat> jkp_PersonAttendingRetreats
		{
			get
			{
				return this._jkp_PersonAttendingRetreats;
			}
			set
			{
				this._jkp_PersonAttendingRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Room_jkp_RoomRate", Storage="_jkp_RoomRates", ThisKey="Rm_ID", OtherKey="RR_Rm_ID")]
		public EntitySet<jkp_RoomRate> jkp_RoomRates
		{
			get
			{
				return this._jkp_RoomRates;
			}
			set
			{
				this._jkp_RoomRates.Assign(value);
			}
		}
		
		[Association(Name="jkp_Building_jkp_Room", Storage="_jkp_Building", ThisKey="Rm_Bld_ID", OtherKey="Bld_ID", IsForeignKey=true)]
		public jkp_Building jkp_Building
		{
			get
			{
				return this._jkp_Building.Entity;
			}
			set
			{
				jkp_Building previousValue = this._jkp_Building.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Building.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Building.Entity = null;
						previousValue.jkp_Rooms.Remove(this);
					}
					this._jkp_Building.Entity = value;
					if ((value != null))
					{
						value.jkp_Rooms.Add(this);
						this._Rm_Bld_ID = value.Bld_ID;
					}
					else
					{
						this._Rm_Bld_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Building");
				}
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_Room", Storage="_jkp_RoomType", ThisKey="Rm_RmType_ID", OtherKey="RmType_ID", IsForeignKey=true)]
		public jkp_RoomType jkp_RoomType
		{
			get
			{
				return this._jkp_RoomType.Entity;
			}
			set
			{
				jkp_RoomType previousValue = this._jkp_RoomType.Entity;
				if (((previousValue != value) 
							|| (this._jkp_RoomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_RoomType.Entity = null;
						previousValue.jkp_Rooms.Remove(this);
					}
					this._jkp_RoomType.Entity = value;
					if ((value != null))
					{
						value.jkp_Rooms.Add(this);
						this._Rm_RmType_ID = value.RmType_ID;
					}
					else
					{
						this._Rm_RmType_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_RoomType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Room = this;
		}
		
		private void detach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Room = null;
		}
		
		private void attach_jkp_RoomRates(jkp_RoomRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Room = this;
		}
		
		private void detach_jkp_RoomRates(jkp_RoomRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Room = null;
		}
	}
	
	[Table(Name="dbo.jkp_RoomRate")]
	public partial class jkp_RoomRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RR_ID;
		
		private System.Guid _RR_Rm_ID;
		
		private System.Guid _RR_Rt_ID;
		
		private System.Nullable<System.DateTime> _RR_StartDate;
		
		private System.Nullable<System.DateTime> _RR_EndDate;
		
		private EntityRef<jkp_Room> _jkp_Room;
		
		private EntityRef<jkp_Rate> _jkp_Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRR_IDChanging(System.Guid value);
    partial void OnRR_IDChanged();
    partial void OnRR_Rm_IDChanging(System.Guid value);
    partial void OnRR_Rm_IDChanged();
    partial void OnRR_Rt_IDChanging(System.Guid value);
    partial void OnRR_Rt_IDChanged();
    partial void OnRR_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRR_StartDateChanged();
    partial void OnRR_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRR_EndDateChanged();
    #endregion
		
		public jkp_RoomRate()
		{
			this._jkp_Room = default(EntityRef<jkp_Room>);
			this._jkp_Rate = default(EntityRef<jkp_Rate>);
			OnCreated();
		}
		
		[Column(Storage="_RR_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RR_ID
		{
			get
			{
				return this._RR_ID;
			}
			set
			{
				if ((this._RR_ID != value))
				{
					this.OnRR_IDChanging(value);
					this.SendPropertyChanging();
					this._RR_ID = value;
					this.SendPropertyChanged("RR_ID");
					this.OnRR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RR_Rm_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RR_Rm_ID
		{
			get
			{
				return this._RR_Rm_ID;
			}
			set
			{
				if ((this._RR_Rm_ID != value))
				{
					if (this._jkp_Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRR_Rm_IDChanging(value);
					this.SendPropertyChanging();
					this._RR_Rm_ID = value;
					this.SendPropertyChanged("RR_Rm_ID");
					this.OnRR_Rm_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RR_Rt_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RR_Rt_ID
		{
			get
			{
				return this._RR_Rt_ID;
			}
			set
			{
				if ((this._RR_Rt_ID != value))
				{
					if (this._jkp_Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRR_Rt_IDChanging(value);
					this.SendPropertyChanging();
					this._RR_Rt_ID = value;
					this.SendPropertyChanged("RR_Rt_ID");
					this.OnRR_Rt_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RR_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RR_StartDate
		{
			get
			{
				return this._RR_StartDate;
			}
			set
			{
				if ((this._RR_StartDate != value))
				{
					this.OnRR_StartDateChanging(value);
					this.SendPropertyChanging();
					this._RR_StartDate = value;
					this.SendPropertyChanged("RR_StartDate");
					this.OnRR_StartDateChanged();
				}
			}
		}
		
		[Column(Storage="_RR_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RR_EndDate
		{
			get
			{
				return this._RR_EndDate;
			}
			set
			{
				if ((this._RR_EndDate != value))
				{
					this.OnRR_EndDateChanging(value);
					this.SendPropertyChanging();
					this._RR_EndDate = value;
					this.SendPropertyChanged("RR_EndDate");
					this.OnRR_EndDateChanged();
				}
			}
		}
		
		[Association(Name="jkp_Room_jkp_RoomRate", Storage="_jkp_Room", ThisKey="RR_Rm_ID", OtherKey="Rm_ID", IsForeignKey=true)]
		public jkp_Room jkp_Room
		{
			get
			{
				return this._jkp_Room.Entity;
			}
			set
			{
				jkp_Room previousValue = this._jkp_Room.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Room.Entity = null;
						previousValue.jkp_RoomRates.Remove(this);
					}
					this._jkp_Room.Entity = value;
					if ((value != null))
					{
						value.jkp_RoomRates.Add(this);
						this._RR_Rm_ID = value.Rm_ID;
					}
					else
					{
						this._RR_Rm_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Room");
				}
			}
		}
		
		[Association(Name="jkp_Rate_jkp_RoomRate", Storage="_jkp_Rate", ThisKey="RR_Rt_ID", OtherKey="Rt_ID", IsForeignKey=true)]
		public jkp_Rate jkp_Rate
		{
			get
			{
				return this._jkp_Rate.Entity;
			}
			set
			{
				jkp_Rate previousValue = this._jkp_Rate.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Rate.Entity = null;
						previousValue.jkp_RoomRates.Remove(this);
					}
					this._jkp_Rate.Entity = value;
					if ((value != null))
					{
						value.jkp_RoomRates.Add(this);
						this._RR_Rt_ID = value.Rt_ID;
					}
					else
					{
						this._RR_Rt_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Rate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_RoomType")]
	public partial class jkp_RoomType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RmType_ID;
		
		private string _RmType_Name;
		
		private bool _RmType_UpperBunkBed;
		
		private bool _RmType_LowerBunkBed;
		
		private bool _RmType_SingleBed;
		
		private bool _RmType_Shower;
		
		private bool _RmType_Bathroom;
		
		private bool _RmType_AirCondition;
		
		private bool _RmType_Heating;
		
		private System.Guid _RmType_RateId;
		
		private EntitySet<jkp_PersonAttendingRetreat> _jkp_PersonAttendingRetreats;
		
		private EntitySet<jkp_Room> _jkp_Rooms;
		
		private EntitySet<jkp_RoomTypeAdjustment> _jkp_RoomTypeAdjustments;
		
		private EntitySet<jkp_RoomTypeRate> _jkp_RoomTypeRates;
		
		private EntityRef<jkp_Rate> _jkp_Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRmType_IDChanging(System.Guid value);
    partial void OnRmType_IDChanged();
    partial void OnRmType_NameChanging(string value);
    partial void OnRmType_NameChanged();
    partial void OnRmType_UpperBunkBedChanging(bool value);
    partial void OnRmType_UpperBunkBedChanged();
    partial void OnRmType_LowerBunkBedChanging(bool value);
    partial void OnRmType_LowerBunkBedChanged();
    partial void OnRmType_SingleBedChanging(bool value);
    partial void OnRmType_SingleBedChanged();
    partial void OnRmType_ShowerChanging(bool value);
    partial void OnRmType_ShowerChanged();
    partial void OnRmType_BathroomChanging(bool value);
    partial void OnRmType_BathroomChanged();
    partial void OnRmType_AirConditionChanging(bool value);
    partial void OnRmType_AirConditionChanged();
    partial void OnRmType_HeatingChanging(bool value);
    partial void OnRmType_HeatingChanged();
    partial void OnRmType_RateIdChanging(System.Guid value);
    partial void OnRmType_RateIdChanged();
    #endregion
		
		public jkp_RoomType()
		{
			this._jkp_PersonAttendingRetreats = new EntitySet<jkp_PersonAttendingRetreat>(new Action<jkp_PersonAttendingRetreat>(this.attach_jkp_PersonAttendingRetreats), new Action<jkp_PersonAttendingRetreat>(this.detach_jkp_PersonAttendingRetreats));
			this._jkp_Rooms = new EntitySet<jkp_Room>(new Action<jkp_Room>(this.attach_jkp_Rooms), new Action<jkp_Room>(this.detach_jkp_Rooms));
			this._jkp_RoomTypeAdjustments = new EntitySet<jkp_RoomTypeAdjustment>(new Action<jkp_RoomTypeAdjustment>(this.attach_jkp_RoomTypeAdjustments), new Action<jkp_RoomTypeAdjustment>(this.detach_jkp_RoomTypeAdjustments));
			this._jkp_RoomTypeRates = new EntitySet<jkp_RoomTypeRate>(new Action<jkp_RoomTypeRate>(this.attach_jkp_RoomTypeRates), new Action<jkp_RoomTypeRate>(this.detach_jkp_RoomTypeRates));
			this._jkp_Rate = default(EntityRef<jkp_Rate>);
			OnCreated();
		}
		
		[Column(Storage="_RmType_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RmType_ID
		{
			get
			{
				return this._RmType_ID;
			}
			set
			{
				if ((this._RmType_ID != value))
				{
					this.OnRmType_IDChanging(value);
					this.SendPropertyChanging();
					this._RmType_ID = value;
					this.SendPropertyChanged("RmType_ID");
					this.OnRmType_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RmType_Name
		{
			get
			{
				return this._RmType_Name;
			}
			set
			{
				if ((this._RmType_Name != value))
				{
					this.OnRmType_NameChanging(value);
					this.SendPropertyChanging();
					this._RmType_Name = value;
					this.SendPropertyChanged("RmType_Name");
					this.OnRmType_NameChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_UpperBunkBed", DbType="Bit NOT NULL")]
		public bool RmType_UpperBunkBed
		{
			get
			{
				return this._RmType_UpperBunkBed;
			}
			set
			{
				if ((this._RmType_UpperBunkBed != value))
				{
					this.OnRmType_UpperBunkBedChanging(value);
					this.SendPropertyChanging();
					this._RmType_UpperBunkBed = value;
					this.SendPropertyChanged("RmType_UpperBunkBed");
					this.OnRmType_UpperBunkBedChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_LowerBunkBed", DbType="Bit NOT NULL")]
		public bool RmType_LowerBunkBed
		{
			get
			{
				return this._RmType_LowerBunkBed;
			}
			set
			{
				if ((this._RmType_LowerBunkBed != value))
				{
					this.OnRmType_LowerBunkBedChanging(value);
					this.SendPropertyChanging();
					this._RmType_LowerBunkBed = value;
					this.SendPropertyChanged("RmType_LowerBunkBed");
					this.OnRmType_LowerBunkBedChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_SingleBed", DbType="Bit NOT NULL")]
		public bool RmType_SingleBed
		{
			get
			{
				return this._RmType_SingleBed;
			}
			set
			{
				if ((this._RmType_SingleBed != value))
				{
					this.OnRmType_SingleBedChanging(value);
					this.SendPropertyChanging();
					this._RmType_SingleBed = value;
					this.SendPropertyChanged("RmType_SingleBed");
					this.OnRmType_SingleBedChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_Shower", DbType="Bit NOT NULL")]
		public bool RmType_Shower
		{
			get
			{
				return this._RmType_Shower;
			}
			set
			{
				if ((this._RmType_Shower != value))
				{
					this.OnRmType_ShowerChanging(value);
					this.SendPropertyChanging();
					this._RmType_Shower = value;
					this.SendPropertyChanged("RmType_Shower");
					this.OnRmType_ShowerChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_Bathroom", DbType="Bit NOT NULL")]
		public bool RmType_Bathroom
		{
			get
			{
				return this._RmType_Bathroom;
			}
			set
			{
				if ((this._RmType_Bathroom != value))
				{
					this.OnRmType_BathroomChanging(value);
					this.SendPropertyChanging();
					this._RmType_Bathroom = value;
					this.SendPropertyChanged("RmType_Bathroom");
					this.OnRmType_BathroomChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_AirCondition", DbType="Bit NOT NULL")]
		public bool RmType_AirCondition
		{
			get
			{
				return this._RmType_AirCondition;
			}
			set
			{
				if ((this._RmType_AirCondition != value))
				{
					this.OnRmType_AirConditionChanging(value);
					this.SendPropertyChanging();
					this._RmType_AirCondition = value;
					this.SendPropertyChanged("RmType_AirCondition");
					this.OnRmType_AirConditionChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_Heating", DbType="Bit NOT NULL")]
		public bool RmType_Heating
		{
			get
			{
				return this._RmType_Heating;
			}
			set
			{
				if ((this._RmType_Heating != value))
				{
					this.OnRmType_HeatingChanging(value);
					this.SendPropertyChanging();
					this._RmType_Heating = value;
					this.SendPropertyChanged("RmType_Heating");
					this.OnRmType_HeatingChanged();
				}
			}
		}
		
		[Column(Storage="_RmType_RateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RmType_RateId
		{
			get
			{
				return this._RmType_RateId;
			}
			set
			{
				if ((this._RmType_RateId != value))
				{
					if (this._jkp_Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRmType_RateIdChanging(value);
					this.SendPropertyChanging();
					this._RmType_RateId = value;
					this.SendPropertyChanged("RmType_RateId");
					this.OnRmType_RateIdChanged();
				}
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_PersonAttendingRetreat", Storage="_jkp_PersonAttendingRetreats", ThisKey="RmType_ID", OtherKey="PAR_RoomTypeId")]
		public EntitySet<jkp_PersonAttendingRetreat> jkp_PersonAttendingRetreats
		{
			get
			{
				return this._jkp_PersonAttendingRetreats;
			}
			set
			{
				this._jkp_PersonAttendingRetreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_Room", Storage="_jkp_Rooms", ThisKey="RmType_ID", OtherKey="Rm_RmType_ID")]
		public EntitySet<jkp_Room> jkp_Rooms
		{
			get
			{
				return this._jkp_Rooms;
			}
			set
			{
				this._jkp_Rooms.Assign(value);
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_RoomTypeAdjustment", Storage="_jkp_RoomTypeAdjustments", ThisKey="RmType_ID", OtherKey="RTA_RmType_ID")]
		public EntitySet<jkp_RoomTypeAdjustment> jkp_RoomTypeAdjustments
		{
			get
			{
				return this._jkp_RoomTypeAdjustments;
			}
			set
			{
				this._jkp_RoomTypeAdjustments.Assign(value);
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_RoomTypeRate", Storage="_jkp_RoomTypeRates", ThisKey="RmType_ID", OtherKey="RTR_RmType_ID")]
		public EntitySet<jkp_RoomTypeRate> jkp_RoomTypeRates
		{
			get
			{
				return this._jkp_RoomTypeRates;
			}
			set
			{
				this._jkp_RoomTypeRates.Assign(value);
			}
		}
		
		[Association(Name="jkp_Rate_jkp_RoomType", Storage="_jkp_Rate", ThisKey="RmType_RateId", OtherKey="Rt_ID", IsForeignKey=true)]
		public jkp_Rate jkp_Rate
		{
			get
			{
				return this._jkp_Rate.Entity;
			}
			set
			{
				jkp_Rate previousValue = this._jkp_Rate.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Rate.Entity = null;
						previousValue.jkp_RoomTypes.Remove(this);
					}
					this._jkp_Rate.Entity = value;
					if ((value != null))
					{
						value.jkp_RoomTypes.Add(this);
						this._RmType_RateId = value.Rt_ID;
					}
					else
					{
						this._RmType_RateId = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Rate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = this;
		}
		
		private void detach_jkp_PersonAttendingRetreats(jkp_PersonAttendingRetreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = null;
		}
		
		private void attach_jkp_Rooms(jkp_Room entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = this;
		}
		
		private void detach_jkp_Rooms(jkp_Room entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = null;
		}
		
		private void attach_jkp_RoomTypeAdjustments(jkp_RoomTypeAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = this;
		}
		
		private void detach_jkp_RoomTypeAdjustments(jkp_RoomTypeAdjustment entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = null;
		}
		
		private void attach_jkp_RoomTypeRates(jkp_RoomTypeRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = this;
		}
		
		private void detach_jkp_RoomTypeRates(jkp_RoomTypeRate entity)
		{
			this.SendPropertyChanging();
			entity.jkp_RoomType = null;
		}
	}
	
	[Table(Name="dbo.jkp_RoomTypeAdjustment")]
	public partial class jkp_RoomTypeAdjustment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RTA_RmType_ID;
		
		private System.Guid _RTA_Adjust_ID;
		
		private EntityRef<jkp_Adjustment> _jkp_Adjustment;
		
		private EntityRef<jkp_RoomType> _jkp_RoomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTA_RmType_IDChanging(System.Guid value);
    partial void OnRTA_RmType_IDChanged();
    partial void OnRTA_Adjust_IDChanging(System.Guid value);
    partial void OnRTA_Adjust_IDChanged();
    #endregion
		
		public jkp_RoomTypeAdjustment()
		{
			this._jkp_Adjustment = default(EntityRef<jkp_Adjustment>);
			this._jkp_RoomType = default(EntityRef<jkp_RoomType>);
			OnCreated();
		}
		
		[Column(Storage="_RTA_RmType_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RTA_RmType_ID
		{
			get
			{
				return this._RTA_RmType_ID;
			}
			set
			{
				if ((this._RTA_RmType_ID != value))
				{
					if (this._jkp_RoomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRTA_RmType_IDChanging(value);
					this.SendPropertyChanging();
					this._RTA_RmType_ID = value;
					this.SendPropertyChanged("RTA_RmType_ID");
					this.OnRTA_RmType_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RTA_Adjust_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RTA_Adjust_ID
		{
			get
			{
				return this._RTA_Adjust_ID;
			}
			set
			{
				if ((this._RTA_Adjust_ID != value))
				{
					if (this._jkp_Adjustment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRTA_Adjust_IDChanging(value);
					this.SendPropertyChanging();
					this._RTA_Adjust_ID = value;
					this.SendPropertyChanged("RTA_Adjust_ID");
					this.OnRTA_Adjust_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Adjustment_jkp_RoomTypeAdjustment", Storage="_jkp_Adjustment", ThisKey="RTA_Adjust_ID", OtherKey="Adjust_ID", IsForeignKey=true)]
		public jkp_Adjustment jkp_Adjustment
		{
			get
			{
				return this._jkp_Adjustment.Entity;
			}
			set
			{
				jkp_Adjustment previousValue = this._jkp_Adjustment.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Adjustment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Adjustment.Entity = null;
						previousValue.jkp_RoomTypeAdjustments.Remove(this);
					}
					this._jkp_Adjustment.Entity = value;
					if ((value != null))
					{
						value.jkp_RoomTypeAdjustments.Add(this);
						this._RTA_Adjust_ID = value.Adjust_ID;
					}
					else
					{
						this._RTA_Adjust_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Adjustment");
				}
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_RoomTypeAdjustment", Storage="_jkp_RoomType", ThisKey="RTA_RmType_ID", OtherKey="RmType_ID", IsForeignKey=true)]
		public jkp_RoomType jkp_RoomType
		{
			get
			{
				return this._jkp_RoomType.Entity;
			}
			set
			{
				jkp_RoomType previousValue = this._jkp_RoomType.Entity;
				if (((previousValue != value) 
							|| (this._jkp_RoomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_RoomType.Entity = null;
						previousValue.jkp_RoomTypeAdjustments.Remove(this);
					}
					this._jkp_RoomType.Entity = value;
					if ((value != null))
					{
						value.jkp_RoomTypeAdjustments.Add(this);
						this._RTA_RmType_ID = value.RmType_ID;
					}
					else
					{
						this._RTA_RmType_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_RoomType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_RoomTypeRate")]
	public partial class jkp_RoomTypeRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RTR_ID;
		
		private System.Guid _RTR_RmType_ID;
		
		private System.Guid _RTR_Rt_ID;
		
		private System.Nullable<System.DateTime> _RTR_StartDate;
		
		private System.Nullable<System.DateTime> _RTR_EndDate;
		
		private EntityRef<jkp_RoomType> _jkp_RoomType;
		
		private EntityRef<jkp_Rate> _jkp_Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTR_IDChanging(System.Guid value);
    partial void OnRTR_IDChanged();
    partial void OnRTR_RmType_IDChanging(System.Guid value);
    partial void OnRTR_RmType_IDChanged();
    partial void OnRTR_Rt_IDChanging(System.Guid value);
    partial void OnRTR_Rt_IDChanged();
    partial void OnRTR_StartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRTR_StartDateChanged();
    partial void OnRTR_EndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRTR_EndDateChanged();
    #endregion
		
		public jkp_RoomTypeRate()
		{
			this._jkp_RoomType = default(EntityRef<jkp_RoomType>);
			this._jkp_Rate = default(EntityRef<jkp_Rate>);
			OnCreated();
		}
		
		[Column(Storage="_RTR_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RTR_ID
		{
			get
			{
				return this._RTR_ID;
			}
			set
			{
				if ((this._RTR_ID != value))
				{
					this.OnRTR_IDChanging(value);
					this.SendPropertyChanging();
					this._RTR_ID = value;
					this.SendPropertyChanged("RTR_ID");
					this.OnRTR_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RTR_RmType_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RTR_RmType_ID
		{
			get
			{
				return this._RTR_RmType_ID;
			}
			set
			{
				if ((this._RTR_RmType_ID != value))
				{
					if (this._jkp_RoomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRTR_RmType_IDChanging(value);
					this.SendPropertyChanging();
					this._RTR_RmType_ID = value;
					this.SendPropertyChanged("RTR_RmType_ID");
					this.OnRTR_RmType_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RTR_Rt_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RTR_Rt_ID
		{
			get
			{
				return this._RTR_Rt_ID;
			}
			set
			{
				if ((this._RTR_Rt_ID != value))
				{
					if (this._jkp_Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRTR_Rt_IDChanging(value);
					this.SendPropertyChanging();
					this._RTR_Rt_ID = value;
					this.SendPropertyChanged("RTR_Rt_ID");
					this.OnRTR_Rt_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RTR_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RTR_StartDate
		{
			get
			{
				return this._RTR_StartDate;
			}
			set
			{
				if ((this._RTR_StartDate != value))
				{
					this.OnRTR_StartDateChanging(value);
					this.SendPropertyChanging();
					this._RTR_StartDate = value;
					this.SendPropertyChanged("RTR_StartDate");
					this.OnRTR_StartDateChanged();
				}
			}
		}
		
		[Column(Storage="_RTR_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RTR_EndDate
		{
			get
			{
				return this._RTR_EndDate;
			}
			set
			{
				if ((this._RTR_EndDate != value))
				{
					this.OnRTR_EndDateChanging(value);
					this.SendPropertyChanging();
					this._RTR_EndDate = value;
					this.SendPropertyChanged("RTR_EndDate");
					this.OnRTR_EndDateChanged();
				}
			}
		}
		
		[Association(Name="jkp_RoomType_jkp_RoomTypeRate", Storage="_jkp_RoomType", ThisKey="RTR_RmType_ID", OtherKey="RmType_ID", IsForeignKey=true)]
		public jkp_RoomType jkp_RoomType
		{
			get
			{
				return this._jkp_RoomType.Entity;
			}
			set
			{
				jkp_RoomType previousValue = this._jkp_RoomType.Entity;
				if (((previousValue != value) 
							|| (this._jkp_RoomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_RoomType.Entity = null;
						previousValue.jkp_RoomTypeRates.Remove(this);
					}
					this._jkp_RoomType.Entity = value;
					if ((value != null))
					{
						value.jkp_RoomTypeRates.Add(this);
						this._RTR_RmType_ID = value.RmType_ID;
					}
					else
					{
						this._RTR_RmType_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_RoomType");
				}
			}
		}
		
		[Association(Name="jkp_Rate_jkp_RoomTypeRate", Storage="_jkp_Rate", ThisKey="RTR_Rt_ID", OtherKey="Rt_ID", IsForeignKey=true)]
		public jkp_Rate jkp_Rate
		{
			get
			{
				return this._jkp_Rate.Entity;
			}
			set
			{
				jkp_Rate previousValue = this._jkp_Rate.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Rate.Entity = null;
						previousValue.jkp_RoomTypeRates.Remove(this);
					}
					this._jkp_Rate.Entity = value;
					if ((value != null))
					{
						value.jkp_RoomTypeRates.Add(this);
						this._RTR_Rt_ID = value.Rt_ID;
					}
					else
					{
						this._RTR_Rt_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Rate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.jkp_Sangha")]
	public partial class jkp_Sangha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _San_ID;
		
		private string _San_Name;
		
		private string _San_Email;
		
		private string _San_WebSite;
		
		private string _San_Image;
		
		private string _San_Summary;
		
		private EntitySet<jkp_Address> _jkp_Addresses;
		
		private EntitySet<jkp_Person> _jkp_Persons;
		
		private EntitySet<jkp_PersonSangha> _jkp_PersonSanghas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSan_IDChanging(System.Guid value);
    partial void OnSan_IDChanged();
    partial void OnSan_NameChanging(string value);
    partial void OnSan_NameChanged();
    partial void OnSan_EmailChanging(string value);
    partial void OnSan_EmailChanged();
    partial void OnSan_WebSiteChanging(string value);
    partial void OnSan_WebSiteChanged();
    partial void OnSan_ImageChanging(string value);
    partial void OnSan_ImageChanged();
    partial void OnSan_SummaryChanging(string value);
    partial void OnSan_SummaryChanged();
    #endregion
		
		public jkp_Sangha()
		{
			this._jkp_Addresses = new EntitySet<jkp_Address>(new Action<jkp_Address>(this.attach_jkp_Addresses), new Action<jkp_Address>(this.detach_jkp_Addresses));
			this._jkp_Persons = new EntitySet<jkp_Person>(new Action<jkp_Person>(this.attach_jkp_Persons), new Action<jkp_Person>(this.detach_jkp_Persons));
			this._jkp_PersonSanghas = new EntitySet<jkp_PersonSangha>(new Action<jkp_PersonSangha>(this.attach_jkp_PersonSanghas), new Action<jkp_PersonSangha>(this.detach_jkp_PersonSanghas));
			OnCreated();
		}
		
		[Column(Storage="_San_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid San_ID
		{
			get
			{
				return this._San_ID;
			}
			set
			{
				if ((this._San_ID != value))
				{
					this.OnSan_IDChanging(value);
					this.SendPropertyChanging();
					this._San_ID = value;
					this.SendPropertyChanged("San_ID");
					this.OnSan_IDChanged();
				}
			}
		}
		
		[Column(Storage="_San_Name", DbType="VarChar(100)")]
		public string San_Name
		{
			get
			{
				return this._San_Name;
			}
			set
			{
				if ((this._San_Name != value))
				{
					this.OnSan_NameChanging(value);
					this.SendPropertyChanging();
					this._San_Name = value;
					this.SendPropertyChanged("San_Name");
					this.OnSan_NameChanged();
				}
			}
		}
		
		[Column(Storage="_San_Email", DbType="VarChar(50)")]
		public string San_Email
		{
			get
			{
				return this._San_Email;
			}
			set
			{
				if ((this._San_Email != value))
				{
					this.OnSan_EmailChanging(value);
					this.SendPropertyChanging();
					this._San_Email = value;
					this.SendPropertyChanged("San_Email");
					this.OnSan_EmailChanged();
				}
			}
		}
		
		[Column(Storage="_San_WebSite", DbType="VarChar(50)")]
		public string San_WebSite
		{
			get
			{
				return this._San_WebSite;
			}
			set
			{
				if ((this._San_WebSite != value))
				{
					this.OnSan_WebSiteChanging(value);
					this.SendPropertyChanging();
					this._San_WebSite = value;
					this.SendPropertyChanged("San_WebSite");
					this.OnSan_WebSiteChanged();
				}
			}
		}
		
		[Column(Storage="_San_Image", DbType="VarChar(100)")]
		public string San_Image
		{
			get
			{
				return this._San_Image;
			}
			set
			{
				if ((this._San_Image != value))
				{
					this.OnSan_ImageChanging(value);
					this.SendPropertyChanging();
					this._San_Image = value;
					this.SendPropertyChanged("San_Image");
					this.OnSan_ImageChanged();
				}
			}
		}
		
		[Column(Storage="_San_Summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string San_Summary
		{
			get
			{
				return this._San_Summary;
			}
			set
			{
				if ((this._San_Summary != value))
				{
					this.OnSan_SummaryChanging(value);
					this.SendPropertyChanging();
					this._San_Summary = value;
					this.SendPropertyChanged("San_Summary");
					this.OnSan_SummaryChanged();
				}
			}
		}
		
		[Association(Name="jkp_Sangha_jkp_Address", Storage="_jkp_Addresses", ThisKey="San_ID", OtherKey="Add_San_ID")]
		public EntitySet<jkp_Address> jkp_Addresses
		{
			get
			{
				return this._jkp_Addresses;
			}
			set
			{
				this._jkp_Addresses.Assign(value);
			}
		}
		
		[Association(Name="jkp_Sangha_jkp_Person", Storage="_jkp_Persons", ThisKey="San_ID", OtherKey="Per_San_ID")]
		public EntitySet<jkp_Person> jkp_Persons
		{
			get
			{
				return this._jkp_Persons;
			}
			set
			{
				this._jkp_Persons.Assign(value);
			}
		}
		
		[Association(Name="jkp_Sangha_jkp_PersonSangha", Storage="_jkp_PersonSanghas", ThisKey="San_ID", OtherKey="PS_San_ID")]
		public EntitySet<jkp_PersonSangha> jkp_PersonSanghas
		{
			get
			{
				return this._jkp_PersonSanghas;
			}
			set
			{
				this._jkp_PersonSanghas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Addresses(jkp_Address entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Sangha = this;
		}
		
		private void detach_jkp_Addresses(jkp_Address entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Sangha = null;
		}
		
		private void attach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Sangha = this;
		}
		
		private void detach_jkp_Persons(jkp_Person entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Sangha = null;
		}
		
		private void attach_jkp_PersonSanghas(jkp_PersonSangha entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Sangha = this;
		}
		
		private void detach_jkp_PersonSanghas(jkp_PersonSangha entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Sangha = null;
		}
	}
	
	[Table(Name="dbo.jkp_Site")]
	public partial class jkp_Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Site_ID;
		
		private System.Nullable<System.Guid> _Site_Add_ID;
		
		private string _Site_VietnameseName;
		
		private string _Site_EnglishName;
		
		private string _Site_LocalName;
		
		private string _Site_Website;
		
		private string _Site_Description;
		
		private string _Site_Comment;
		
		private EntitySet<jkp_Hamlet> _jkp_Hamlets;
		
		private EntitySet<jkp_Retreat> _jkp_Retreats;
		
		private EntityRef<jkp_Address> _jkp_Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSite_IDChanging(System.Guid value);
    partial void OnSite_IDChanged();
    partial void OnSite_Add_IDChanging(System.Nullable<System.Guid> value);
    partial void OnSite_Add_IDChanged();
    partial void OnSite_VietnameseNameChanging(string value);
    partial void OnSite_VietnameseNameChanged();
    partial void OnSite_EnglishNameChanging(string value);
    partial void OnSite_EnglishNameChanged();
    partial void OnSite_LocalNameChanging(string value);
    partial void OnSite_LocalNameChanged();
    partial void OnSite_WebsiteChanging(string value);
    partial void OnSite_WebsiteChanged();
    partial void OnSite_DescriptionChanging(string value);
    partial void OnSite_DescriptionChanged();
    partial void OnSite_CommentChanging(string value);
    partial void OnSite_CommentChanged();
    #endregion
		
		public jkp_Site()
		{
			this._jkp_Hamlets = new EntitySet<jkp_Hamlet>(new Action<jkp_Hamlet>(this.attach_jkp_Hamlets), new Action<jkp_Hamlet>(this.detach_jkp_Hamlets));
			this._jkp_Retreats = new EntitySet<jkp_Retreat>(new Action<jkp_Retreat>(this.attach_jkp_Retreats), new Action<jkp_Retreat>(this.detach_jkp_Retreats));
			this._jkp_Address = default(EntityRef<jkp_Address>);
			OnCreated();
		}
		
		[Column(Storage="_Site_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Site_ID
		{
			get
			{
				return this._Site_ID;
			}
			set
			{
				if ((this._Site_ID != value))
				{
					this.OnSite_IDChanging(value);
					this.SendPropertyChanging();
					this._Site_ID = value;
					this.SendPropertyChanged("Site_ID");
					this.OnSite_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Add_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Site_Add_ID
		{
			get
			{
				return this._Site_Add_ID;
			}
			set
			{
				if ((this._Site_Add_ID != value))
				{
					if (this._jkp_Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSite_Add_IDChanging(value);
					this.SendPropertyChanging();
					this._Site_Add_ID = value;
					this.SendPropertyChanged("Site_Add_ID");
					this.OnSite_Add_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Site_VietnameseName", DbType="VarChar(50)")]
		public string Site_VietnameseName
		{
			get
			{
				return this._Site_VietnameseName;
			}
			set
			{
				if ((this._Site_VietnameseName != value))
				{
					this.OnSite_VietnameseNameChanging(value);
					this.SendPropertyChanging();
					this._Site_VietnameseName = value;
					this.SendPropertyChanged("Site_VietnameseName");
					this.OnSite_VietnameseNameChanged();
				}
			}
		}
		
		[Column(Storage="_Site_EnglishName", DbType="VarChar(50)")]
		public string Site_EnglishName
		{
			get
			{
				return this._Site_EnglishName;
			}
			set
			{
				if ((this._Site_EnglishName != value))
				{
					this.OnSite_EnglishNameChanging(value);
					this.SendPropertyChanging();
					this._Site_EnglishName = value;
					this.SendPropertyChanged("Site_EnglishName");
					this.OnSite_EnglishNameChanged();
				}
			}
		}
		
		[Column(Storage="_Site_LocalName", DbType="VarChar(50)")]
		public string Site_LocalName
		{
			get
			{
				return this._Site_LocalName;
			}
			set
			{
				if ((this._Site_LocalName != value))
				{
					this.OnSite_LocalNameChanging(value);
					this.SendPropertyChanging();
					this._Site_LocalName = value;
					this.SendPropertyChanged("Site_LocalName");
					this.OnSite_LocalNameChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Website", DbType="VarChar(255)")]
		public string Site_Website
		{
			get
			{
				return this._Site_Website;
			}
			set
			{
				if ((this._Site_Website != value))
				{
					this.OnSite_WebsiteChanging(value);
					this.SendPropertyChanging();
					this._Site_Website = value;
					this.SendPropertyChanged("Site_Website");
					this.OnSite_WebsiteChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Site_Description
		{
			get
			{
				return this._Site_Description;
			}
			set
			{
				if ((this._Site_Description != value))
				{
					this.OnSite_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Site_Description = value;
					this.SendPropertyChanged("Site_Description");
					this.OnSite_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Site_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Site_Comment
		{
			get
			{
				return this._Site_Comment;
			}
			set
			{
				if ((this._Site_Comment != value))
				{
					this.OnSite_CommentChanging(value);
					this.SendPropertyChanging();
					this._Site_Comment = value;
					this.SendPropertyChanged("Site_Comment");
					this.OnSite_CommentChanged();
				}
			}
		}
		
		[Association(Name="jkp_Site_jkp_Hamlet", Storage="_jkp_Hamlets", ThisKey="Site_ID", OtherKey="Ham_Site_ID")]
		public EntitySet<jkp_Hamlet> jkp_Hamlets
		{
			get
			{
				return this._jkp_Hamlets;
			}
			set
			{
				this._jkp_Hamlets.Assign(value);
			}
		}
		
		[Association(Name="jkp_Site_jkp_Retreat", Storage="_jkp_Retreats", ThisKey="Site_ID", OtherKey="Ret_Site_ID")]
		public EntitySet<jkp_Retreat> jkp_Retreats
		{
			get
			{
				return this._jkp_Retreats;
			}
			set
			{
				this._jkp_Retreats.Assign(value);
			}
		}
		
		[Association(Name="jkp_Address_jkp_Site", Storage="_jkp_Address", ThisKey="Site_Add_ID", OtherKey="Add_ID", IsForeignKey=true)]
		public jkp_Address jkp_Address
		{
			get
			{
				return this._jkp_Address.Entity;
			}
			set
			{
				jkp_Address previousValue = this._jkp_Address.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Address.Entity = null;
						previousValue.jkp_Sites.Remove(this);
					}
					this._jkp_Address.Entity = value;
					if ((value != null))
					{
						value.jkp_Sites.Add(this);
						this._Site_Add_ID = value.Add_ID;
					}
					else
					{
						this._Site_Add_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_Hamlets(jkp_Hamlet entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Site = this;
		}
		
		private void detach_jkp_Hamlets(jkp_Hamlet entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Site = null;
		}
		
		private void attach_jkp_Retreats(jkp_Retreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Site = this;
		}
		
		private void detach_jkp_Retreats(jkp_Retreat entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Site = null;
		}
	}
	
	[Table(Name="dbo.jkp_Tables")]
	public partial class jkp_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _T_ID;
		
		private string _T_Name;
		
		private EntitySet<jkp_AuthorityTablesAction> _jkp_AuthorityTablesActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnT_IDChanging(System.Guid value);
    partial void OnT_IDChanged();
    partial void OnT_NameChanging(string value);
    partial void OnT_NameChanged();
    #endregion
		
		public jkp_Table()
		{
			this._jkp_AuthorityTablesActions = new EntitySet<jkp_AuthorityTablesAction>(new Action<jkp_AuthorityTablesAction>(this.attach_jkp_AuthorityTablesActions), new Action<jkp_AuthorityTablesAction>(this.detach_jkp_AuthorityTablesActions));
			OnCreated();
		}
		
		[Column(Storage="_T_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid T_ID
		{
			get
			{
				return this._T_ID;
			}
			set
			{
				if ((this._T_ID != value))
				{
					this.OnT_IDChanging(value);
					this.SendPropertyChanging();
					this._T_ID = value;
					this.SendPropertyChanged("T_ID");
					this.OnT_IDChanged();
				}
			}
		}
		
		[Column(Storage="_T_Name", DbType="VarChar(30)")]
		public string T_Name
		{
			get
			{
				return this._T_Name;
			}
			set
			{
				if ((this._T_Name != value))
				{
					this.OnT_NameChanging(value);
					this.SendPropertyChanging();
					this._T_Name = value;
					this.SendPropertyChanged("T_Name");
					this.OnT_NameChanged();
				}
			}
		}
		
		[Association(Name="jkp_Table_jkp_AuthorityTablesAction", Storage="_jkp_AuthorityTablesActions", ThisKey="T_ID", OtherKey="ATA_T_ID")]
		public EntitySet<jkp_AuthorityTablesAction> jkp_AuthorityTablesActions
		{
			get
			{
				return this._jkp_AuthorityTablesActions;
			}
			set
			{
				this._jkp_AuthorityTablesActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_AuthorityTablesActions(jkp_AuthorityTablesAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Table = this;
		}
		
		private void detach_jkp_AuthorityTablesActions(jkp_AuthorityTablesAction entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Table = null;
		}
	}
	
	[Table(Name="dbo.jkp_Training")]
	public partial class jkp_Training : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Train_ID;
		
		private System.Nullable<System.Guid> _Train_Act_ID;
		
		private string _Train_Type;
		
		private EntitySet<jkp_PersonReceivesTraining> _jkp_PersonReceivesTrainings;
		
		private EntitySet<jkp_PersonTransmitsTraining> _jkp_PersonTransmitsTrainings;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrain_IDChanging(System.Guid value);
    partial void OnTrain_IDChanged();
    partial void OnTrain_Act_IDChanging(System.Nullable<System.Guid> value);
    partial void OnTrain_Act_IDChanged();
    partial void OnTrain_TypeChanging(string value);
    partial void OnTrain_TypeChanged();
    #endregion
		
		public jkp_Training()
		{
			this._jkp_PersonReceivesTrainings = new EntitySet<jkp_PersonReceivesTraining>(new Action<jkp_PersonReceivesTraining>(this.attach_jkp_PersonReceivesTrainings), new Action<jkp_PersonReceivesTraining>(this.detach_jkp_PersonReceivesTrainings));
			this._jkp_PersonTransmitsTrainings = new EntitySet<jkp_PersonTransmitsTraining>(new Action<jkp_PersonTransmitsTraining>(this.attach_jkp_PersonTransmitsTrainings), new Action<jkp_PersonTransmitsTraining>(this.detach_jkp_PersonTransmitsTrainings));
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			OnCreated();
		}
		
		[Column(Storage="_Train_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Train_ID
		{
			get
			{
				return this._Train_ID;
			}
			set
			{
				if ((this._Train_ID != value))
				{
					this.OnTrain_IDChanging(value);
					this.SendPropertyChanging();
					this._Train_ID = value;
					this.SendPropertyChanged("Train_ID");
					this.OnTrain_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Train_Act_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Train_Act_ID
		{
			get
			{
				return this._Train_Act_ID;
			}
			set
			{
				if ((this._Train_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrain_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._Train_Act_ID = value;
					this.SendPropertyChanged("Train_Act_ID");
					this.OnTrain_Act_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Train_Type", DbType="VarChar(50)")]
		public string Train_Type
		{
			get
			{
				return this._Train_Type;
			}
			set
			{
				if ((this._Train_Type != value))
				{
					this.OnTrain_TypeChanging(value);
					this.SendPropertyChanging();
					this._Train_Type = value;
					this.SendPropertyChanged("Train_Type");
					this.OnTrain_TypeChanged();
				}
			}
		}
		
		[Association(Name="jkp_Training_jkp_PersonReceivesTraining", Storage="_jkp_PersonReceivesTrainings", ThisKey="Train_ID", OtherKey="PRT_Train_ID")]
		public EntitySet<jkp_PersonReceivesTraining> jkp_PersonReceivesTrainings
		{
			get
			{
				return this._jkp_PersonReceivesTrainings;
			}
			set
			{
				this._jkp_PersonReceivesTrainings.Assign(value);
			}
		}
		
		[Association(Name="jkp_Training_jkp_PersonTransmitsTraining", Storage="_jkp_PersonTransmitsTrainings", ThisKey="Train_ID", OtherKey="PTT_Train_ID")]
		public EntitySet<jkp_PersonTransmitsTraining> jkp_PersonTransmitsTrainings
		{
			get
			{
				return this._jkp_PersonTransmitsTrainings;
			}
			set
			{
				this._jkp_PersonTransmitsTrainings.Assign(value);
			}
		}
		
		[Association(Name="jkp_Activity_jkp_Training", Storage="_jkp_Activity", ThisKey="Train_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_Trainings.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_Trainings.Add(this);
						this._Train_Act_ID = value.Act_ID;
					}
					else
					{
						this._Train_Act_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_PersonReceivesTrainings(jkp_PersonReceivesTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Training = this;
		}
		
		private void detach_jkp_PersonReceivesTrainings(jkp_PersonReceivesTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Training = null;
		}
		
		private void attach_jkp_PersonTransmitsTrainings(jkp_PersonTransmitsTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Training = this;
		}
		
		private void detach_jkp_PersonTransmitsTrainings(jkp_PersonTransmitsTraining entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Training = null;
		}
	}
	
	[Table(Name="dbo.jkp_Video")]
	public partial class jkp_Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Vid_ID;
		
		private string _Vid_Pathname;
		
		private System.Nullable<int> _Vid_Size;
		
		private System.Nullable<decimal> _Vid_Duration;
		
		private string _Vid_DateAdded;
		
		private string _Vid_DateModified;
		
		private string _Vid_Title;
		
		private string _Vid_Genre;
		
		private string _Vid_Language;
		
		private string _Vid_Subject;
		
		private string _Vid_Credits;
		
		private string _Vid_Contents;
		
		private string _Vid_Description;
		
		private string _Vid_Summary;
		
		private System.Nullable<int> _Vid_Year;
		
		private System.Nullable<int> _Vid_Disc_Number;
		
		private System.Nullable<System.Guid> _Vid_Coll_ID;
		
		private string _Vid_Comment;
		
		private System.Nullable<System.Guid> _Vid_FileTypeId;
		
		private string _Vid_PreviewSmallUrl;
		
		private string _Vid_PreviewMediumUrl;
		
		private System.Nullable<System.Guid> _Vid_Presenter;
		
		private bool _Vid_Featured;
		
		private EntitySet<jkp_MediaRole> _jkp_MediaRoles;
		
		private EntitySet<jkp_PersonVideo> _jkp_PersonVideos;
		
		private EntitySet<jkp_VideoActivity> _jkp_VideoActivities;
		
		private EntityRef<jkp_FileType> _jkp_FileType;
		
		private EntityRef<jkp_Person> _jkp_Person;
		
		private EntityRef<jkp_Collection> _jkp_Collection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVid_IDChanging(System.Guid value);
    partial void OnVid_IDChanged();
    partial void OnVid_PathnameChanging(string value);
    partial void OnVid_PathnameChanged();
    partial void OnVid_SizeChanging(System.Nullable<int> value);
    partial void OnVid_SizeChanged();
    partial void OnVid_DurationChanging(System.Nullable<decimal> value);
    partial void OnVid_DurationChanged();
    partial void OnVid_DateAddedChanging(string value);
    partial void OnVid_DateAddedChanged();
    partial void OnVid_DateModifiedChanging(string value);
    partial void OnVid_DateModifiedChanged();
    partial void OnVid_TitleChanging(string value);
    partial void OnVid_TitleChanged();
    partial void OnVid_GenreChanging(string value);
    partial void OnVid_GenreChanged();
    partial void OnVid_LanguageChanging(string value);
    partial void OnVid_LanguageChanged();
    partial void OnVid_SubjectChanging(string value);
    partial void OnVid_SubjectChanged();
    partial void OnVid_CreditsChanging(string value);
    partial void OnVid_CreditsChanged();
    partial void OnVid_ContentsChanging(string value);
    partial void OnVid_ContentsChanged();
    partial void OnVid_DescriptionChanging(string value);
    partial void OnVid_DescriptionChanged();
    partial void OnVid_SummaryChanging(string value);
    partial void OnVid_SummaryChanged();
    partial void OnVid_YearChanging(System.Nullable<int> value);
    partial void OnVid_YearChanged();
    partial void OnVid_Disc_NumberChanging(System.Nullable<int> value);
    partial void OnVid_Disc_NumberChanged();
    partial void OnVid_Coll_IDChanging(System.Nullable<System.Guid> value);
    partial void OnVid_Coll_IDChanged();
    partial void OnVid_CommentChanging(string value);
    partial void OnVid_CommentChanged();
    partial void OnVid_FileTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnVid_FileTypeIdChanged();
    partial void OnVid_PreviewSmallUrlChanging(string value);
    partial void OnVid_PreviewSmallUrlChanged();
    partial void OnVid_PreviewMediumUrlChanging(string value);
    partial void OnVid_PreviewMediumUrlChanged();
    partial void OnVid_PresenterChanging(System.Nullable<System.Guid> value);
    partial void OnVid_PresenterChanged();
    partial void OnVid_FeaturedChanging(bool value);
    partial void OnVid_FeaturedChanged();
    #endregion
		
		public jkp_Video()
		{
			this._jkp_MediaRoles = new EntitySet<jkp_MediaRole>(new Action<jkp_MediaRole>(this.attach_jkp_MediaRoles), new Action<jkp_MediaRole>(this.detach_jkp_MediaRoles));
			this._jkp_PersonVideos = new EntitySet<jkp_PersonVideo>(new Action<jkp_PersonVideo>(this.attach_jkp_PersonVideos), new Action<jkp_PersonVideo>(this.detach_jkp_PersonVideos));
			this._jkp_VideoActivities = new EntitySet<jkp_VideoActivity>(new Action<jkp_VideoActivity>(this.attach_jkp_VideoActivities), new Action<jkp_VideoActivity>(this.detach_jkp_VideoActivities));
			this._jkp_FileType = default(EntityRef<jkp_FileType>);
			this._jkp_Person = default(EntityRef<jkp_Person>);
			this._jkp_Collection = default(EntityRef<jkp_Collection>);
			OnCreated();
		}
		
		[Column(Storage="_Vid_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Vid_ID
		{
			get
			{
				return this._Vid_ID;
			}
			set
			{
				if ((this._Vid_ID != value))
				{
					this.OnVid_IDChanging(value);
					this.SendPropertyChanging();
					this._Vid_ID = value;
					this.SendPropertyChanged("Vid_ID");
					this.OnVid_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Pathname", DbType="VarChar(255)")]
		public string Vid_Pathname
		{
			get
			{
				return this._Vid_Pathname;
			}
			set
			{
				if ((this._Vid_Pathname != value))
				{
					this.OnVid_PathnameChanging(value);
					this.SendPropertyChanging();
					this._Vid_Pathname = value;
					this.SendPropertyChanged("Vid_Pathname");
					this.OnVid_PathnameChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Size", DbType="Int")]
		public System.Nullable<int> Vid_Size
		{
			get
			{
				return this._Vid_Size;
			}
			set
			{
				if ((this._Vid_Size != value))
				{
					this.OnVid_SizeChanging(value);
					this.SendPropertyChanging();
					this._Vid_Size = value;
					this.SendPropertyChanged("Vid_Size");
					this.OnVid_SizeChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Duration", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Vid_Duration
		{
			get
			{
				return this._Vid_Duration;
			}
			set
			{
				if ((this._Vid_Duration != value))
				{
					this.OnVid_DurationChanging(value);
					this.SendPropertyChanging();
					this._Vid_Duration = value;
					this.SendPropertyChanged("Vid_Duration");
					this.OnVid_DurationChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_DateAdded", DbType="VarChar(10)")]
		public string Vid_DateAdded
		{
			get
			{
				return this._Vid_DateAdded;
			}
			set
			{
				if ((this._Vid_DateAdded != value))
				{
					this.OnVid_DateAddedChanging(value);
					this.SendPropertyChanging();
					this._Vid_DateAdded = value;
					this.SendPropertyChanged("Vid_DateAdded");
					this.OnVid_DateAddedChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_DateModified", DbType="VarChar(10)")]
		public string Vid_DateModified
		{
			get
			{
				return this._Vid_DateModified;
			}
			set
			{
				if ((this._Vid_DateModified != value))
				{
					this.OnVid_DateModifiedChanging(value);
					this.SendPropertyChanging();
					this._Vid_DateModified = value;
					this.SendPropertyChanged("Vid_DateModified");
					this.OnVid_DateModifiedChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Title", DbType="VarChar(100)")]
		public string Vid_Title
		{
			get
			{
				return this._Vid_Title;
			}
			set
			{
				if ((this._Vid_Title != value))
				{
					this.OnVid_TitleChanging(value);
					this.SendPropertyChanging();
					this._Vid_Title = value;
					this.SendPropertyChanged("Vid_Title");
					this.OnVid_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Genre", DbType="VarChar(50)")]
		public string Vid_Genre
		{
			get
			{
				return this._Vid_Genre;
			}
			set
			{
				if ((this._Vid_Genre != value))
				{
					this.OnVid_GenreChanging(value);
					this.SendPropertyChanging();
					this._Vid_Genre = value;
					this.SendPropertyChanged("Vid_Genre");
					this.OnVid_GenreChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Language", DbType="VarChar(20)")]
		public string Vid_Language
		{
			get
			{
				return this._Vid_Language;
			}
			set
			{
				if ((this._Vid_Language != value))
				{
					this.OnVid_LanguageChanging(value);
					this.SendPropertyChanging();
					this._Vid_Language = value;
					this.SendPropertyChanged("Vid_Language");
					this.OnVid_LanguageChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Subject", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Vid_Subject
		{
			get
			{
				return this._Vid_Subject;
			}
			set
			{
				if ((this._Vid_Subject != value))
				{
					this.OnVid_SubjectChanging(value);
					this.SendPropertyChanging();
					this._Vid_Subject = value;
					this.SendPropertyChanged("Vid_Subject");
					this.OnVid_SubjectChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Credits", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Vid_Credits
		{
			get
			{
				return this._Vid_Credits;
			}
			set
			{
				if ((this._Vid_Credits != value))
				{
					this.OnVid_CreditsChanging(value);
					this.SendPropertyChanging();
					this._Vid_Credits = value;
					this.SendPropertyChanged("Vid_Credits");
					this.OnVid_CreditsChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Contents", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Vid_Contents
		{
			get
			{
				return this._Vid_Contents;
			}
			set
			{
				if ((this._Vid_Contents != value))
				{
					this.OnVid_ContentsChanging(value);
					this.SendPropertyChanging();
					this._Vid_Contents = value;
					this.SendPropertyChanged("Vid_Contents");
					this.OnVid_ContentsChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Vid_Description
		{
			get
			{
				return this._Vid_Description;
			}
			set
			{
				if ((this._Vid_Description != value))
				{
					this.OnVid_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Vid_Description = value;
					this.SendPropertyChanged("Vid_Description");
					this.OnVid_DescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Vid_Summary
		{
			get
			{
				return this._Vid_Summary;
			}
			set
			{
				if ((this._Vid_Summary != value))
				{
					this.OnVid_SummaryChanging(value);
					this.SendPropertyChanging();
					this._Vid_Summary = value;
					this.SendPropertyChanged("Vid_Summary");
					this.OnVid_SummaryChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Year", DbType="Int")]
		public System.Nullable<int> Vid_Year
		{
			get
			{
				return this._Vid_Year;
			}
			set
			{
				if ((this._Vid_Year != value))
				{
					this.OnVid_YearChanging(value);
					this.SendPropertyChanging();
					this._Vid_Year = value;
					this.SendPropertyChanged("Vid_Year");
					this.OnVid_YearChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Disc_Number", DbType="Int")]
		public System.Nullable<int> Vid_Disc_Number
		{
			get
			{
				return this._Vid_Disc_Number;
			}
			set
			{
				if ((this._Vid_Disc_Number != value))
				{
					this.OnVid_Disc_NumberChanging(value);
					this.SendPropertyChanging();
					this._Vid_Disc_Number = value;
					this.SendPropertyChanged("Vid_Disc_Number");
					this.OnVid_Disc_NumberChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Coll_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Vid_Coll_ID
		{
			get
			{
				return this._Vid_Coll_ID;
			}
			set
			{
				if ((this._Vid_Coll_ID != value))
				{
					if (this._jkp_Collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVid_Coll_IDChanging(value);
					this.SendPropertyChanging();
					this._Vid_Coll_ID = value;
					this.SendPropertyChanged("Vid_Coll_ID");
					this.OnVid_Coll_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Vid_Comment
		{
			get
			{
				return this._Vid_Comment;
			}
			set
			{
				if ((this._Vid_Comment != value))
				{
					this.OnVid_CommentChanging(value);
					this.SendPropertyChanging();
					this._Vid_Comment = value;
					this.SendPropertyChanged("Vid_Comment");
					this.OnVid_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_FileTypeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Vid_FileTypeId
		{
			get
			{
				return this._Vid_FileTypeId;
			}
			set
			{
				if ((this._Vid_FileTypeId != value))
				{
					if (this._jkp_FileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVid_FileTypeIdChanging(value);
					this.SendPropertyChanging();
					this._Vid_FileTypeId = value;
					this.SendPropertyChanged("Vid_FileTypeId");
					this.OnVid_FileTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_PreviewSmallUrl", DbType="VarChar(200)")]
		public string Vid_PreviewSmallUrl
		{
			get
			{
				return this._Vid_PreviewSmallUrl;
			}
			set
			{
				if ((this._Vid_PreviewSmallUrl != value))
				{
					this.OnVid_PreviewSmallUrlChanging(value);
					this.SendPropertyChanging();
					this._Vid_PreviewSmallUrl = value;
					this.SendPropertyChanged("Vid_PreviewSmallUrl");
					this.OnVid_PreviewSmallUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_PreviewMediumUrl", DbType="VarChar(200)")]
		public string Vid_PreviewMediumUrl
		{
			get
			{
				return this._Vid_PreviewMediumUrl;
			}
			set
			{
				if ((this._Vid_PreviewMediumUrl != value))
				{
					this.OnVid_PreviewMediumUrlChanging(value);
					this.SendPropertyChanging();
					this._Vid_PreviewMediumUrl = value;
					this.SendPropertyChanged("Vid_PreviewMediumUrl");
					this.OnVid_PreviewMediumUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Presenter", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Vid_Presenter
		{
			get
			{
				return this._Vid_Presenter;
			}
			set
			{
				if ((this._Vid_Presenter != value))
				{
					if (this._jkp_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVid_PresenterChanging(value);
					this.SendPropertyChanging();
					this._Vid_Presenter = value;
					this.SendPropertyChanged("Vid_Presenter");
					this.OnVid_PresenterChanged();
				}
			}
		}
		
		[Column(Storage="_Vid_Featured", DbType="Bit NOT NULL")]
		public bool Vid_Featured
		{
			get
			{
				return this._Vid_Featured;
			}
			set
			{
				if ((this._Vid_Featured != value))
				{
					this.OnVid_FeaturedChanging(value);
					this.SendPropertyChanging();
					this._Vid_Featured = value;
					this.SendPropertyChanged("Vid_Featured");
					this.OnVid_FeaturedChanged();
				}
			}
		}
		
		[Association(Name="jkp_Video_jkp_MediaRole", Storage="_jkp_MediaRoles", ThisKey="Vid_ID", OtherKey="VideoId")]
		public EntitySet<jkp_MediaRole> jkp_MediaRoles
		{
			get
			{
				return this._jkp_MediaRoles;
			}
			set
			{
				this._jkp_MediaRoles.Assign(value);
			}
		}
		
		[Association(Name="jkp_Video_jkp_PersonVideo", Storage="_jkp_PersonVideos", ThisKey="Vid_ID", OtherKey="PV_Vid_ID")]
		public EntitySet<jkp_PersonVideo> jkp_PersonVideos
		{
			get
			{
				return this._jkp_PersonVideos;
			}
			set
			{
				this._jkp_PersonVideos.Assign(value);
			}
		}
		
		[Association(Name="jkp_Video_jkp_VideoActivity", Storage="_jkp_VideoActivities", ThisKey="Vid_ID", OtherKey="VA_Vid_ID")]
		public EntitySet<jkp_VideoActivity> jkp_VideoActivities
		{
			get
			{
				return this._jkp_VideoActivities;
			}
			set
			{
				this._jkp_VideoActivities.Assign(value);
			}
		}
		
		[Association(Name="jkp_FileType_jkp_Video", Storage="_jkp_FileType", ThisKey="Vid_FileTypeId", OtherKey="For_ID", IsForeignKey=true)]
		public jkp_FileType jkp_FileType
		{
			get
			{
				return this._jkp_FileType.Entity;
			}
			set
			{
				jkp_FileType previousValue = this._jkp_FileType.Entity;
				if (((previousValue != value) 
							|| (this._jkp_FileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_FileType.Entity = null;
						previousValue.jkp_Videos.Remove(this);
					}
					this._jkp_FileType.Entity = value;
					if ((value != null))
					{
						value.jkp_Videos.Add(this);
						this._Vid_FileTypeId = value.For_ID;
					}
					else
					{
						this._Vid_FileTypeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_FileType");
				}
			}
		}
		
		[Association(Name="jkp_Person_jkp_Video", Storage="_jkp_Person", ThisKey="Vid_Presenter", OtherKey="Per_ID", IsForeignKey=true)]
		public jkp_Person jkp_Person
		{
			get
			{
				return this._jkp_Person.Entity;
			}
			set
			{
				jkp_Person previousValue = this._jkp_Person.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Person.Entity = null;
						previousValue.jkp_Videos.Remove(this);
					}
					this._jkp_Person.Entity = value;
					if ((value != null))
					{
						value.jkp_Videos.Add(this);
						this._Vid_Presenter = value.Per_ID;
					}
					else
					{
						this._Vid_Presenter = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Person");
				}
			}
		}
		
		[Association(Name="jkp_Collection_jkp_Video", Storage="_jkp_Collection", ThisKey="Vid_Coll_ID", OtherKey="Coll_ID", IsForeignKey=true)]
		public jkp_Collection jkp_Collection
		{
			get
			{
				return this._jkp_Collection.Entity;
			}
			set
			{
				jkp_Collection previousValue = this._jkp_Collection.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Collection.Entity = null;
						previousValue.jkp_Videos.Remove(this);
					}
					this._jkp_Collection.Entity = value;
					if ((value != null))
					{
						value.jkp_Videos.Add(this);
						this._Vid_Coll_ID = value.Coll_ID;
					}
					else
					{
						this._Vid_Coll_ID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("jkp_Collection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Video = this;
		}
		
		private void detach_jkp_MediaRoles(jkp_MediaRole entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Video = null;
		}
		
		private void attach_jkp_PersonVideos(jkp_PersonVideo entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Video = this;
		}
		
		private void detach_jkp_PersonVideos(jkp_PersonVideo entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Video = null;
		}
		
		private void attach_jkp_VideoActivities(jkp_VideoActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Video = this;
		}
		
		private void detach_jkp_VideoActivities(jkp_VideoActivity entity)
		{
			this.SendPropertyChanging();
			entity.jkp_Video = null;
		}
	}
	
	[Table(Name="dbo.jkp_VideoActivity")]
	public partial class jkp_VideoActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _VA_Vid_ID;
		
		private System.Guid _VA_Act_ID;
		
		private EntityRef<jkp_Activity> _jkp_Activity;
		
		private EntityRef<jkp_Video> _jkp_Video;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVA_Vid_IDChanging(System.Guid value);
    partial void OnVA_Vid_IDChanged();
    partial void OnVA_Act_IDChanging(System.Guid value);
    partial void OnVA_Act_IDChanged();
    #endregion
		
		public jkp_VideoActivity()
		{
			this._jkp_Activity = default(EntityRef<jkp_Activity>);
			this._jkp_Video = default(EntityRef<jkp_Video>);
			OnCreated();
		}
		
		[Column(Storage="_VA_Vid_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VA_Vid_ID
		{
			get
			{
				return this._VA_Vid_ID;
			}
			set
			{
				if ((this._VA_Vid_ID != value))
				{
					if (this._jkp_Video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVA_Vid_IDChanging(value);
					this.SendPropertyChanging();
					this._VA_Vid_ID = value;
					this.SendPropertyChanged("VA_Vid_ID");
					this.OnVA_Vid_IDChanged();
				}
			}
		}
		
		[Column(Storage="_VA_Act_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid VA_Act_ID
		{
			get
			{
				return this._VA_Act_ID;
			}
			set
			{
				if ((this._VA_Act_ID != value))
				{
					if (this._jkp_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVA_Act_IDChanging(value);
					this.SendPropertyChanging();
					this._VA_Act_ID = value;
					this.SendPropertyChanged("VA_Act_ID");
					this.OnVA_Act_IDChanged();
				}
			}
		}
		
		[Association(Name="jkp_Activity_jkp_VideoActivity", Storage="_jkp_Activity", ThisKey="VA_Act_ID", OtherKey="Act_ID", IsForeignKey=true)]
		public jkp_Activity jkp_Activity
		{
			get
			{
				return this._jkp_Activity.Entity;
			}
			set
			{
				jkp_Activity previousValue = this._jkp_Activity.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Activity.Entity = null;
						previousValue.jkp_VideoActivities.Remove(this);
					}
					this._jkp_Activity.Entity = value;
					if ((value != null))
					{
						value.jkp_VideoActivities.Add(this);
						this._VA_Act_ID = value.Act_ID;
					}
					else
					{
						this._VA_Act_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Activity");
				}
			}
		}
		
		[Association(Name="jkp_Video_jkp_VideoActivity", Storage="_jkp_Video", ThisKey="VA_Vid_ID", OtherKey="Vid_ID", IsForeignKey=true)]
		public jkp_Video jkp_Video
		{
			get
			{
				return this._jkp_Video.Entity;
			}
			set
			{
				jkp_Video previousValue = this._jkp_Video.Entity;
				if (((previousValue != value) 
							|| (this._jkp_Video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jkp_Video.Entity = null;
						previousValue.jkp_VideoActivities.Remove(this);
					}
					this._jkp_Video.Entity = value;
					if ((value != null))
					{
						value.jkp_VideoActivities.Add(this);
						this._VA_Vid_ID = value.Vid_ID;
					}
					else
					{
						this._VA_Vid_ID = default(System.Guid);
					}
					this.SendPropertyChanged("jkp_Video");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
