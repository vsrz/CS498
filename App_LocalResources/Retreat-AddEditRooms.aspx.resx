<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCreateARoom" xml:space="preserve">
    <value>Create a Room</value>
  </data>
  <data name="btnCreateBuilding" xml:space="preserve">
    <value>Create Building</value>
  </data>
  <data name="btnCreateHamlet" xml:space="preserve">
    <value>Create Hamlet</value>
  </data>
  <data name="btnCreateHamletCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnCreateRoom" xml:space="preserve">
    <value>Create Room</value>
  </data>
  <data name="btnCreateRoomCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="litActivitiesInstructions" xml:space="preserve">
    <value>Activities can be added to this event once it is created.</value>
  </data>
  <data name="litAddEditRoomsForRetreat" xml:space="preserve">
    <value>Add / Edit Rooms For Retreat</value>
  </data>
  <data name="litAddEditRoomsInstructions" xml:space="preserve">
    <value>Rooms always exist in the system. This page lets you see all of the rooms that exist during a retreat. If you need to setup tents for the retreat or bring in a mobile trailer, you can create a new "room" and set the "Construction" date for the room as when the tent or mobile trailer will be ready for people to occupy it and set the "Destruction" date for when the room/tent/mobile trailer will be removed from the site. For a room in a building that's going to exist for a long time, don't delete it if you don't want to use it for the retreat. The "Construction" date and time MUST be before people arrive for the retreat and the "Destruction".</value>
  </data>
  <data name="litAirConditioning" xml:space="preserve">
    <value>Air Conditioning:</value>
  </data>
  <data name="litArrivalTime" xml:space="preserve">
    <value>Arrival Time</value>
  </data>
  <data name="litAssignRoomsToPeople" xml:space="preserve">
    <value>Assign Rooms To People (Only after you first create rooms for this retreat)</value>
  </data>
  <data name="litBathroom" xml:space="preserve">
    <value>Bathroom:</value>
  </data>
  <data name="litBuilding" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="litCapacity" xml:space="preserve">
    <value>Capacity</value>
  </data>
  <data name="litConstructedDate" xml:space="preserve">
    <value>Constructed Date:</value>
  </data>
  <data name="litCreateHamlet" xml:space="preserve">
    <value>Create Hamlet</value>
  </data>
  <data name="litCreateSite" xml:space="preserve">
    <value>Create New Site</value>
  </data>
  <data name="litCreationDate" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="litDepartureTime" xml:space="preserve">
    <value>Departure Time</value>
  </data>
  <data name="litDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="litDestructionDate" xml:space="preserve">
    <value>Destruction Date:</value>
  </data>
  <data name="litEndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="litEnglishName" xml:space="preserve">
    <value>English Name:</value>
  </data>
  <data name="litFloorNumber" xml:space="preserve">
    <value>Floor Number:</value>
  </data>
  <data name="litInstructionsTitle" xml:space="preserve">
    <value>Instructions</value>
  </data>
  <data name="litLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="litLocalName" xml:space="preserve">
    <value>Local Name:</value>
  </data>
  <data name="litLowerBunkBed" xml:space="preserve">
    <value>Lower Bunk Bed:</value>
  </data>
  <data name="litName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="litPageTitle" xml:space="preserve">
    <value>Retreat Add / Edit</value>
  </data>
  <data name="litPrivateShower" xml:space="preserve">
    <value>Private Shower:</value>
  </data>
  <data name="litRetreatSaved" xml:space="preserve">
    <value>Retreat Saved</value>
  </data>
  <data name="litRetreatSavedSuccess" xml:space="preserve">
    <value>The retreat has been successfully saved.</value>
  </data>
  <data name="litRetreatUsage" xml:space="preserve">
    <value>Retreat Usage</value>
  </data>
  <data name="litReturnToRetreatTools" xml:space="preserve">
    <value>Return To Retreat Tools</value>
  </data>
  <data name="litRoom" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="litRoomCapacity" xml:space="preserve">
    <value>Room Capacity</value>
  </data>
  <data name="litRoomName" xml:space="preserve">
    <value>Room Name:</value>
  </data>
  <data name="litRoomType" xml:space="preserve">
    <value>Room Type:</value>
  </data>
  <data name="litRoomTypeDetails" xml:space="preserve">
    <value>Room Type Details</value>
  </data>
  <data name="litSingleBed" xml:space="preserve">
    <value>Single Bed:</value>
  </data>
  <data name="litSite" xml:space="preserve">
    <value>Site</value>
  </data>
  <data name="litStartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="litTasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="litUpperBunkBed" xml:space="preserve">
    <value>Upper Bunk Bed:</value>
  </data>
  <data name="litVietnameseName" xml:space="preserve">
    <value>Vietnamese Name</value>
  </data>
  <data name="rfvRoomNameValidatorErrorMessage" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="txtDefaultRoomCapacity" xml:space="preserve">
    <value>1</value>
  </data>
</root>